<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3.14</title>
      <link href="/2024/03/14/3-14/"/>
      <url>/2024/03/14/3-14/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104869">Dashboard - The 2023 ICPC Asia Shenyang Regional Contest (The 2nd Universal Cup. Stage 13: Shenyang) - Codeforces</a></p><h2 id="C">C</h2><p>水题</p><hr><h2 id="E">E</h2><blockquote><p>题意：有羊 $x$ 只，狼 $y$ 只，有一人用一艘容量为 $p$ 的船要将所有的羊运到对岸，但当人不在的一边中狼严格大于羊的数量加 $q$ ，羊就会被吃掉。在保证羊安全的前提下至少需要运多少次。</p></blockquote><p>考虑设计 $dp$ 状态：$dp[i][j][k]$ ，表示人在 $k $ 岸时，初始岸的羊和狼的数量为 $i,j$ 时的最小次数。</p><p>因为求最少次数，用 $bfs$ 更新状态。每次可以转移如下：<br>$$<br>dp[i][j][1]\rightarrow dp[i-n][j-m][2],n+m=p,i-n\geq j-m+q<br>$$</p><p>$$<br>dp[i][j][2]\rightarrow dp[i][j+m][1]<br>$$</p><p>每次运送到对岸时都把容量排满是最优的；</p><p>往回运的时候只把多余的狼运回，保证对岸满足条件即可。</p><p>最终的答案就是 $dp[0][y’][2]$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">state</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y,id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n,m,p,q;</span><br><span class="line"><span class="type">int</span> d[N][N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; p &gt;&gt; q;</span><br><span class="line">    queue&lt;state&gt;heap;</span><br><span class="line"></span><br><span class="line">    heap.<span class="built_in">push</span>(&#123;n, m, <span class="number">1</span>&#125;);</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">    d[n][m][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(heap.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = heap.<span class="built_in">front</span>();</span><br><span class="line">        heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> x = t.x, y = t.y, id = t.id;</span><br><span class="line">        <span class="type">int</span> dis = d[x][y][id];</span><br><span class="line">        <span class="comment">//cout &lt;&lt; x &lt;&lt; &#x27; &#x27; &lt;&lt; y &lt;&lt; &#x27; &#x27; &lt;&lt; id &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">if</span>(!x) </span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            cout &lt;&lt; dis &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(id == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x + y &lt;= p) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[<span class="number">0</span>][<span class="number">0</span>][<span class="number">2</span>] == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    d[<span class="number">0</span>][<span class="number">0</span>][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="built_in">min</span>(x, p); i ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(p - i &gt;= y) </span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(d[x - i][<span class="number">0</span>][<span class="number">2</span>] == <span class="number">-1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            d[x - i][<span class="number">0</span>][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                            heap.<span class="built_in">push</span>(&#123;x - i, <span class="number">0</span>, <span class="number">2</span>&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">int</span> sheep = x - i;</span><br><span class="line">                        <span class="type">int</span> wolf = y - (p - i);</span><br><span class="line">                        <span class="keyword">if</span>(!sheep || (sheep + q &gt;= wolf &amp;&amp; d[sheep][wolf][<span class="number">2</span>] == <span class="number">-1</span>) )</span><br><span class="line">                        &#123;</span><br><span class="line">                            d[sheep][wolf][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                            heap.<span class="built_in">push</span>(&#123;sheep, wolf, <span class="number">2</span>&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sx = n - x, sy = m - y;</span><br><span class="line">            <span class="keyword">if</span>(sx &amp;&amp; sx + q &lt; sy)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> cnt = sy - sx - q;</span><br><span class="line">                <span class="keyword">if</span>(d[x][y + cnt][<span class="number">1</span>] == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    d[x][y + cnt][<span class="number">1</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123;x, y + cnt, <span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(d[x][y][<span class="number">1</span>] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d[x][y][<span class="number">1</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                heap.<span class="built_in">push</span>(&#123;x, y, <span class="number">1</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="J">J</h2><blockquote><p>题意：给出一颗树，两人轮流执行，每次选择相连的一对顶点 $u,v$ ，然后将所有与 $u$ 相连的顶点全部连向 $v$ ，保证每次操作之后的新树与操作之前的原树不是同构树，当某人无法操作时则输掉比赛。求谁会赢。</p></blockquote><p>找规律题。</p><p>最后的终止状态是一棵只有两层的树，所有的儿子都连向一个根节点。</p><p>因此，每次最优解是选择某一父节点与一个子节点，将所有与子节点相连的点连向父节点，相当于每次将深度减少一层，故只需统计每个点的度来判断满足条件的操作对。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> d[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        d[x]++;</span><br><span class="line">        d[y]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(d[i]&gt;=<span class="number">2</span>)cnt++;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;Bob&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;Alice&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">1</span>)cout&lt;&lt;<span class="string">&quot;Bob&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="K">K</h2><blockquote><p>题意：给出 $n$ 场比赛每场比赛后rating的升降，初始rating是0，可以随便安排比赛的顺序，问rating最大值的更新次数有多少种不同的取值。</p></blockquote><p><s>想出思路但是不会数据结构</s></p><p>将所有的rating分为正负两类，将正rating降序排列，将负rating求和看做一个整体，考虑负rating能产生多大的影响：</p><p>若将负rating放在最后，那么rating更新次数就是正rating的个数；</p><p>若将负rating放在最后一个正rating之前且大于最后一个正rating，那么rating更新次数就是正rating的个数-1；</p><p>若将负rating放在最后两个正rating之前且大于最后两个正rating和，那么rating更新次数就是正rating的个数-2；</p><p>……</p><p>假设前 $k$ 次更新可行，那么前 $k$ 个数的和一定大于所有rating的和，因此使用权值线段树，其中包括单点更新和查询操作，每次查询最少的最大的 $k$ 个数的和大于等于 $sum$ ，答案就是 $cnt(+)-k+1$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>, M = <span class="number">2</span> * N;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,num;</span><br><span class="line">LL sum;</span><br><span class="line">&#125;tr[<span class="number">4</span> * M + M * <span class="number">19</span>];</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> &amp;id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(id==<span class="number">0</span>)id=++tot;</span><br><span class="line">    tr[id].num+=val;</span><br><span class="line">    tr[id].sum+=pos*val;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l==r)<span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">update</span>(tr[id].l,l,mid,pos,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(tr[id].r,mid+<span class="number">1</span>,r,pos,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,LL sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum&lt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (sum+l<span class="number">-1</span>)/l;<span class="comment">//一个节点可能有重复的多个数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(tr[tr[id].r].sum&gt;sum)<span class="keyword">return</span> <span class="built_in">query</span>(tr[id].r,mid+<span class="number">1</span>,r,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(tr[id].l,l,mid,sum-tr[tr[id].r].sum)+tr[tr[id].r].num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> rt=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[i],<span class="number">1</span>);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> pos,t;</span><br><span class="line">        cin&gt;&gt;pos&gt;&gt;t;</span><br><span class="line">        <span class="keyword">if</span>(a[pos]&gt;<span class="number">0</span>)<span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[pos],<span class="number">-1</span>),cnt--;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;<span class="number">0</span>)<span class="built_in">update</span>(rt,<span class="number">1</span>,inf,t,<span class="number">1</span>),cnt++;</span><br><span class="line">        sum=sum-a[pos]+t;</span><br><span class="line">        a[pos]=t;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// cout&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;cnt&lt;&lt;&quot; &quot;&lt;&lt;query(rt,1,inf,sum)&lt;&lt;&quot; &quot;;</span></span><br><span class="line">        cout&lt;&lt;cnt-<span class="built_in">query</span>(rt,<span class="number">1</span>,inf,sum)+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> dp </tag>
            
            <tag> bfs/dfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性神经网络(1)-线性回归的实现</title>
      <link href="/2024/03/14/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/2024/03/14/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
          <category> 线性神经网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-10</title>
      <link href="/2024/03/11/%E5%91%A8%E8%B5%9B3-10/"/>
      <url>/2024/03/11/%E5%91%A8%E8%B5%9B3-10/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/509905">Dashboard - 3.10 周赛 - Codeforces</a></p><h2 id="A">A</h2><blockquote><p>题意：给出两个长为 $n$ 的字符串 $s$ ，$t$ ，找出满足如下的整数对 $(i,j)$ 的个数：子串 $s_is_{i+1}…s_l$ 字典序严格小于  $t_it_{i+1}…t_l$ 。</p></blockquote><p>若在某一位满足 $s_i&lt;t_i$ ，那么以 $i$ 为开头的所有整数对都满足；</p><p>若在连续多位 $s_i=t_i$ ，如果往后第一位不同的位上 $s_j&lt;t_j$ ，那么以 $i$ 开头，至少以 $j$ 结尾是可行的。</p><p>那么只需要统计 $s_i=t_i$ 是下一个最近的不等位的情况即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> p[<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> nxt[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">200005</span>],t[<span class="number">200005</span>];</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==t[i])p[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&lt;t[i])p[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;t[i])p[i]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span>)tmp=i;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">-1</span>)tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">0</span>)nxt[i]=tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;p[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;nxt[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">-1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span>)ans+=n-i;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nxt[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> ans+=n-nxt[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：每轮游戏中有以下情况发生：</p><ol><li>BOSS可以选择吟唱Regeneration咒语</li><li>你可以选择吟唱Poison咒语</li><li>你可以用剑进行攻击，并造成XXX点伤害</li><li>所有负面效果生效</li></ol><p>每层Regeneration可叠加一层回复r，每层Poison可叠加一层毒p，若在boss发动Regeneration时发动Poison可以时Regeneration层数减一。告诉回合数与每回合BOSS是否Regeneration以及可以发动Poison的总次数，求BOSS减少的最大血量。</p></blockquote><p><s>太妙的贪心辣</s></p><p>以BOSS是否回血进行分段，可以得出以下结论：</p><ol><li>在BOSS回血的当回合采用Poison比在以后任一回合采用Poison更优；</li><li>在BOSS回血后的第一回合采用Poison比在第二回合采用Poison更优；</li></ol><p>故采用双指针，head指向第一个BOSS没回血的回合，tail指向第一个BOSS回血的回合，比较在哪个回合下毒贡献最大。后续head往后移到下一个回合，tail移到下一个BOSS回复的回合。多余的次数从头依次下毒。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,X,r,p,k;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> cnt,bos[N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld%lld%lld&quot;</span>,&amp;n,&amp;X,&amp;r,&amp;p,&amp;k);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">    ans=n*X;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(s[i]==<span class="string">&#x27;1&#x27;</span>)  ans-=(n-i+<span class="number">1</span>)*r;  </span><br><span class="line">    <span class="type">int</span> x=<span class="number">1</span>,y=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[y]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;y&lt;=n)  ++y;</span><br><span class="line">    <span class="keyword">while</span>(s[x]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;x&lt;=n)  ++x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> tot=<span class="number">1</span>;x&lt;=n+<span class="number">1</span>&amp;&amp;y&lt;=n+<span class="number">1</span>&amp;&amp;tot&lt;=k;++tot)&#123;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;(n-x+1)*p&lt;&lt;&quot; &quot;&lt;&lt;(n-y+1)*(p+r)&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>((n-x+<span class="number">1</span>)*p&lt;(n-y+<span class="number">1</span>)*(p+r))&#123;</span><br><span class="line">            ans+=(n-y+<span class="number">1</span>)*(p+r);</span><br><span class="line">            ++y;</span><br><span class="line">            <span class="keyword">while</span>(s[y]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;y&lt;=n)    ++y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans+=(n-x+<span class="number">1</span>)*p;</span><br><span class="line">            ++x;</span><br><span class="line">            <span class="keyword">while</span>(s[x]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;x&lt;=n)  ++x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：有 $2n$ 个点，每个点表示为 $(a_i,b_i)$ ，把它们分成 $n$ 对，使得 $\sum max(|a_i-a_j|,|a_i-b_j|,|b_i-a_j|,|b_i-b_j|$ 最大。</p></blockquote><p><s>真是 蠢死辣</s></p><p>保证每个点的 $a$ 大于 $b$ ，那么两个点的最大值即为 $max(a_i-b_j,a_j-b_i)$ ，若前项大于后项，移项得 $a_i+b_i&gt;a_j+b_j$ ，故按照和排序，前 $n$ 个点选 $a$ ，后 $n$ 个点选 $b$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    LL a, b;</span><br><span class="line">    LL sum;</span><br><span class="line">&#125;f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.sum &gt; y.sum) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n * <span class="number">2</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;f[i].a, &amp;f[i].b);</span><br><span class="line">         <span class="keyword">if</span>(f[i].a &lt; f[i].b) <span class="built_in">swap</span>(f[i].a, f[i].b);</span><br><span class="line">         f[i].sum = f[i].a + f[i].b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(f + <span class="number">1</span>, f + <span class="number">1</span> + <span class="number">2</span> * n, cmp);</span><br><span class="line">    <span class="comment">//for(int i =1; i &lt;= 2 * n; i ++) cout &lt;&lt; f[i].a &lt;&lt; &#x27; &#x27; &lt;&lt; f[i].b &lt;&lt; &#x27; &#x27; &lt;&lt; f[i].sum &lt;&lt; endl;</span></span><br><span class="line">    LL suma = <span class="number">0</span>, sumb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) suma += f[i].a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i ++) sumb += f[i].b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, suma - sumb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="J">J</h2><blockquote><p>题意： 将一个长 $2n$ 的只包含 $ABC$ 串分成 $n $ 个子串，相对顺序不变，但是分出来的子串只能是 $AB,BC,AC$ 三者之一。求是否可行并求分解方案。</p></blockquote><p><s>全是贪心哈哈</s></p><p>首先考虑把 $B$ 分配完。注意到条件特征， $B$ 既可以和 $A$ 结合，也可以和 $C$ 结合，那么当 $B$ 全部分配后剩下的 $A$ 和 $B$ 数量应该相等。将 $A$ ，$B$ ，$C$ 出现的下标分别储存下来，因为最后 $A$ ，$C$ 结合时要保证 $A$ 的下标要比 $B$ 小，故在处理 $B$ 时贪心策略如下：</p><ol><li>与 $A$ 结合时应尽量消去 $A$ 较大的元素，即用 $B$ 最大的元素去消去能消去的 $A$ 最大的元素。</li><li>与 $C$ 结合时应尽量消去 $C$ 较大的元素，即用 $B$ 最大的元素去消去能消去的 $C$ 最小的元素。</li><li>最后 $AC$ 依次配对。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">pragma</span> GCC optimize(3)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;ans;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt;A,B,C;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>, &amp;n, str + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n * <span class="number">2</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&#x27;A&#x27;</span>) A.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i] == <span class="string">&#x27;B&#x27;</span>) B.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="keyword">else</span> C.<span class="built_in">insert</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cnt1 = A.<span class="built_in">size</span>(), cnt2 = B.<span class="built_in">size</span>(), cnt3 = C.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span>(cnt1 &gt; n || cnt3 &gt; n) <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> b1 = n - cnt1, b2 = n - cnt3;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; b1; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(B.<span class="built_in">begin</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = C.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(!C.<span class="built_in">empty</span>() &amp;&amp; it != C.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *it;</span><br><span class="line">                B.<span class="built_in">erase</span>(t), C.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;t, k&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; b2; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(--B.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = A.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(!A.<span class="built_in">empty</span>() &amp;&amp; it != A.<span class="built_in">begin</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *(-- it);</span><br><span class="line">                B.<span class="built_in">erase</span>(t), A.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;k, t&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;           </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ss = A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(A.<span class="built_in">begin</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = C.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(it != C.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *(it);</span><br><span class="line">                A.<span class="built_in">erase</span>(t), C.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;t, k&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> c : ans) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, c.first, c.second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="L">L</h2><blockquote><p>题意：给一个长度为 $3n$ 的只含有 $ABC$ 的字符串，现要得到的字符串中每个字母出现的次数均为 $n$ 次，可以进行如下操作：选择某个连续子串并将这个子串所有字母变成同一个字母。求最小操作方案。</p></blockquote><p><s>贪死我辣</s></p><p>首先可以想到最多操作两次。首先预处理某一位置之前每个字母出现次数。分为以下情况：</p><ol><li>不需要操作。</li><li>操作1次：将某一段子串变成某一字母后，另两种字母的数量均为 $n$ ，可以用双指针处理。</li><li>操作2次：当第一次某一字母出现 $n$ 次后，将后面的字符串直接变成对应数量另两种字母。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> cnt[N][<span class="number">4</span>];</span><br><span class="line"><span class="type">char</span> s[<span class="number">1000006</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">change1</span><span class="params">(<span class="type">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>, y = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">2</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>; l &lt;= <span class="number">3</span> * n; )&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) r = l;</span><br><span class="line">        <span class="keyword">while</span>((cnt[r][x] - cnt[l - <span class="number">1</span>][x] &lt; cnt[<span class="number">3</span> * n][x] - n || cnt[r][y] - cnt[l - <span class="number">1</span>][y] &lt; cnt[<span class="number">3</span> * n][y] - n) &amp;&amp; r &lt;= <span class="number">3</span> * n) r++;</span><br><span class="line">        <span class="keyword">if</span>(cnt[r][x] - cnt[l - <span class="number">1</span>][x] == cnt[<span class="number">3</span> * n][x] - n &amp;&amp; cnt[r][y] - cnt[l - <span class="number">1</span>][y] == cnt[<span class="number">3</span> * n][y] - n)&#123;</span><br><span class="line">            <span class="keyword">return</span> cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl &lt;&lt; l &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c &lt;&lt; endl, <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change2</span> <span class="params">(<span class="type">char</span> c, <span class="type">int</span> maxc)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">        <span class="type">int</span> x = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>) % <span class="number">3</span>, y = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">2</span>) % <span class="number">3</span>;</span><br><span class="line">        <span class="type">char</span> X = x + <span class="string">&#x27;A&#x27;</span>, Y = y + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; maxc + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; maxc + n - cnt[maxc][x + <span class="number">1</span>]  &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; X &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; maxc + n - cnt[maxc][x + <span class="number">1</span>] + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">3</span> * n &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; Y &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>*n;i++)cin&gt;&gt;s[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span> * n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++) cnt[i][j] = cnt[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;A&#x27;</span>) cnt[i][<span class="number">1</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;B&#x27;</span>) cnt[i][<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;C&#x27;</span>) cnt[i][<span class="number">3</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cnt[<span class="number">3</span> * n][<span class="number">1</span>] == cnt[<span class="number">3</span> * n][<span class="number">2</span>] &amp;&amp; cnt[<span class="number">3</span> * n][<span class="number">2</span>] == n)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">change1</span>(<span class="string">&#x27;A&#x27;</span>) || <span class="built_in">change1</span>(<span class="string">&#x27;B&#x27;</span>) || <span class="built_in">change1</span>(<span class="string">&#x27;C&#x27;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// int maxc = 0;</span></span><br><span class="line">    <span class="comment">// char maxch;</span></span><br><span class="line">    <span class="comment">// for(int i = 1; i &lt;= 3 * n; i++) if(!maxc &amp;&amp; cnt[i][s[i]-&#x27;A&#x27; + 1] == n) maxc = i, maxch = s[i];</span></span><br><span class="line">    <span class="comment">// change2(maxch, maxc);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span> * n; i++) <span class="keyword">if</span>(cnt[i][s[i]-<span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>] == n)&#123;<span class="built_in">change2</span>(s[i], i);<span class="keyword">break</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> greedy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reminder</title>
      <link href="/2024/03/11/Reminder/"/>
      <url>/2024/03/11/Reminder/</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>快读快写，ios。</p></div><div class="note warning modern"><p>注意memset中sizeof的用法。可以直接循环数组清零</p></div><div class="note warning modern"><p>在set中找元素不能用<code>lower_bound(C.begin(), C.end(), t)</code>，应该用<code>C.lower_bound(t)</code>。</p></div><div class="note danger modern"><p>注意数据范围。long long。一定要算清楚</p></div>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Appendix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-7</title>
      <link href="/2024/03/07/%E5%91%A8%E8%B5%9B3-7/"/>
      <url>/2024/03/07/%E5%91%A8%E8%B5%9B3-7/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104821">Dashboard - The 2023 ICPC Asia Nanjing Regional Contest (The 2nd Universal Cup. Stage 11: Nanjing) - Codeforces</a></p><p><s>SUA牛逼</s></p><h2 id="A">A</h2><blockquote><p>题意：在一个 $n\times m$ 的网格中有很多洞，没有洞的位置上都有一只袋鼠，现在控制所有袋鼠上下左右移动，移出网格或到洞里就会淘汰，问对每一只袋鼠，能否存在一种操作序列使其成为最后一只袋鼠，求这样的袋鼠的数量。$n\times m\leq1000$</p></blockquote><p>一个比较难写的bfs。</p><p>对每个袋鼠，考虑它是否能将其他所有袋鼠都带进坑里，可用 $(i,j,i’,j’)$ 表示，在存储状态时将其哈希处理为 $S=n\times m\times n\times i+n\times m\times j+m\times i’+j’$ 。在bfs时，将某一初始状态能到达的所有位置都记录下初始位置进行剪枝，若以后的初始状态遍历过，那么就直接跳过。复杂度 $O(n^2\times m^2)$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXP 1000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, ans;</span><br><span class="line">vector&lt;string&gt; MAP;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[MAXP + <span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> vis[MAXP * MAXP + <span class="number">10</span>];</span><br><span class="line"><span class="type">bool</span> flag[MAXP * MAXP + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gao</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">        i * m * n * m +</span><br><span class="line">        j * n * m +</span><br><span class="line">        r * m +</span><br><span class="line">        c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ungao</span><span class="params">(<span class="type">int</span> msk, <span class="type">int</span> &amp;i, <span class="type">int</span> &amp;j, <span class="type">int</span> &amp;r, <span class="type">int</span> &amp;c)</span> </span>&#123;</span><br><span class="line">    i = msk / (m * n * m);</span><br><span class="line">    j = msk / (n * m) % m;</span><br><span class="line">    r = msk / m % n;</span><br><span class="line">    c = msk % m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">fall</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span> || i &gt;= n || j &gt;= m || MAP[i][j] == <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">short</span> dir[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> S)</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(S); vis[S] = S;</span><br><span class="line">    flag[S] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> i, j, r, c; <span class="built_in">ungao</span>(q.<span class="built_in">front</span>(), i, j, r, c); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">            <span class="type">int</span> ii = i + dir[k][<span class="number">0</span>], jj = j + dir[k][<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> rr = r + dir[k][<span class="number">0</span>], cc = c + dir[k][<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fall</span>(ii, jj)) <span class="keyword">continue</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fall</span>(rr, cc)) &#123; flag[S] = <span class="literal">true</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">            <span class="type">int</span> nxt = <span class="built_in">gao</span>(ii, jj, rr, cc);</span><br><span class="line">            <span class="keyword">if</span> (vis[nxt] &gt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(nxt); vis[nxt] = S;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> r = <span class="number">0</span>; r &lt; n; r++) <span class="keyword">for</span> (<span class="type">int</span> c = <span class="number">0</span>; c &lt; m; c++) <span class="keyword">if</span> (MAP[r][c] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == r &amp;&amp; j == c) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> msk = <span class="built_in">gao</span>(i, j, r, c);</span><br><span class="line">        <span class="keyword">if</span> (vis[msk] == <span class="number">-1</span>) <span class="built_in">bfs</span>(msk);</span><br><span class="line">        <span class="keyword">if</span> (!flag[vis[msk]]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    MAP.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">        MAP.<span class="built_in">push_back</span>(<span class="built_in">string</span>(s));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">-1</span>, <span class="built_in">sizeof</span>(<span class="type">int</span>) * (n * m * n * m + <span class="number">3</span>));</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++) <span class="keyword">if</span> (MAP[i][j] == <span class="string">&#x27;.&#x27;</span>) ans += <span class="built_in">check</span>(i, j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> tcase; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tcase);</span><br><span class="line">    <span class="keyword">while</span> (tcase--) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="C">C</h2><blockquote><p>求不超过 $m$ 的 $g$ 的数量，其中 $g\bigoplus(P-1)\equiv1(mod P)$。</p></blockquote><p>化简后可得到 $g=(P-1)\bigoplus(kP+1)$ 。注意到：<br>$$<br>a-b\leq a\bigoplus b\leq a+b<br>$$<br>故：<br>$$<br>(k-1)P+2\leq g\leq(k+1)P<br>$$<br>因有 $m$ 的限制，得到当 $k$ 满足 $k\leq \lfloor\frac{m}{P}\rfloor-1$ 时一定满足，当 $k\geq \lceil\frac{m-2}{p}\rceil+1$ 时一定不满足。接下来只需要枚举这两个之间有无满足的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL p,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; p &gt;&gt; m;</span><br><span class="line"><span class="keyword">if</span>((m - <span class="number">2</span>) / p + <span class="number">1</span> &lt; <span class="number">0</span> )</span><br><span class="line"><span class="keyword">if</span>( <span class="number">1</span> ^ (p - <span class="number">1</span>) &lt;= m) cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> LL cnt1 = m / p;  </span><br><span class="line"><span class="keyword">for</span>(LL i = <span class="built_in">max</span>(<span class="number">0ll</span>, m / p) ; i &lt;= (m - <span class="number">2</span>) / p + <span class="number">1</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; ((i * p + 1) ^ (p - 1)) &lt;&lt; &#x27; &#x27; &lt;&lt; i &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span>(((LL)(i * p + <span class="number">1</span>) ^ (p - <span class="number">1</span>)) &lt;= m) cnt1  ++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cnt1 &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(T --) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：有一个长度为 $m$ 的序列初始为空，第 $i$ 次操作可以把一些数变成 $i$ ，问能否打乱操作顺序但是使最后的序列相同。</p></blockquote><p>对于每一个位置，所涉及的操作有先后顺序，最后该位的数字所涉及的操作需最后执行，用拓扑排序解决。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> din[N],dout[N];</span><br><span class="line"><span class="type">int</span> h[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> color[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;ver[N + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    unordered_set&lt;LL&gt;S;</span><br><span class="line">    idx = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)  h[i] = <span class="number">-1</span>, color[i] = din[i] = dout[i] = st[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) ver[i].<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt;</span><br><span class="line">        cin &gt;&gt; cnt;</span><br><span class="line">        <span class="keyword">while</span>(cnt --)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> a;</span><br><span class="line">            cin &gt;&gt; a;</span><br><span class="line">            color[a] = i;</span><br><span class="line">            ver[a].<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = color[i];</span><br><span class="line">        <span class="keyword">if</span>(!color[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> c : ver[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c &gt;= t) <span class="keyword">continue</span>;</span><br><span class="line">            LL hash = (LL)c * N + t;</span><br><span class="line">            <span class="keyword">if</span>(!S.<span class="built_in">count</span>(hash)) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">add</span>(c, t);</span><br><span class="line">                S.<span class="built_in">insert</span>(hash);</span><br><span class="line">                din[t] ++;</span><br><span class="line">                dout[c] ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;path;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">if</span>(!din[i])</span><br><span class="line">            q.<span class="built_in">push</span>(i);</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="type">int</span> tt = q.<span class="built_in">front</span>();</span><br><span class="line">            st[t] = st[tt] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(t &gt; tt) path.<span class="built_in">push_back</span>(t),path.<span class="built_in">push_back</span>(tt);</span><br><span class="line">            <span class="keyword">else</span> path.<span class="built_in">push_back</span>(tt), path.<span class="built_in">push_back</span>(t);</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        path.<span class="built_in">push_back</span>(t);</span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = h[t]; ~i; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span>(!(--din[j])) q.<span class="built_in">push</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> c : path) cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">            <span class="keyword">if</span>(!st[i]) cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种简化的思路，只要比较相邻两次操作能否交换即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> col[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; vec[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    vec[i].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)   col[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="type">int</span> p,u;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p);</span><br><span class="line">            <span class="keyword">while</span>(p--)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;u);</span><br><span class="line">                vec[i].<span class="built_in">push_back</span>(u);</span><br><span class="line">                col[u]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</span><br><span class="line">            <span class="type">int</span> mn=n+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> v:vec[i])&#123;</span><br><span class="line">                <span class="keyword">if</span>(col[v]==i)    <span class="keyword">continue</span>;</span><br><span class="line">                mn=<span class="built_in">min</span>(mn,col[v]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mn!=i+<span class="number">1</span>) &#123;</span><br><span class="line">                ans=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==ans)  <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>,i+<span class="number">1</span>,i),++i;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>   <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><p><s>真心没想到</s></p><blockquote><p>题意：在普通01背包的条件下添加附加条件：可以免费任选 $k $ 件物品，求最大价值。$n\leq 5000,W\leq 100000$ 。</p></blockquote><p>根据以下条件贪心：</p><ol><li>若某物品选择免费挑而不是买，那么一定这件物品更贵；</li><li>若挑选了物品 $A$ 而没有挑选 $B$ ，那么一定 $A$ 比 $B$ 价值高。</li></ol><p>因此贪心策略如下：</p><p>将所有物品按照价格排序，枚举分界点，在分界点前按照背包预处理答案，分界点后免费挑价值最大的 $k$ 件物品。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; a[<span class="number">500005</span>];</span><br><span class="line"><span class="type">int</span> tmp[<span class="number">500005</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i].first&gt;&gt;a[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    multiset&lt;<span class="type">int</span>&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp[i]=tmp[i+<span class="number">1</span>]+a[i].second;</span><br><span class="line">        s.<span class="built_in">insert</span>(a[i].second);</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">size</span>()&gt;k)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp[i]-=*s.<span class="built_in">begin</span>();</span><br><span class="line">            s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=a[i].first;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[j]=<span class="built_in">max</span>(dp[j],dp[j-a[i].first]+a[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// for(int i=0;i&lt;=m;i++)cout&lt;&lt;dp[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// cout&lt;&lt;i&lt;&lt;&#x27; &#x27;&lt;&lt;dp[m]&lt;&lt;&#x27; &#x27;&lt;&lt;tmp[i+1]&lt;&lt;endl;</span></span><br><span class="line">        ans=<span class="built_in">max</span>(ans,dp[m]+tmp[i+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="L">L</h2><blockquote><p>题意：有很多重量只为1或2的包裹，他们需要运送到不同的楼层，每次电梯的最大载重量为 $k$ ，且 $k$ 为偶数，每一次运输消耗的电能是本次运输到达的最高楼层的层数。求最小电能。</p></blockquote><p>首先容易想到贪心思路：从高楼层开始运输，若电梯容量仅为1但下一个包裹为2，那么往后找第一个重量为1的包裹。</p><p>优化：将包裹都拆分成重量为1，直接从高楼层开始运输。</p><p>$proof:$ 注意到题目特殊条件 $k$ 为偶数。当容量仅为1时，若不将下一个重量为1的包裹提前，那么只可能在下一个重量为1的包裹之前会有影响：因这之间所有包裹重量均为2，故唯一的影响是所有包裹往前进1，不影响每次最大楼层，故贪心正确。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> K, ans;</span><br><span class="line">vector&lt;pii&gt; A;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>, &amp;n, &amp;K);</span><br><span class="line"></span><br><span class="line">    A.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y, z; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        <span class="comment">// 把所有大小为 2 的包裹拆成两个大小为 1 的包裹</span></span><br><span class="line">        A.<span class="built_in">push_back</span>(<span class="built_in">pii</span>(-z, x * y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 按楼层从高到低排序</span></span><br><span class="line">    <span class="built_in">sort</span>(A.<span class="built_in">begin</span>(), A.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// now：这一趟电梯的最高楼层</span></span><br><span class="line">    <span class="comment">// sm：现在电梯里已经放了多少包裹</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> now = -A[<span class="number">0</span>].first, sm = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 依次处理每种包裹</span></span><br><span class="line">    <span class="keyword">for</span> (pii p : A) &#123;</span><br><span class="line">        sm += p.second;</span><br><span class="line">        <span class="comment">// 新包裹的加入导致电梯里放了超过 K 个包裹</span></span><br><span class="line">        <span class="keyword">if</span> (sm &gt; K) &#123;</span><br><span class="line">            ans += now;</span><br><span class="line">            now = -p.first;</span><br><span class="line">            sm -= K;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 用除法快速处理同一种包裹</span></span><br><span class="line">            <span class="comment">// 这里分子是 sm - 1，是为了防止 sm % K == 0 的情况，导致 now 的值出错</span></span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> t = (sm - <span class="number">1</span>) / K;</span><br><span class="line">            ans += now * t;</span><br><span class="line">            sm -= t * K;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans += now;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> tcase; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tcase);</span><br><span class="line">    <span class="keyword">while</span> (tcase--) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> bfs/dfs </tag>
            
            <tag> math </tag>
            
            <tag> greedy </tag>
            
            <tag> topsort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf 932 div.2 4/6</title>
      <link href="/2024/03/06/cf-932-div-2/"/>
      <url>/2024/03/06/cf-932-div-2/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1935">Dashboard - Codeforces Round 932 (Div. 2) - Codeforces</a></p><hr><h2 id="C">C</h2><blockquote><p>题意：给出一个数组包含 $n$ 个元素，每个元素包含 $a$、$b$ 两个元素，在这个数组中找出最多的元素并令其下标为 $p_1,…,p_k$ ，使得：</p><p><img src="/images/cf/1.png" alt=""></p><p>不超过 $l$ 。$n^2\leq 2 \times 10^6$</p></blockquote><ol><li>把数组按照 $b$ 从大到小排序后，$n^2$ 遍历 $b$ 项的开头 $st$ 与结尾 $ed$ ，可以证得当 $b$ 降序排列时得到的和最小。</li><li>用 $multiset$ 维护 $st$ 与 $ed$ 之间的 $a$ 的最大值。</li></ol><div class="note info modern"><p>不用担心在multiset中将ed元素的a值删除，因为删除后等效于ed位置提前，且b项的值还变大了，故不会影响答案统计</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;x,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.second&gt;y.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,l;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;l;</span><br><span class="line">    pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;a[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i].first&gt;&gt;a[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        multiset&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=a[j].first;</span><br><span class="line">            q.<span class="built_in">insert</span>(a[j].first);</span><br><span class="line">            <span class="keyword">while</span>(q.<span class="built_in">size</span>() &amp;&amp; sum+a[i].second-a[j].second&gt;l)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mx=*q.<span class="built_in">rbegin</span>();</span><br><span class="line">                sum-=mx;</span><br><span class="line">                q.<span class="built_in">erase</span>(q.<span class="built_in">find</span>(mx));</span><br><span class="line">            &#125;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,(<span class="type">int</span>)q.<span class="built_in">size</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><blockquote><p>题意：给出一个大小为 $n$ 的集合 $s$ 和整数 $c$ 。对于这个集合，计算出 $0\leq x\leq y\leq c$ ， $x+y$ 、$y-x$ 不包含在集合 $s$  中的整数对 $(x,y)$ 的数量。</p></blockquote><p>考虑容斥的思想，$ans(x,y)=cnt(x,y)-cnt(x,y,x+y\in s)-cnt(x,y,y-x\in s)+cnt(x,y,x+y\in s,y-x\in s)$。</p><ol><li>$cnt(x,y)=C_{c+1}^{2}+c+1=\frac{(c+1)(c+2)}{2}$</li><li>$cnt(x,y,x+y\in s)=\lfloor \frac{a_{i}}{2}\rfloor+1 $</li><li>$cnt(x,y,y-x\in s)=c-a_{i}+1$</li><li>$cnt(x,y,x+y\in s,y-x\in s)=\frac{even(even+1)}{2}+\frac{ood(odd+1)}{2}$</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n,c;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">5</span>];</span><br><span class="line">        <span class="type">int</span> ev=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> od=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans=(c+<span class="number">1</span>)*(c+<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">0</span>)ev++;</span><br><span class="line">            <span class="keyword">else</span> od++;</span><br><span class="line">            ans-=a[i]/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">            ans-=c-a[i]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=ev*(ev+<span class="number">1</span>)/<span class="number">2</span>+od*(od+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.3</title>
      <link href="/2024/03/04/%E5%91%A8%E8%B5%9B3-3/"/>
      <url>/2024/03/04/%E5%91%A8%E8%B5%9B3-3/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/508325">Dashboard - 2024.3.3 周赛 - Codeforces</a></p><hr><h2 id="C">C</h2><blockquote><p>题意：给出$p$，求整数对 $(a,b)$ 使得 $\frac{a}{b}=p$ 且 $\frac{a}{b},\frac{a+1}{b+1},\frac{a+2}{b+2}$ 均为整数。$p\leq10^{18}$</p></blockquote><p>通过数学化简后即为求满足以下条件的 $b$ ：$k\times(b+1)\times(b+2)=2\times(p-1),b+1|p-1$</p><p>关于求 $a\times b\times f(b)=p,p\leq10^{18}$ 时，可采用如下的方法：</p><ol><li>枚举 $a\in[1,\sqrt[3]p]$，使 $a$ 成为最小的值，然后手算出 $b$ 的值并判断是否满足条件。</li><li>枚举 $b\in[1,\sqrt[3]p]$， 使 $b$ 成为最小的值，然后判断 $a$ 是否满足条件。</li></ol><p>这种方法可以使时间复杂度为 $O(\sqrt[3]p)$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;LL&gt;ans;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; p;</span><br><span class="line">p = <span class="number">2</span>*(p <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL k = <span class="number">1</span>; k * k&lt;= <span class="number">9</span> * p / k; k ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p % k == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LL t = p / k;</span><br><span class="line"></span><br><span class="line">LL l = <span class="number">1</span>, r = t;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">LL mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>((mid + <span class="number">1</span>) &gt; t / (mid + <span class="number">2</span>)) r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( (r + <span class="number">1</span>) * (r + <span class="number">2</span>) == t)  </span><br><span class="line">&#123;</span><br><span class="line">LL b = r ;</span><br><span class="line"><span class="keyword">if</span>(p % (<span class="number">2</span> * b + <span class="number">2</span>)== <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL b = <span class="number">1</span>; (b + <span class="number">1</span>) * (b + <span class="number">1</span>) &lt;= <span class="number">9</span> * p / (b + <span class="number">1</span>); b ++)</span><br><span class="line">&#123;</span><br><span class="line">LL s = (b + <span class="number">1</span>) * (b + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(p % s == <span class="number">0</span> &amp;&amp; p % (<span class="number">2</span> * b + <span class="number">2</span>) == <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">ans.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>()), ans.<span class="built_in">end</span>());</span><br><span class="line">cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!ans.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> c : ans) cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T -- )<span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;); </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABC 343 7/7</title>
      <link href="/2024/03/03/AtCoder-ABC-343/"/>
      <url>/2024/03/03/AtCoder-ABC-343/</url>
      
        <content type="html"><![CDATA[<h2 id="E">E</h2><blockquote><p>题意：有三个7*7*7的立方体，问是否存在一种位置关系使得<strong>只</strong>被1个、2个、3个立方体覆盖的体积分别为$V_{1},V_{2},V_{3}$。</p></blockquote><p>令一个立方体的顶点坐标固定位$(0,0,0)$，枚举另两个立方体的顶点坐标范围。</p><div class="note warning modern"><p>第二个立方体的坐标是范围是$[0,14]$，第三个立方体的坐标范围是$[-7,14]$。</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v3</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2, <span class="type">int</span> a3, <span class="type">int</span> b3, <span class="type">int</span> c3)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(&#123;a1, a2, a3&#125;), a_min = <span class="built_in">min</span>(&#123;a1 + <span class="number">7</span>, a2 + <span class="number">7</span>, a3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(&#123;b1, b2, b3&#125;), b_min = <span class="built_in">min</span>(&#123;b1 + <span class="number">7</span>, b2 + <span class="number">7</span>, b3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(&#123;c1, c2, c3&#125;), c_min = <span class="built_in">min</span>(&#123;c1 + <span class="number">7</span>, c2 + <span class="number">7</span>, c3 + <span class="number">7</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v2</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(a1, a2), a_min = <span class="built_in">min</span>(a1 + <span class="number">7</span>, a2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(b1, b2), b_min = <span class="built_in">min</span>(b1 + <span class="number">7</span>, b2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(c1, c2), c_min = <span class="built_in">min</span>(c1 + <span class="number">7</span>, c2 + <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a1,<span class="type">int</span> b1,<span class="type">int</span> c1,<span class="type">int</span> a2,<span class="type">int</span> b2,<span class="type">int</span> c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cr3=<span class="built_in">calc_v3</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1,a2,b2,c2);</span><br><span class="line">    <span class="type">int</span> cr2=<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1)+<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a2,b2,c2)+<span class="built_in">calc_v2</span>(a1,b1,c1,a2,b2,c2)-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> cr1=<span class="number">7</span>*<span class="number">7</span>*<span class="number">7</span>*<span class="number">3</span>-cr2*<span class="number">2</span>-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(cr3==v3&amp;&amp;cr2==v2&amp;&amp;cr1==v1)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：给一个数组，支持两种操作：</p><p>$1\  p\ x$：将$a_{p}$改为$x$；</p><p>$2\ l \ r$：求出区间$[l,r]$的第二大的数的数量。</p></blockquote><p>用线段树维护，重点在于push_up的操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">t</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">int</span> mx[<span class="number">2</span>],cnt[<span class="number">2</span>];<span class="comment">//存储最大、第二大的数以及数量</span></span><br><span class="line">&#125;tr[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">t <span class="title">pushup</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,t x,t y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    mp[x.mx[<span class="number">0</span>]]+=x.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[x.mx[<span class="number">1</span>]]+=x.cnt[<span class="number">1</span>];</span><br><span class="line">    mp[y.mx[<span class="number">0</span>]]+=y.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[y.mx[<span class="number">1</span>]]+=y.cnt[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> it=mp.<span class="built_in">rbegin</span>();</span><br><span class="line"></span><br><span class="line">    t res;</span><br><span class="line">    res.l=l,res.r=r;</span><br><span class="line">    res.mx[<span class="number">0</span>]=it-&gt;first;</span><br><span class="line">    res.mx[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;first;</span><br><span class="line">    res.cnt[<span class="number">0</span>]=it-&gt;second;</span><br><span class="line">    res.cnt[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;second;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：给出$N\leq20$个字符串$S$，求字符串$T$的最小长度使得所有的$S_i$都是$T$的子串。</p></blockquote><p>首先用hash求出任两个字符串首尾相接能够消除的长度，然后考虑用状压dp计算答案。</p><p>设 $dp[i][j]$表示已选的字符串排列为 $i$ 且最后一个选的字符串时 $S_j$ 时的最小长度。</p><p>转移方程为：<br>$$<br>dp[state|1&lt;&lt;k][k]=max(dp[state|1&lt;&lt;k][k],dp[state][i]+dis[i][j])<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>, M = <span class="number">2e5</span> + <span class="number">1</span>, Base = <span class="number">29</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str[M + <span class="number">1</span>]; <span class="type">int</span> len[N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> powBase[M], hashy[N][M];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dis[N][N], dp[<span class="number">1</span> &lt;&lt; N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    powBase[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; M; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        powBase[i] = powBase[i - <span class="number">1</span>] * Base;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line">        len[i] = (<span class="type">int</span>)<span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= len[i]; ++j) </span><br><span class="line">        &#123;</span><br><span class="line">            hashy[i][j] = hashy[i][j - <span class="number">1</span>] * Base + str[j] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> del = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) </span><br><span class="line">        <span class="keyword">if</span> (i != j &amp;&amp; !(del &amp; <span class="number">1</span> &lt;&lt; j)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> leni = len[i], lenj = len[j];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// leni&gt;lenj</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= leni - lenj + <span class="number">1</span>; ++k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[i][k + lenj - <span class="number">1</span>] - hashy[i][k - <span class="number">1</span>] * powBase[lenj] == hashy[j][lenj]) </span><br><span class="line">                &#123;</span><br><span class="line">                    del |= <span class="number">1</span> &lt;&lt; j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (del &amp; <span class="number">1</span> &lt;&lt; j) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//d[i,j]表示i的后缀是j的前缀的最大长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = lenj - <span class="number">1</span>; k &gt;= <span class="number">0</span>; --k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[j][k] == hashy[i][leni] - hashy[i][leni - k] * powBase[k]) </span><br><span class="line">                &#123;</span><br><span class="line">                    dis[i][j] = lenj - k;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录有用的字符串</span></span><br><span class="line">    <span class="type">int</span> undel[N];</span><br><span class="line">    <span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i))undel[r++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    n = r;</span><br><span class="line">    <span class="type">int</span> all = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//dp[i,j]表示当前已选的排列为i时，再选第j个字符串的最小答案</span></span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        dp[<span class="number">1</span> &lt;&lt; i][i] = len[undel[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> state = <span class="number">1</span>; state &lt; all; ++state) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( !((state&gt;&gt;j)&amp;<span class="number">1</span>) )</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[state|<span class="number">1</span>&lt;&lt;j][j]=<span class="built_in">min</span>(dp[state|<span class="number">1</span>&lt;&lt;j][j],dp[state][i]+dis[undel[i]][undel[j]]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:dp[all])ans=<span class="built_in">min</span>(ans,i);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> AtCoder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> strings </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置hexo</title>
      <link href="/2024/03/01/%E9%85%8D%E7%BD%AEhexo/"/>
      <url>/2024/03/01/%E9%85%8D%E7%BD%AEhexo/</url>
      
        <content type="html"><![CDATA[<p>踩了好多坑。。。</p><p>服了。。。</p><h3 id="在文档中引用图片">在文档中引用图片</h3><blockquote><p>在source文件夹下单独建文件夹image存放图片，引用图片时用如下格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">text</span>](<span class="link">/images/foldername/filename</span>)</span><br></pre></td></tr></table></figure><p>在markdown中编译不出来，但能在hexo上显示</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p1.png" alt="图片设置"></p><p>编译时根目录在<strong>source</strong>文件夹，故直接在<strong>source</strong>下新建images文件夹，用相对路径引用即可。</p></blockquote><h3 id="建立图库">建立图库</h3><blockquote><h4 id="建立gallery-group">建立gallery group</h4><ol><li><p>建立图库时把图库当一个页面就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page gallery</span><br></pre></td></tr></table></figure></li><li><p>在gallery文件夹的index中先把type、top_img等改掉</p></li><li><p>在md文件下插入<code>html</code>代码块，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup &#x27;daily&#x27; &#x27;lovly moment&#x27; &#x27;/gallery/daily&#x27; https://pic.imgdb.cn/item/65e202a39f345e8d034511ee.jpg%&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>下载插件，在<code>front matter</code>中加入<code>password: </code>一项进行加密</p></li></ol><h4 id="建立gallery">建立gallery</h4><ol><li><p>在gallery文件夹下建立md，名称即为gallerygroup引用的名字。</p></li><li><p>在md中加入图片，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="加标签外挂">加标签外挂</h3><blockquote><p>在文章中直接用以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note mode modern %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><code>mode</code>可以是以下：</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p2.png" alt="mode形式"></p><p>效果如下</p></blockquote><div class="note success modern"><p>Yes you got it!</p></div>]]></content>
      
      
      <categories>
          
          <category> 基础环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
