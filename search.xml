<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>codeton round 8 4/9</title>
      <link href="/2024/04/02/ACM/cf%E3%80%81atc/codeton-round-8/"/>
      <url>/2024/04/02/ACM/cf%E3%80%81atc/codeton-round-8/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1942">Dashboard - CodeTON Round 8 (Div. 1 + Div. 2, Rated, Prizes!) - Codeforces</a></p><h2 id="B">B</h2><blockquote><p>题意：给出长度为 $n$ 的数组 $a$ ，求数组 $p$ ，使其为 $0,n-1$ 的 一个排列，且 $a_i=mex(p_1,p_2,…,p_i)-p_i$ 。</p></blockquote><p>从后往前即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line">        <span class="type">int</span> ans[n+<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> mex=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[i]=mex-a[i];</span><br><span class="line">            mex=<span class="built_in">min</span>(mex,ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="C1-C2">C1,C2</h2><blockquote><p>题意：给出一个正多边形 $n$ ，同时给出 $x$ 个点，只能在这些点之间连边，然后又给出 $y$ 个点，即可以再另选不超过 $y$ 个点使其也可以连边。求可以划出的最多的不重合的三角形的个数。</p></blockquote><p>$Easy\ version:\ y=0$</p><p>选中了 $k$ 个点那么一定可以构造出 $k-2$ 个三角形；在相邻两个点之间如果隔了1个点，即标号只差为2时，那么在中间自然产生出一个三角形。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n,x,y;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="type">int</span> a[x+<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)cin&gt;&gt;a[i];</span><br><span class="line">        <span class="type">int</span> ans=x<span class="number">-2</span>;</span><br><span class="line">        <span class="built_in">sort</span>(a+<span class="number">1</span>,a+x+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=x;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;&lt;&lt;a[i-1]&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(a[i]-a[i<span class="number">-1</span>]==<span class="number">2</span>)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]+n-a[x]==<span class="number">2</span>)ans++;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$Hard\ version:\ y\ !=0$</p><p>可以在两个相邻选中点之间加点。考虑如何加点最优。</p><ol><li>一定是隔一个点选一个点最优，这样总能自然构成一个三角形，</li><li>优先在标号相差为偶数的间隔内加点，这样的话不浪费点。</li><li>优先在标号差小的间隔内加点。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">1</span> &amp;&amp; y%<span class="number">2</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; y%<span class="number">2</span>==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> x&lt;y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n,x,y;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="type">int</span> a[x+<span class="number">12</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)cin&gt;&gt;a[i];</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(a+<span class="number">1</span>,a+x+<span class="number">1</span>);</span><br><span class="line">        a[x+<span class="number">1</span>]=a[<span class="number">1</span>]+n;</span><br><span class="line">        <span class="type">int</span> d[x+<span class="number">12</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)d[i]=a[i+<span class="number">1</span>]-a[i];</span><br><span class="line">        <span class="built_in">sort</span>(d+<span class="number">1</span>,d+x+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> v=x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(y-(d[i]<span class="number">-1</span>)/<span class="number">2</span>&gt;=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                y-=(d[i]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">                ans+=d[i]/<span class="number">2</span>;</span><br><span class="line">                v+=(d[i]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans+=y;</span><br><span class="line">                v+=y;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=v<span class="number">-2</span>;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.28</title>
      <link href="/2024/03/29/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-28/"/>
      <url>/2024/03/29/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-28/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104976">Dashboard - The 2023 ICPC Asia Hangzhou Regional Contest (The 2nd Universal Cup. Stage 22: Hangzhou) - Codeforces</a></p><h2 id="D">D</h2><blockquote><p>题意：给定 $n$ ，构造长为 $2n$ 的数列 $a$ ，使得<br>$$<br>(a_1 × a_2)+(a_3 × a_4)+ . . . +(a_{2n−1} × a_{2n}) = a_1 ×(a_2 + a_3)×(a_4 + a_5)× . . . ×(a_{2n−2} + a_{2n−1})× a_{2n}\neq 0<br>$$<br>且 $1\leq |a_i|\leq10^{10}$ 。</p></blockquote><p>分奇偶讨论，令 $a_1 $ 与 $a_{2n}$ 为1，然后其余的数交替为-1和2，使得乘法的每一项和为1，然后留下最中间的两个数，解方程得出。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> a[n*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1 -3 -3 1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1 -10 6 6 -10 1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1 -15 10 -1 -1 10 -15 1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[<span class="number">1</span>]=<span class="number">1</span>,a[n*<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i*<span class="number">2</span>]=<span class="number">-1</span>;</span><br><span class="line">            a[i*<span class="number">2</span>+<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">            a[<span class="number">2</span>*n-i*<span class="number">2</span>+<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line">            a[<span class="number">2</span>*n-i*<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[n]=<span class="number">1</span>;</span><br><span class="line">            a[n+<span class="number">1</span>]=<span class="number">2</span>*(n<span class="number">-3</span>)<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[n<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">            a[n+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(n==<span class="number">5</span>)a[n]=<span class="number">3</span>,a[n+<span class="number">1</span>]=<span class="number">-2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                a[n]=<span class="number">1</span>;</span><br><span class="line">                a[n+<span class="number">1</span>]=<span class="number">-2</span>*(n<span class="number">-6</span>)<span class="number">-2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans1+=a[i*<span class="number">2</span>]*a[i*<span class="number">2</span><span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)ans2*=a[i*<span class="number">2</span>]+a[i*<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：给出一条蛇身上每个点的位置，蛇在网格内移动，每次可以选择上下左右移动一步或者将尾巴缩短一节。蛇不能到边界之外、不能与障碍相碰、不能和自身相碰。设 $f(i,j)$ 表示蛇头从开始位置到 $(i,j)$ 经历的最小步数。求 $\sum\sum f(i,j)^2$ 。</p></blockquote><p>一开始想用bfs扩展，但是发现可能会导致重复更新。于是考虑最短路算法。</p><p>将所有点与相邻点之间连边，若不为蛇身的位置，直接由蛇头dij得到答案；</p><p>若为蛇身，假设蛇长 $k$ ，此时为蛇身上的第 $i$ 节，考虑当前步数 $d$ 与 $k-i$ 的关系，若 $d\leq k-i$ ，那么说明此时会和蛇相碰，那么答案就为 $d+(k-i-d+1)=k-i+1$ ，否则答案就为 $d$ ，将其加入优先队列等待更新。</p><p>但是这样做复杂度为 $O(nmlog(nm))$ ，刚好超时，可以优化一下：</p><ul><li><p>蛇身点用优先队列 $q1$ 维护。</p></li><li><p>非蛇身点直接用普通队列 $q2$ 维护，类似于bfs，一定是递增的。</p></li><li><p>每次在 $q1$ 和 $q2$ 中选择最小的点取出来进行更新。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line"><span class="type">char</span> g[<span class="number">3001</span>][<span class="number">3001</span>];</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">3001</span>][<span class="number">3001</span>];</span><br><span class="line">ll d[<span class="number">3001</span>][<span class="number">3001</span>];</span><br><span class="line"><span class="type">int</span> body[<span class="number">3001</span>][<span class="number">3001</span>];</span><br><span class="line"><span class="type">int</span> hx,hy;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dij</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[hx][hy]=<span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;pair&lt;<span class="type">int</span>,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;, vector&lt;pair&lt;<span class="type">int</span>,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; &gt;,greater&lt;pair&lt;<span class="type">int</span>,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; &gt; &gt;q1;<span class="comment">//body</span></span><br><span class="line">    queue&lt;pair&lt;ll,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; &gt;q2;<span class="comment">//notbody</span></span><br><span class="line"></span><br><span class="line">    q1.<span class="built_in">push</span>(&#123;<span class="number">0</span>,&#123;hx,hy&#125;&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q1.<span class="built_in">size</span>() || q2.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ans,x,y;</span><br><span class="line">        <span class="keyword">if</span>(q1.<span class="built_in">size</span>() &amp;&amp; q2.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(q1.<span class="built_in">top</span>().first&lt;q2.<span class="built_in">front</span>().first)</span><br><span class="line">            &#123;</span><br><span class="line">                ans=q1.<span class="built_in">top</span>().first;</span><br><span class="line">                x=q1.<span class="built_in">top</span>().second.first;</span><br><span class="line">                y=q1.<span class="built_in">top</span>().second.second;</span><br><span class="line">                q1.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans=q2.<span class="built_in">front</span>().first;</span><br><span class="line">                x=q2.<span class="built_in">front</span>().second.first;</span><br><span class="line">                y=q2.<span class="built_in">front</span>().second.second;</span><br><span class="line">                q2.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(q1.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            ans=q1.<span class="built_in">top</span>().first;</span><br><span class="line">            x=q1.<span class="built_in">top</span>().second.first;</span><br><span class="line">            y=q1.<span class="built_in">top</span>().second.second;</span><br><span class="line">            q1.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans=q2.<span class="built_in">front</span>().first;</span><br><span class="line">            x=q2.<span class="built_in">front</span>().second.first;</span><br><span class="line">            y=q2.<span class="built_in">front</span>().second.second;</span><br><span class="line">            q2.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(vis[x][y])<span class="keyword">continue</span>;</span><br><span class="line">        vis[x][y]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> nx=x+dx[i];</span><br><span class="line">            <span class="type">int</span> ny=y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(nx&lt;<span class="number">1</span> || nx&gt;n || ny&lt;<span class="number">1</span> || ny&gt;m || g[nx][ny]==<span class="string">&#x27;#&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(body[nx][ny]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ll tmp=d[x][y]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(tmp&lt;d[nx][ny])</span><br><span class="line">                &#123;</span><br><span class="line">                    d[nx][ny]=tmp;</span><br><span class="line">                    q2.<span class="built_in">push</span>(&#123;tmp,&#123;nx,ny&#125;&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ll tmp=<span class="built_in">max</span>(d[x][y]+<span class="number">1</span>,(ll)k-body[nx][ny]+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(tmp&lt;d[nx][ny])</span><br><span class="line">                &#123;</span><br><span class="line">                    d[nx][ny]=tmp;</span><br><span class="line">                    q1.<span class="built_in">push</span>(&#123;tmp,&#123;nx,ny&#125;&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        body[x][y]=i;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)hx=x,hy=y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;g[i]+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="built_in">sizeof</span>(d));</span><br><span class="line">    <span class="built_in">dij</span>();</span><br><span class="line"></span><br><span class="line">    ull sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(d[i][j]&lt;<span class="number">0x3f3f3f3f</span> &amp;&amp; g[i][j]!=<span class="string">&#x27;#&#x27;</span>)sum+=(ull)d[i][j]*d[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="H">H</h2><blockquote><p>题意：有 $n$ 个人，每个人最初有 $a_i$ 颗糖，现在有 $n$ 个事件按随机顺序发生：第 $i$ 个事件表示若 $i$ 的糖比 $b_i$ 的糖少，那么 $i$ 获得 $w_i$ 颗糖。求最后每个人获得的糖的期望。</p></blockquote><p>只有当 $a[b_i]\leq a[i]&lt;a[b_i]+w[b_i]$ 时 $i$ 才会得到奖励，否则 $i$ 的值是固定的。那么可以遍历所有有效限制关系，使具有如上关系的 $b_i$ 成为 $i$ 的父亲，然后若遇到确定的 $i$ ，那么打上标记，使其成为根节点。这棵树代表了先后顺序，只有父节点获得了糖，子节点才会获得糖。</p><p>最后会构成很多棵树，从根节点往下遍历：若根节点的值是确定的且不会获得糖，那么这棵子树的所有子节点都不会获得糖；若根节点能获得糖，那么往下遍历，假设从根到某个点经历了 $x$ 个点，那么该点获得糖的概率就是 $\frac{1}{x!}$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">10</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N],b[N],w[N];</span><br><span class="line"><span class="type">int</span> inv[N],jcinv[N];</span><br><span class="line"><span class="type">int</span> cnt,head[N],nxt[N],to[N];</span><br><span class="line"><span class="type">bool</span> h[N],rt[N],vis[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">    nxt[++cnt]=head[u];</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">    to[cnt]=v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> tot)</span></span>&#123;</span><br><span class="line">    ans[u]=(ans[u]+jcinv[tot]*w[u]%mod)%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=head[u];i;i=nxt[i])&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(to[i],tot+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;T);</span><br><span class="line">    inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    jcinv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">5e5</span>;++i)&#123;</span><br><span class="line">        inv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class="line">        jcinv[i]=jcinv[i<span class="number">-1</span>]*inv[i]%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout&lt;&lt;&quot;asdf&quot;&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   head[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            ans[i]=a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[b[i]]&lt;=a[i]&amp;&amp;a[i]&lt;a[b[i]]+w[b[i]])    <span class="built_in">add</span>(b[i],i),rt[i]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> rt[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!rt[i])  <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;=a[b[i]]+w[b[i]])   <span class="keyword">continue</span>;</span><br><span class="line">            <span class="comment">// cout&lt;&lt;&quot;asdf&quot;&lt;&lt;endl;</span></span><br><span class="line">            <span class="built_in">dfs</span>(i,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,ans[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="J">J</h2><blockquote><p>题意：给出有 $n$ 个节点的树，这棵树有两种形态，要么是一条链，要么是有一个根节点，其有 $n-1$ 个儿子。现在可以询问 $\lceil\frac{n}{2}\rceil+3$ 次，每次询问可以问两个点，judge会告诉这两个点是否有边直接相连。确定这棵树是什么形态。</p></blockquote><ol><li>首先两两询问直到找到两个点 $u,v$ 有边相连，花费 $\lceil\frac{n}{2}\rceil$ 次。</li><li>对于 $u$ ，任找一个点 $x$ 询问，若 $u,x$ 有边，那么再随机询问 $u,y$ ，若有边则是状态2，若无边则一定是状态1。若 $u,x$ 无边，那么依次询问 $v,y$ 与 $v,z$ 得到答案。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m --)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="type">int</span> i;  </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t;</span><br><span class="line">            <span class="keyword">if</span>(i != n)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt;  i + <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                cin &gt;&gt; t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt;  i - <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                cin &gt;&gt; t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!t) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> j,k;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">1</span>) j = n, k = n - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == n - <span class="number">1</span>) j = <span class="number">1</span>, k = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == n) j = <span class="number">1</span>, k = <span class="number">2</span>, --i;</span><br><span class="line">                <span class="keyword">else</span> j = i - <span class="number">1</span>, k = i + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                cin &gt;&gt; t;</span><br><span class="line">                <span class="keyword">if</span>(t)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; k &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                    cin &gt;&gt; t;</span><br><span class="line">                    <span class="keyword">if</span>(t) </span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;! 2\n&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;! 1\n&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                    cin &gt;&gt; t;</span><br><span class="line">                    <span class="keyword">if</span>(t)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; k &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                        cin &gt;&gt; t;</span><br><span class="line">                        <span class="keyword">if</span>(t) </span><br><span class="line">                        &#123;</span><br><span class="line">                            cout &lt;&lt; <span class="string">&quot;! 2\n&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> </span><br><span class="line">                        &#123;</span><br><span class="line">                            cout &lt;&lt; <span class="string">&quot;! 1\n&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;! 1\n&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i &gt; n) cout &lt;&lt; <span class="string">&quot;! 1\n&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="M">M</h2><blockquote><p>题意：给出一组长度为 $n,n\geq3$ 的数，使其在数字大小上形成 $V$ 型，求一个 $V$ 型连续子序列，使得其平均值最大。</p></blockquote><p>$V$ 的一边全选，另一边一个一个枚举。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">LL a[<span class="number">300010</span>],mn,pm;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> sum,avr;</span><br><span class="line"><span class="type">double</span> ans;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="comment">// cout.tie(0);</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        ans=sum=<span class="number">0</span>;</span><br><span class="line">        mn=<span class="number">1e9</span>+<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,a+i);</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;mn) mn=a[i],pm=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=pm+<span class="number">1</span>;++i)</span><br><span class="line">            sum+=a[i];</span><br><span class="line">        ans=avr=sum/(pm+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=pm+<span class="number">2</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">            avr=sum/i;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,avr);</span><br><span class="line">        &#125;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=pm<span class="number">-1</span>;--i)&#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        avr=sum/(n-pm+<span class="number">2</span>);</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,avr);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=pm<span class="number">-2</span>;i;--i)&#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">            avr=sum/(n-i+<span class="number">1</span>);</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,avr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;fixed&lt;&lt;setprecision(15)&lt;&lt;ans&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.15lf\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> math </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf-936-div-2 5/6</title>
      <link href="/2024/03/26/ACM/cf%E3%80%81atc/cf-936-div-2/"/>
      <url>/2024/03/26/ACM/cf%E3%80%81atc/cf-936-div-2/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1946">Dashboard - Codeforces Round 936 (Div. 2) - Codeforces</a></p><h2 id="C">C</h2><blockquote><p>题意：给一棵有 $n$ 个节点的树，找到最大的 $x$ ，使得这棵树删去 $k$ 条边后剩下的每个联通块的大小至少为 $x$ 。</p></blockquote><p>可以二分答案。</p><p>在每次check时，dfs统计以每个节点为根的子树大小，当以某个节点为根的子树大小大于等于 $x$ 时就删去这条边，同时将size清零，不影响父节点的儿子统计。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; adj[<span class="number">100001</span>]; </span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> u,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sz=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> v:adj[u])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">        sz+=<span class="built_in">dfs</span>(x,v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sz&gt;=x)</span><br><span class="line">    &#123;</span><br><span class="line">        res++;</span><br><span class="line">        sz=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sz;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    res=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(x,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(res&gt;k)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)adj[i].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="type">int</span> a, b;</span><br><span class="line">            cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">            adj[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">            adj[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=n/(k+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid=l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">check</span>(mid))l=mid;</span><br><span class="line">            <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><blockquote><p>题意：给出长度为 $n$ 的数组 $a$ ，求最大的 $k$ ，将数组分成 $k$ 个相连的区间，且满足：<br>$$<br>(a_{l_1}⊕a_{l_1+1}⊕…⊕a_{r_1})|(a_{l_2}⊕a_{l_2+1}⊕…⊕a_{r_2})|…|(a_{l_k}⊕a_{l_k+1}⊕…⊕a_{r_k})≤x<br>$$</p></blockquote><p>将 $x$ 加1，现在使得这个值小于 $x$ 。按照每一位从高位到低位考虑：</p><ol><li>先考虑数组中所有元素的这一位：<ul><li>若为0，则单独成为一个区间，不影响。</li><li>若为1，则将其作为区间的开始，以下一个最近的1作为区间的结尾。</li></ul></li><li>在考虑 $x $ 对应的这一位：<ul><li>若为1，若数组中出现的1为偶数，那么更新目前的ans。这一位的数组处理可以不做要求。</li><li>若为0，若数组中出现的1为偶数，那么目前这是唯一的区间分法，更新数组；若出现的1为奇数，那么停止，输出ans（只有当 $x$ 为1且数组有偶数个1时才更新ans，这样保证后续的操作永远满足）。</li></ul></li></ol><p><s>有点头大</s></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">   </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    ++x;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp;</span><br><span class="line">        cin&gt;&gt;tmp;</span><br><span class="line">        a.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> k:a)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">0</span>)b.<span class="built_in">push_back</span>(k);</span><br><span class="line">            <span class="keyword">else</span> b.<span class="built_in">back</span>()^=k;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(k&amp;(<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">            &#123;</span><br><span class="line">                flag=!flag;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!(x&amp;(<span class="number">1</span>&lt;&lt;i)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            a=b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res=<span class="built_in">max</span>(res,(<span class="type">int</span>)b.<span class="built_in">size</span>());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="E">E</h2><blockquote><p>题意：给出一个 $k$ 排列的 $m_1$ 个前缀最大数的位置 $p_i$ 和 $m_2$ 个后缀最大数的位置 $s_i$ ，求排列 $k $ 的可能方案。</p><p>前缀最大数：$a_i$ 满足 $a_1&lt;a_i,a_2&lt;a_i,…,a_{i-1}&lt;a_i$ 。</p><p>后缀最大数同理。</p></blockquote><p>注意到前缀最大数和后缀最大数重合的位置就是最大的数的位置，么可以以此为中心把整个数组分成左右两部分分别讨论。</p><p>对于左部分，最后一个最大数的位置就是左边的所有数中最大的，又以此为中心分成两部分……</p><p>依次类推。</p><p>需要计算的就是：</p><ol><li>第一次分成两类的方案数：$C^{s[1]-1}_{n-1}$</li><li>左边找出第一个中心后，中心到最大数之间的数的排列方案：$(p[m_2]-p[m_2-1]-1)!$</li><li>……</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll mod = <span class="number">1e9</span>+<span class="number">7</span> ;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">23</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    a%=mod;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll fact[N], inv[N];</span><br><span class="line"><span class="type">int</span> suff[N], pref[N], n, m1, m2;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll r, ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;<span class="number">0</span> || r&gt;n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fact[n]*inv[r]%mod*inv[n-r]%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fact[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;N; i++) fact[i]=fact[i<span class="number">-1</span>]*i%mod;</span><br><span class="line"></span><br><span class="line">    inv[N<span class="number">-1</span>]=<span class="built_in">power</span>(fact[N<span class="number">-1</span>], mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=N<span class="number">-2</span>; i&gt;=<span class="number">0</span>; i--) inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T; cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;m1&gt;&gt;m2;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m1; i++) cin&gt;&gt;pref[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m2; i++) cin&gt;&gt;suff[i];</span><br><span class="line">        <span class="keyword">if</span>(pref[<span class="number">1</span>]!=<span class="number">1</span> || suff[m2]!=n || pref[m1]!=suff[<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans=<span class="built_in">C</span>(suff[<span class="number">1</span>]<span class="number">-1</span>, n<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;m1; i++) ans=ans*<span class="built_in">C</span>(pref[i]<span class="number">-1</span>, pref[i+<span class="number">1</span>]<span class="number">-2</span>)%mod*fact[pref[i+<span class="number">1</span>]-pref[i]<span class="number">-1</span>]%mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>; i&lt;=m2; i++) ans=ans*<span class="built_in">C</span>(n-suff[i], n-suff[i<span class="number">-1</span>]<span class="number">-1</span>)%mod*fact[suff[i]-suff[i<span class="number">-1</span>]<span class="number">-1</span>]%mod;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> tree </tag>
            
            <tag> 分治 </tag>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多层感知机(2)-mlp一些概念</title>
      <link href="/2024/03/22/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA/mlp%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5/"/>
      <url>/2024/03/22/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA/mlp%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="K折交叉验证">K折交叉验证</h2><p>将原始训练数据分成k个不重叠的子集，，进行k次模型训练和验证，每次在k-1个子集上训练，并在剩余的一个子集进行验证。最后通过k次实验的结果取平均来估算训练和验证误差。</p><h2 id="正则化：权重衰减">正则化：权重衰减</h2><p>在训练集较小时为了防止训练过拟合，采用权重衰减正则化的方法，也叫做 $L_2$ 正则化。具体为，在损失函数中加入范数一项。<br>$$<br>loss=L(w,b)+\frac{\lambda}{2}||w||^2<br>$$<br>更新公式为：<br>$$<br>w\leftarrow (1-\eta\lambda)w-\frac{\eta}{|\beta|}\sum x^{(i)}(w^\mathrm Tx^{(i)}+b-y^{(i)})<br>$$<br>通常偏置不会被正则化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###定义网络，wd表示系数lambda</span></span><br><span class="line">net = tf.keras.models.Sequential()</span><br><span class="line">net.add(tf.keras.layers.Dense(<span class="number">1</span>,kernel_regularizer=tf.keras.regularizers.l2(wd)))</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">###正则化损失存储在losses中，要手动加入</span></span><br><span class="line"><span class="keyword">for</span> epoch</span><br><span class="line"><span class="keyword">for</span> X,y</span><br><span class="line">    <span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape:</span><br><span class="line">            l=loss(net(x),y)+net.losses</span><br></pre></td></tr></table></figure><h2 id="暂退法">暂退法</h2><p>为了提高模型平滑性，在有噪声时也能很好执行，采用暂退法，从表面上看即是在训练过程中，在 $h$ 中按一定概率丢弃一些神经元得到 $h’$ ，并使 $E(h’)=h$ ，因此有以下转换方式：</p><p>概率为 $p$ ：$h’=0$</p><p>其他情况：$h’=\frac{h}{1-p}$</p><p>定义模型时采用以下方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dropout1,dropout2=<span class="number">0.2</span>,<span class="number">0.5</span></span><br><span class="line">net = tf.keras.models.Sequential([</span><br><span class="line">    tf.keras.layers.Flatten(),</span><br><span class="line">    tf.keras.layers.Dense(<span class="number">256</span>, activation=tf.nn.relu),</span><br><span class="line">    <span class="comment"># 在第一个全连接层之后添加一个dropout层</span></span><br><span class="line">    tf.keras.layers.Dropout(dropout1),</span><br><span class="line">    tf.keras.layers.Dense(<span class="number">256</span>, activation=tf.nn.relu),</span><br><span class="line">    <span class="comment"># 在第二个全连接层之后添加一个dropout层</span></span><br><span class="line">    tf.keras.layers.Dropout(dropout2),</span><br><span class="line">    tf.keras.layers.Dense(<span class="number">10</span>),</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="向前传播与反向传播">向前传播与反向传播</h2><h3 id="向前传播">向前传播</h3><p>设输入样本是 $x\in R^d$ ，隐藏层不包括偏置，那么：</p><p>中间变量是<br>$$<br>z=W^{(1)}x<br>$$<br>隐藏激活向量是<br>$$<br>h=\phi(z)<br>$$<br>输出为<br>$$<br>o=W^{(2)}h<br>$$<br>设损失函数为 $l$ ，标签为 $y$<br>$$<br>L=l(o,y)<br>$$</p><p>$$<br>s=\frac{\lambda}{2}(||W^{(1)}||+||W^{(2)}||)<br>$$</p><p>设目标函数为 $J$<br>$$<br>J=L+s<br>$$</p><h3 id="反向传播">反向传播</h3><p>$$<br>\frac{∂J}{∂W^{(1)}}=\frac{∂J}{∂z}x^\mathrm T+\lambda W^{(1)}<br>$$</p><p>$$<br>\frac{∂J}{∂W^{(2)}}=\frac{∂J}{∂o}x^\mathrm T+\lambda W^{(2)}<br>$$</p><h2 id="Xavier初始化">Xavier初始化</h2><p>假设权重 $w_{ij}$ 具有0均值和 $\sigma^2$ 方差，输入 $x_j$ 具有0方差和 $\gamma ^2$ ，且两者独立，对于输出 $o_i=\sum w_{ij}x_j$ ，<br>$$<br>E[o_i]=\sum E(w_{ij}x_j)=\sum E(w_{ij})E(x_j)=0<br>$$</p><p>$$<br>D(o_i)=E(o_i^2)-E(o_i)^2=\sum E(w_{ij}^2x^2_j)=\sum E(w_{ij}^2)E(x_j^2)=n_{in}\sigma^2\gamma^2<br>$$</p><p>保持方差不变的方法是令 $n_{in}\sigma^2=1$ ，但是考虑反向传播过程，也需 $n_{out}\sigma^2=1$ ，故只需使：<br>$$<br>\frac{1}{2}(n_{in}+n_{out})\sigma^2=1\ \rightarrow\ \sigma=\sqrt{\frac{2}{n_{in}+n_{out}}}<br>$$<br>我们可以从均匀分布中抽取权重，使均匀分布的方差与均值满足以上条件，故得到初始化域：<br>$$<br>U(-\sqrt{\frac{6}{n_{in}+n_{out}}},\sqrt{\frac{6}{n_{in}+n_{out}}})<br>$$</p><h2 id="环境和分布偏移">环境和分布偏移</h2><h3 id="协变量偏移">协变量偏移</h3><p>即训练集和测试集的输入的分布不同。</p><p>例如：训练室外拍摄的照片和室内拍摄的照片。</p><p>假设观测值 $x_i$ 是从某些源分布 $q(x)$ 得出的，而不是从目标分布 $p(x)$ 中得出的，且 $p(y|x)=q(y|x)$ 。我们需要根据根据数据来自正确分布与来自错误分布的概率之比来重新衡量每个数据样本的权重：<br>$$<br>\beta_i\stackrel{\mathrm{def}}{=}\frac{p{(x_i)}}{q(x_i)}<br>$$</p><p>$$<br>\underset{f}{minimize}\frac{1}{n}\sum\beta_il(f(x_i),y_i)<br>$$</p><p>从源分布和目标分布中抽取 $x$ ，采用 $logic$ 回归来将 $x_i$ 分类，设来自于 $p$ 令 $z=1$ ，来自于 $q$ 令 $z=-1$ ，那么可以得到 $P(z=1|x)=\frac{1}{1+exp(-h(x))}$ ，那么就有：<br>$$<br>\beta_i=\frac{1/(1+exp(-h(x_i)))}{exp(-h(x_i))/(1+exp(-h(x_i)))}=exp(h(x_i))<br>$$<br>完整过程即为：</p><ol><li>根据 $p(x)$ 和 $q(x)$ 生成二元分类训练集。</li><li>二元逻辑回归得到 $h$ 函数</li><li>计算 $\beta_i$ 。</li><li>进行加权数据的训练。</li></ol><h3 id="标签偏移">标签偏移</h3><p>即训练集标签分布和测试集标签分布不同。</p><p>如：老年人得流感的数据与年轻人得流感的数据。</p><p>假设有 $q(x|y)=p(x|y)$ 。现在的加入方程的权重变成了：<br>$$<br>\beta_i\stackrel{\mathrm{def}}{=}\frac{p{(y_i)}}{q(y_i)}<br>$$<br>因此需要估计 $p(y)$ 。因无法直接获得目标标签的分布，因此采用其他方法进行估计：</p><p>假设现在有一个特别强大的分类器，能做到对于训练集分类特别准确，构造混淆矩阵 $C_{k\times k }$ ，其中 $c_{ij}$ 表示真是标签是 $j$ 预测标签为 $i$ 的概率，设 $\mu(\hat y_i)$ 表示标签 $i$ 在训练集中预测的平均总得分，那么有：<br>$$<br>Cp(y)=\mu(\hat y)<br>$$<br>可以反解出 $p(y)=C^{-1}\mu(\hat y)$ 。</p>]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
          <category> 多层感知机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-21</title>
      <link href="/2024/03/22/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-21/"/>
      <url>/2024/03/22/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-21/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104901">Dashboard - The 2023 ICPC Asia Jinan Regional Contest (The 2nd Universal Cup. Stage 17: Jinan) - Codeforces</a></p><h2 id="A">A</h2><blockquote><p>题意：有一个合法的由 $(\ ),[\ ]$ 组成的括号序列，现在括号的左右反了，如 $($ 可能写成了 $)$ ，求能不能根据现有的序列找到一个唯一的初始括号序列。</p></blockquote><p>先不考虑括号的左右，对同种括号操作。</p><p>将括号分层，如 $(\ )\ [\ ]\ (\ )$ 均属于第一层，而 $(\ [\ ]\ [\ ]\ )$ 中，小括号属于第一层，中括号属于第二层；若同种符号出现在了同一层，那么可以调转两个靠内的符号使其生成两种不同的序列，如 $(\ (\ [\ ]\ )\ )$ ， $(\ [\ [\ ]\ ]\ )$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="type">int</span> len=s.<span class="built_in">length</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> p[len+<span class="number">5</span>][<span class="number">3</span>];<span class="comment">//层次、类别</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)p[i][<span class="number">1</span>]=<span class="number">0</span>,p[i][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        stack&lt;<span class="type">int</span>&gt;sta;</span><br><span class="line"></span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;(&#x27;</span> || s[i]==<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(sta.<span class="built_in">size</span>() &amp;&amp; sta.<span class="built_in">top</span>()==<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(p[sta.<span class="built_in">size</span>()][<span class="number">1</span>]==<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    p[sta.<span class="built_in">size</span>()][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">                    sta.<span class="built_in">pop</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> sta.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;[&#x27;</span> || s[i]==<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(sta.<span class="built_in">size</span>() &amp;&amp; sta.<span class="built_in">top</span>()==<span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(p[sta.<span class="built_in">size</span>()][<span class="number">2</span>]==<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    p[sta.<span class="built_in">size</span>()][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">                    sta.<span class="built_in">pop</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> sta.<span class="built_in">push</span>(<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!flag)cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><p>水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l1,r1,l2,r2;</span><br><span class="line">        cin&gt;&gt;l1&gt;&gt;r1&gt;&gt;l2&gt;&gt;r2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(r1-l1&gt;=<span class="number">10</span> || r2-l2&gt;=<span class="number">10</span>)cout&lt;&lt;<span class="string">&quot;9\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=l1;i&lt;=r1;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=l2;j&lt;=r2;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">long</span> <span class="type">long</span> x=i+j;</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">while</span>(x)</span><br><span class="line">                    &#123;</span><br><span class="line">                        ans=<span class="built_in">max</span>((<span class="type">long</span> <span class="type">long</span>)ans,x%<span class="number">10</span>);</span><br><span class="line">                        x/=<span class="number">10</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：给出一个 $n\times m$ 的01矩阵，可以通过选取某些行使其倒转使得每一列包含至多一个1。问有多少种选取方法。</p></blockquote><p>对于每一行，将其倒置后复制在第 $i+n$ 行，相当于处理出 $2n\times m$ 的矩阵，以列为单位考虑：</p><p>同时考虑第 $i$ 列和第 $m-i+1$ 列，若一共出现超过2个1，那么直接输出答案0；若一共出现2个1，那么说明可能需要使行倒转，假设第 $i$ 行和第 $j$ 行出现了2个1，若不需要倒置就满足条件，那么分别将第 $i $ 行和第 $j$ 行与第 $i+n$ 行和第 $j+n$ 行归为一个并查集，若需要倒置，那么分别将 $i$ 行和第 $j+n$ 行，第 $j$ 行和第 $i+n$ 行归为一个并查集，若某一行在两个并查集中都出现了，那么矛盾，输出0（敌人的敌人就是朋友）；最后每个并查集有两种操作方法，答案就是 $2^k$ ，$k$ 是联通块个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>  mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n,m,num;</span><br><span class="line">string s[<span class="number">1000010</span>];</span><br><span class="line"><span class="type">int</span> fa[<span class="number">2000010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getf</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fa[x]==x?x:fa[x]=<span class="built_in">getf</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y&amp;<span class="number">1</span>) ret=ret*x%mod;</span><br><span class="line">        x=x*x%mod;</span><br><span class="line">        y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;++i) fa[i]=i;</span><br><span class="line">    num=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)      cin&gt;&gt;s[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=m/<span class="number">2</span><span class="number">-1</span>;++i)&#123;</span><br><span class="line">        <span class="type">int</span> fl=<span class="number">0</span>,lst=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">            <span class="comment">// cout&lt;&lt;&quot;j=&quot;&lt;&lt;j&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(s[j][i]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[j][m-i<span class="number">-1</span>]==<span class="string">&#x27;0&#x27;</span>)   <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(fl==<span class="number">2</span>)   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(s[j][i]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;s[j][m-i<span class="number">-1</span>]==<span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(fl==<span class="number">1</span>)   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                fl=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fl==<span class="number">0</span>)&#123;</span><br><span class="line">                lst=j;</span><br><span class="line">                fl=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fl=<span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">            x1=<span class="built_in">getf</span>(lst);</span><br><span class="line">            y1=<span class="built_in">getf</span>(j);</span><br><span class="line">            x2=<span class="built_in">getf</span>(lst+n);</span><br><span class="line">            y2=<span class="built_in">getf</span>(j+n);</span><br><span class="line">            <span class="keyword">if</span>(s[j][i]==s[lst][i])&#123;</span><br><span class="line">                <span class="keyword">if</span>(x1==y1||x2==y2)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(x1==y2||x2==y1)  <span class="keyword">continue</span>;</span><br><span class="line">                fa[x1]=y2;</span><br><span class="line">                fa[y1]=x2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(x1==y2||x2==y1)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(x1==y1||x2==y2)  <span class="keyword">continue</span>;</span><br><span class="line">                fa[x1]=y1;</span><br><span class="line">                fa[x2]=y2;</span><br><span class="line">            &#125;</span><br><span class="line">            --num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m&amp;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)   c+=s[i][m/<span class="number">2</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">qpow</span>(<span class="number">2</span>,num));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">solve</span>())    <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="I">I</h2><blockquote><p>题意：给出一个长度为 $n$ 的数组，可以进行最多 $\lfloor \frac{n}{2}\rfloor$ 次操作，每次选择两个端点 $l\leq r$ 且 $a_l&gt;a_r$ ，将这两个端点之间的元素从小到大排序，最后使得整个数组有序。求最少操作方案。$n\leq 100$</p></blockquote><p>每次以第一个 $a[i]!=i$ 的数的位置为左端点，找到右边离它最远的且小于它的数的位置作为右端点进行排序。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> id[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;path;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) </span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        id[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    path.<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> j = n;</span><br><span class="line">        <span class="keyword">for</span>(j = n; j &gt; i; j --)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt; a[i]) </span><br><span class="line">            &#123;   </span><br><span class="line">                path.<span class="built_in">push_back</span>(&#123;i, j&#125;);</span><br><span class="line">                t = i;</span><br><span class="line">                i = a[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(a + t, a + j + <span class="number">1</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; path.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c : path) cout &lt;&lt; c.first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c.second &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="K">K</h2><blockquote><p>题意：给出一个长度为 $n$ 的数组，可以操作 $k$ 次，每次使一个元素加1或者减1，最后求最长的连续递增子序列长度，满足 $a_i=a_{i+1}-1$ 。</p></blockquote><p><s>好恶心啊</s></p><p>假设长度为 $t$ 的区间 $[l,r]$ 满足条件，那么一定有：<br>$$<br>|x+1-a_l|+|x+2-a_{l+1}|+…+|x+t-a_{r}|\leq k<br>$$<br>由绝对值不等式可得当 $x$ 取 $i-a_i$ 的中位数时最小，最小值为最大的 $\lfloor \frac{t}{2}\rfloor$ 个数的和减去最小的 $\lfloor \frac{t}{2}\rfloor$</p><p>个数的和。求答案时用双指针进行贪心扩展，用两个 $set$ 来实现对顶堆处理两部分和。</p><p>可以证明最优答案一定可以通过贪心扩展得到。</p><p>（不能用二分，因为 $O(nlog^2n)$会超时）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">500010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">LL k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//if(t == 1) return true;</span></span><br><span class="line">LL sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">multiset&lt;<span class="type">int</span>&gt; q1,q2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; t &lt;&lt; &#x27; &#x27; &lt;&lt; sum2 &lt;&lt; &#x27; &#x27; &lt;&lt; sum1 &lt;&lt; endl;</span></span><br><span class="line"><span class="type">int</span> mid = <span class="number">1</span> - a[<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i - a[i] &gt;= mid)</span><br><span class="line">&#123;</span><br><span class="line">q2.<span class="built_in">insert</span>(i - a[i]);</span><br><span class="line">sum2 += i - a[i];</span><br><span class="line">q1.<span class="built_in">insert</span>(mid);</span><br><span class="line">sum1 += mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">q1.<span class="built_in">insert</span>(i - a[i]);</span><br><span class="line">sum1 += i - a[i];</span><br><span class="line">q2.<span class="built_in">insert</span>(mid);</span><br><span class="line">sum2 += mid; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i - a[i] &gt;= *q2.<span class="built_in">begin</span>())</span><br><span class="line">&#123;</span><br><span class="line">q2.<span class="built_in">insert</span>(i - a[i]);</span><br><span class="line">sum2 += i - a[i];</span><br><span class="line">mid = *q2.<span class="built_in">begin</span>();</span><br><span class="line">sum2 -= mid;</span><br><span class="line">q2.<span class="built_in">erase</span>(q2.<span class="built_in">begin</span>());</span><br><span class="line"><span class="comment">//cout &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">q1.<span class="built_in">insert</span>(i - a[i]);</span><br><span class="line">sum1 += i - a[i];</span><br><span class="line">mid = *(--q1.<span class="built_in">end</span>());</span><br><span class="line">sum1 -= mid;</span><br><span class="line">q1.<span class="built_in">erase</span>(--q1.<span class="built_in">end</span>()); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; sum1 &lt;&lt; &#x27; &#x27; &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line">++ t;</span><br><span class="line">r = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(sum2 - sum1 &lt;= k) res = <span class="built_in">max</span>(res, t);</span><br><span class="line"><span class="comment">//cout &lt;&lt; sum2 &lt;&lt; &#x27; &#x27; &lt;&lt; sum1 &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">while</span>(sum2 - sum1 &gt; k &amp;&amp; t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l - a[l] == mid) </span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(l - a[l] &gt; mid) </span><br><span class="line">&#123;</span><br><span class="line">q2.<span class="built_in">erase</span>(q2.<span class="built_in">lower_bound</span>(l - a[l]));</span><br><span class="line">sum2 -= l - a[l];</span><br><span class="line">sum2 += mid;</span><br><span class="line">q2.<span class="built_in">insert</span>(mid);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">q1.<span class="built_in">erase</span>(q1.<span class="built_in">lower_bound</span>(l - a[l]));</span><br><span class="line">sum1 -= l - a[l];</span><br><span class="line">q1.<span class="built_in">insert</span>(mid);</span><br><span class="line">sum1 += mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l - a[l] &lt;= *(--q1.<span class="built_in">end</span>())) </span><br><span class="line">&#123;</span><br><span class="line">q1.<span class="built_in">erase</span>(q1.<span class="built_in">lower_bound</span>(l - a[l]));</span><br><span class="line">sum1 -= l - a[l];</span><br><span class="line">mid = *q2.<span class="built_in">begin</span>();</span><br><span class="line">q2.<span class="built_in">erase</span>(q2.<span class="built_in">begin</span>());</span><br><span class="line">sum2 -= mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">q2.<span class="built_in">erase</span>(q2.<span class="built_in">lower_bound</span>(l - a[l]));</span><br><span class="line">sum2 -= l - a[l];</span><br><span class="line">mid = *(--q1.<span class="built_in">end</span>());</span><br><span class="line">q1.<span class="built_in">erase</span>(--q1.<span class="built_in">end</span>());</span><br><span class="line">sum1 -= mid;</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line">++ l;</span><br><span class="line">-- t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt; l &lt;&lt; &#x27; &#x27; &lt;&lt; i &lt;&lt; &#x27; &#x27; &lt;&lt; res &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>; i &lt;= n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="built_in">check</span>(n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> dsu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多层感知机(1)-mlp原理</title>
      <link href="/2024/03/20/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA/mlp%E5%8E%9F%E7%90%86/"/>
      <url>/2024/03/20/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA/mlp%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="mlp原理">mlp原理</h2><p>多层感知机，简称mlp，通过在网络中加入一个或多个隐藏层来实现。设矩阵 $\pmb X\in R^{n\times d}$ 表示 $n$ 个小样本，设 $\pmb H\in R^{n\times h}$ 表示有 $h$ 个输出的隐藏层输出，有：<br>$$<br>\pmb H=\pmb X\pmb W^{(1)}+b^{(1)}<br>$$</p><p>$$<br>\pmb O=\pmb H\pmb W^{(2)}+b^{(2)}<br>$$</p><p>设置激活函数 $\sigma$：<br>$$<br>\pmb H=\sigma(\pmb X\pmb W^{(1)}+b^{(1)})<br>$$</p><p>$$<br>\pmb O=\pmb H\pmb W^{(2)}+b^{(2)}<br>$$</p><p>常用的激活函数有 $ReLU,sigmoid$ 等。</p><h2 id="mlp改进softmax回归">mlp改进softmax回归</h2><p>在定义模型部分改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###添加输出为256的隐藏层，激活函数为&#x27;relu&#x27;</span></span><br><span class="line">net = tf.keras.models.Sequential([</span><br><span class="line">    tf.keras.layers.Flatten(),</span><br><span class="line">    tf.keras.layers.Dense(<span class="number">256</span>, activation=<span class="string">&#x27;relu&#x27;</span>),</span><br><span class="line">    tf.keras.layers.Dense(<span class="number">10</span>)])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
          <category> 多层感知机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mashups-1</title>
      <link href="/2024/03/20/ACM/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/mashups-1/"/>
      <url>/2024/03/20/ACM/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/mashups-1/</url>
      
        <content type="html"><![CDATA[<p>链接：<a href="https://codeforces.com/gym/511849">Dashboard - practice - Codeforces</a></p><h2 id="3-18-A-B"><a href="https://codeforces.com/contest/1914/problem/E2">3.18 A,B</a></h2><blockquote><p>题意：A有 $a_i$ 个颜色为 $i$ 的弹珠，B有 $b_i$ 个颜色为 $i$ 的弹珠，现在游戏规则如下：从A开始，两人轮流进行，每次选择一种大家都有的颜色，然后自己丢弃一颗该颜色的弹珠，对方丢弃所有该颜色的弹珠。定义最终分数为A的所有弹珠和与B的所有弹珠和的差。A想最大化分数，B想最小化分数，求最终的分数。</p></blockquote><p>当A选择时，对于 $i$ 和 $j$ ，若A选择了 $i$ ，B选择了 $j$ ，那么必有：<br>$$<br>(a_i-1)-(b_j-1)&gt;(a_j-1)-(b_i-1)<br>$$<br>即：<br>$$<br>a_i+b_i&gt;a_j+b_j<br>$$<br>故按照 $a_i+b_i$ 降序排列，依次操作即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;x,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.first&gt;y.first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> b[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;s[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        s[i].first+=a[i];</span><br><span class="line">        s[i].second=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        s[i].first+=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(s+<span class="number">1</span>,s+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=a[s[i].second]<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans-=b[s[i].second]<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-18-C"><a href="https://codeforces.com/contest/1913/problem/C">3.18 C</a></h2><blockquote><p>题意：对于一个空数组，每次有两种操作：</p><p>$1\ x$ ：将 $2^x$ 插入数组；</p><p>$2\ w$ ：对于 $w$ ，能否从数组中选出若干个数使他们的和等于 $w$ 。</p></blockquote><p>直接从最大的 $2^x$ 开始试，能选就选，这样一定最优。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pre[<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> pw[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pre[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)pre[i]=pre[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t,v;</span><br><span class="line">        cin&gt;&gt;t&gt;&gt;v;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>)pw[v]++;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> p=<span class="number">30</span>;p&gt;=<span class="number">0</span>;p--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> cnt=v/pre[p];</span><br><span class="line">                <span class="keyword">if</span>(cnt&lt;=pw[p])v-=cnt*pre[p];</span><br><span class="line">                <span class="keyword">else</span> v-=pw[p]*pre[p];</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(v==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-19-D"><a href="https://codeforces.com/contest/1912/problem/K">3.19 D</a></h2><blockquote><p>题意：给定一个数列 $a $ ，问长度至少为3的子序列个数，其中子序列中每相邻3个元素的和为偶数。</p></blockquote><p>设置状态 $dp[i][k_1][k_2]$ 表示子序列最后一个元素为 $a_i$ ，最后一个元素的奇偶性为 $k_1$ ，倒数第二个元素的奇偶性为 $k_2$ 时的子序列个数。转移方程为：<br>$$<br>dp[i][k_1][k_2]=\sum dp[j][k_1’][k_2’]<br>$$<br>其中满足 $k_2$ 即为 $a_j$ ， $k_1,k_2,k_2’$ 和为偶数。为了提升时间复杂度，设置累加数组 $s[2][2]$ ，表示最后两个元素的奇偶情况的个数，因此转移方程就变成了：<br>$$<br>dp[i][k_1][k_2]=s[k_2][k_2’]<br>$$</p><p>$$<br>s[k_1][k_2]+=dp[i][k_1][k_2]+even/odd<br>$$</p><p>更新累加数组时还要加上单独的一项，这是为了统计上只有两个元素的情况，而这是 $dp$ 统计不了的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">200005</span>][<span class="number">2</span>][<span class="number">2</span>];<span class="comment">//0为奇，1为偶</span></span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> s[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    s[(a[<span class="number">2</span>]+<span class="number">1</span>)%<span class="number">2</span>][(a[<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">2</span>]++;</span><br><span class="line">   </span><br><span class="line">    <span class="type">int</span> odd=<span class="number">0</span>,even=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">1</span>]%<span class="number">2</span>==<span class="number">1</span>)odd++;</span><br><span class="line">    <span class="keyword">else</span> even++;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">2</span>]%<span class="number">2</span>==<span class="number">1</span>)odd++;</span><br><span class="line">    <span class="keyword">else</span> even++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">0</span>]=s[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">            dp[i][<span class="number">0</span>][<span class="number">1</span>]=s[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">            s[<span class="number">0</span>][<span class="number">0</span>]=(s[<span class="number">0</span>][<span class="number">0</span>]+dp[i][<span class="number">0</span>][<span class="number">0</span>]+odd)%mod;</span><br><span class="line">            s[<span class="number">0</span>][<span class="number">1</span>]=(s[<span class="number">0</span>][<span class="number">1</span>]+dp[i][<span class="number">0</span>][<span class="number">1</span>]+even)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">0</span>]=s[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">            dp[i][<span class="number">1</span>][<span class="number">1</span>]=s[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">            s[<span class="number">1</span>][<span class="number">0</span>]=(s[<span class="number">1</span>][<span class="number">0</span>]+dp[i][<span class="number">1</span>][<span class="number">0</span>]+odd)%mod;</span><br><span class="line">            s[<span class="number">1</span>][<span class="number">1</span>]=(s[<span class="number">1</span>][<span class="number">1</span>]+dp[i][<span class="number">1</span>][<span class="number">1</span>]+even)%mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">1</span>)odd++;</span><br><span class="line">        <span class="keyword">else</span> even++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=(ans+dp[i][(a[i]+<span class="number">1</span>)%<span class="number">2</span>][<span class="number">0</span>]+dp[i][(a[i]+<span class="number">1</span>)%<span class="number">2</span>][<span class="number">1</span>])%mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><hr><h2 id="3-20-E"><a href="https://codeforces.com/contest/1909/problem/C">3.20 E</a></h2><blockquote><p>题意：给出三个数组 $l,r,c$ ，其中 $r$ 中的数不会重复。对三个数组分别排序，最后使得 $\sum c_i\times (r_i-l_i)$ 最小，且满足对每个 $i$ ，$r_i&gt;l_i$ 。</p></blockquote><p>考虑贪心：</p><ol><li>尽可能不要使区间长度平均，尽可能使小的 $l$ 与大的 $r$ 配对。</li><li>长度越大的区间对应的 $c$ 应该越小。</li></ol><p>因此算法可以为：将 $l,r$ 一起排序，从右端点开始遍历，遇到 $r$ 就加入小根堆中，遇到 $l$ 就将其与目前最小的 $r$ 配对，因为这样能使越小的 $l$ 与越大的 $r$ 配对。然后再将 $c$ 排序处理答案。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> c[n+<span class="number">5</span>];</span><br><span class="line">        pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;a[<span class="number">2</span>*n+<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i].first,a[i].second=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i+n].first,a[i+n].second=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;c[i];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">2</span>*n+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">sort</span>(c,c+n);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for(int i=1;i&lt;=2*n;i++)cout&lt;&lt;a[i].first&lt;&lt;&quot; &quot;&lt;&lt;a[i].second&lt;&lt;endl;cout&lt;&lt;endl;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;c[i]&lt;&lt;&quot; &quot;;</span></span><br><span class="line"></span><br><span class="line">        priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,greater&lt;<span class="type">int</span>&gt; &gt;q;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;ans;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>*n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].second==<span class="number">2</span>)q.<span class="built_in">push</span>(a[i].first);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> tmp=q.<span class="built_in">top</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">                ans.<span class="built_in">push_back</span>(tmp-a[i].first);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(ans.<span class="built_in">rbegin</span>(),ans.<span class="built_in">rend</span>());</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=ans[i]*c[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-21-F"><a href="https://codeforces.com/contest/1907/problem/F">3.21 F</a></h2><blockquote><p>题意：给一个长度为 $n$ 的数组 $a$ ，有两种操作：</p><ul><li>将最后一个元素移动到第一个，其他元素依次向后排。</li><li>将数组倒转。</li></ul><p>现要使数组非递减，求最小操作次数，如果无解输出-1.</p></blockquote><p>可以观察到，倒转后再进行操作1相当于把第一个元素放在最后，因此有如下贪心：</p><p>将 $a$ 赋值一份接在 $a$ 后面，使 $a$ 的长度变成 $2n$ 。遍历 $a’$ ，若有解，那么一定存在一段长度为 $n$ 的子序列满足非递减或非递增。找到对应序列后，分别考虑将后面元素移到前面更优还是将前面元素移到后面更优。注意要找到所有的满足条件的子序列最后求最大值。</p><p>特别判断有连续相同元素的情况。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> a[n*<span class="number">2</span>+<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            a[i+n]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;0\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[<span class="number">1</span>]&lt;=a[<span class="number">2</span>])cout&lt;&lt;<span class="string">&quot;0\n&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> pre=<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="type">int</span> c0=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">2</span>]==a[<span class="number">1</span>])cnt=<span class="number">2</span>,pre=<span class="number">-1</span>,c0++;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">2</span>]&gt;a[<span class="number">1</span>])cnt=<span class="number">2</span>,pre=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">2</span>]&lt;a[<span class="number">1</span>])cnt=<span class="number">2</span>,pre=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">2</span>*n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pre==<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=a[i<span class="number">-1</span>])pre=a[i]&gt;a[i<span class="number">-1</span>],c0=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> c0++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                c0++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(pre == (a[i]&gt;a[i<span class="number">-1</span>]))cnt++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    pre=(a[i]&gt;a[i<span class="number">-1</span>]);</span><br><span class="line">                    cnt=c0+<span class="number">1</span>;</span><br><span class="line">                    c0=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cnt==n)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                pos=i;</span><br><span class="line">                <span class="keyword">if</span>(pos==n)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(pre==<span class="number">1</span> || pre==<span class="number">-1</span>)ans=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">else</span> ans=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> ans1=pos-n+<span class="number">1</span>;</span><br><span class="line">                <span class="type">int</span> ans2=<span class="number">2</span>*n-pos;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(pre==<span class="number">1</span>)ans1++;</span><br><span class="line">                <span class="keyword">if</span>(pre==<span class="number">0</span>)ans2++;</span><br><span class="line">                ans=<span class="built_in">min</span>(ans,<span class="built_in">min</span>(ans1,ans2));</span><br><span class="line"></span><br><span class="line">                i=i-n+<span class="number">2</span>;</span><br><span class="line">                cnt=<span class="number">1</span>;</span><br><span class="line">                pre=<span class="number">-1</span>;</span><br><span class="line">                c0=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!flag)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-22-G"><a href="https://codeforces.com/contest/1907/problem/D">3.22 G</a></h2><blockquote><p>题意：有 $n$ 个区间 $[l_i,r_i]$ ，从坐标0开始移动，每次最大移动长度为 $k$ ，但是需要在第 $i$ 次移动后落入区间 $[l_i,r_i]$ ，求最小的 $k$ 。</p></blockquote><p>二分模板题。在判断时每次求出可以移动的范围是多少，依次更新即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">200005</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> l[N],r[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> pl=<span class="number">0</span>,pr=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pl=<span class="built_in">max</span>(<span class="number">0</span>,pl-k);</span><br><span class="line">        pr=pr+k;</span><br><span class="line">        <span class="keyword">if</span>(pl&gt;r[i] || pr&lt;l[i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        pl=<span class="built_in">max</span>(pl,l[i]);</span><br><span class="line">        pr=<span class="built_in">min</span>(pr,r[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;l[i]&gt;&gt;r[i];</span><br><span class="line">        maxx=<span class="built_in">max</span>(maxx,r[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ll=<span class="number">0</span>,rr=maxx+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ll&lt;rr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=ll+rr&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))rr=mid;</span><br><span class="line">        <span class="keyword">else</span> ll=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;ll&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-23-H"><a href="https://codeforces.com/contest/1907/problem/E">3.23 H</a></h2><blockquote><p>题意：给出 $n$ ，找这样的数字组合 $(a,b,c)$ 使得 $a+b+c=n$ 且 $a,b,c$ 各位数组的和等于 $n$ 的各数位的和，求这样的组合个数。顺序不同会算成不同的组合。$n\leq 1e7$</p></blockquote><p>假设 $n$ 为三位数，设三个数各数位的和分别为 $x,y,z$ ，$n$ 各数位分别为 $x’,y’,z’$ 那么有：<br>$$<br>100x+10y+z=100x’+10y’+z’<br>$$</p><p>$$<br>x+y+z=x’+y’+z’<br>$$</p><p>注意到 $x’,y’,z’$ 均小于等于9，那么一定有 $x=x’,y=y’,z=z’$ 。因此单独考虑每一位即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp=n%<span class="number">10</span>;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">        ans*=(tmp+<span class="number">2</span>)*(tmp+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-24-I"><a href="https://codeforces.com/contest/1906/problem/M">3.24 I</a></h2><blockquote><p>题意：给定一个正 $n$ 边形，每条边上有 $a_i$ 个点，现在以给的点为顶点连线构成三角形，每个点最多出现在一个三角形中，且三角形之间不能交叉，求最多可构造的三角形数量。</p></blockquote><p><s>又被math干破防了</s></p><p>若只考虑两条相邻的边分别有 $a_i,a_j$ 个点，考虑最优构造方式：</p><ol><li>若满足 $a_i\geq 2a_j$ 或 $a_j\geq 2a_i$ ，那么最大值就是 $a_j$ 或 $a_i$ 。</li><li>若 $a_i$ 与 $a_j$ 的数量一样多，那么每条边取相邻的3个点，6个点为一对，每6个点可以构造出2个三角形，故数量为 $\lfloor (a_i+a_j)/3\rfloor$ 。</li><li>否则假设 $a_i&gt;a_j$ ，先 $a_i$ 取两个点，$a_j$ 取一个点，每次构成一个三角形，直至 $a_i=a_j $ ，然后按照情况2得到答案。</li></ol><p>这样的话可以枚举以边 $a_i$ 为分界线，把 $1-a_i$ 的边上的点与 $a_{i+1}-a_n$ 的边上的点做匹配，相当于在两条边之间构造三角形。</p><p>但是需要注意的是要让点最多的边作为 $a_1$ ，其他边依次顺移，这样是为了使分界线两边差距太大导致不优。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> aa[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;,a[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> pre1[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;,pre2[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;<span class="type">int</span> p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;aa[i];</span><br><span class="line">        <span class="keyword">if</span>(maxx&lt;aa[i])</span><br><span class="line">        &#123;</span><br><span class="line">            maxx=aa[i];</span><br><span class="line">            p=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=p;i&lt;=n;i++)a[i-p+<span class="number">1</span>]=aa[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;p;i++)a[n-p+<span class="number">1</span>+i]=aa[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)pre1[i]=pre1[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)pre2[i]=pre2[i+<span class="number">1</span>]+a[i];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l=pre1[i];</span><br><span class="line">        <span class="type">int</span> r=pre2[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(l&lt;r)<span class="built_in">swap</span>(l,r);</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;=r*<span class="number">2</span>)t=r;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            t=l-r;</span><br><span class="line">            l-=<span class="number">2</span>*t;</span><br><span class="line">            r-=t;</span><br><span class="line">            t+=(l+r)/<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,t);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-25-J"><a href="https://codeforces.com/contest/1905/problem/C">3.25 J</a></h2><blockquote><p>题意：给定一个字符串，每次只能选最大的子序列进行操作：将 $a_1a_2…a_{n-1}a_n$ 变为 $a_na_1…a_{n-2}a_{n-1}$ 。求能否将字符串变为非递减顺叙？如果可以求最小操作次数。</p></blockquote><p>每次能选择的子序列是固定的，因此可以通过倒序遍历储存最大字母位置来获得第一次操作的子序列。因此最大操作次数就是该子序列的长度减1。操作后等效于将子序列倒序排列。然后判断字符串是否是非递减的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">char</span> s[n+<span class="number">2</span>],x[n+<span class="number">2</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)x[i]=s[i];</span><br><span class="line">        <span class="type">int</span> p=n<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;pos,v;</span><br><span class="line">        pos.<span class="built_in">push_back</span>(p);</span><br><span class="line">        v.<span class="built_in">push_back</span>(s[p]-<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=s[p])</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                p=i;</span><br><span class="line">                pos.<span class="built_in">push_back</span>(p);</span><br><span class="line">                v.<span class="built_in">push_back</span>(s[p]-<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> cnt2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=pos.<span class="built_in">size</span>()<span class="number">-1</span>;;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i<span class="number">-1</span>]==v[i])cnt2++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cnt-=cnt2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;pos.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> c=v[v.<span class="built_in">size</span>()-i<span class="number">-1</span>]+<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            x[pos[i]]=c;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x[i]-<span class="string">&#x27;a&#x27;</span>&lt;x[i<span class="number">-1</span>]-<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)cout&lt;&lt;cnt<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-26-K"><a href="https://codeforces.com/contest/1904/problem/C">3.26 K</a></h2><blockquote><p>题意：给定一个长度为 $n$ 的数列 $a$ ，可以执行 $k$ 次操作，每次选择两个不同的数相减，将其绝对值添加到数组的末尾，求操作后数组 $a$ 的最小值。</p></blockquote><p>注意到当 $k$ 大于等于3时，最小值一定是0：第一次和第二次都选相同的两个数相减得到两个相同的差，再相减得到0。</p><p>当 $k=1$ 时，直接排序后求相邻两数相减的最小值。</p><p>当 $k=2$ 时，用 $set$ 记下任两个数相减得到的差，相当于第一次操作后能产生的数，然后对于第二次操作，枚举数组 $a$ ，每次在 $set$ 中找和它最相近的数相减更新答案。用 $set.lower$_$bound$ 实现。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(k&gt;=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ans=a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)ans=<span class="built_in">min</span>(ans,a[i]-a[i<span class="number">-1</span>]);</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set&lt;<span class="type">int</span>&gt;d;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            d.<span class="built_in">insert</span>(a[j]-a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> ans=<span class="built_in">min</span>(a[<span class="number">0</span>],*d.<span class="built_in">begin</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(d.<span class="built_in">lower_bound</span>(i)!=d.<span class="built_in">end</span>() &amp;&amp; d.<span class="built_in">lower_bound</span>(i)!=d.<span class="built_in">begin</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> it1=*d.<span class="built_in">lower_bound</span>(i);</span><br><span class="line">            <span class="type">int</span> it2=*(--d.<span class="built_in">lower_bound</span>(i));</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,<span class="built_in">min</span>(<span class="built_in">abs</span>(it1-i),<span class="built_in">abs</span>(it2-i)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(d.<span class="built_in">lower_bound</span>(i)==d.<span class="built_in">end</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> it=*(--d.<span class="built_in">lower_bound</span>(i));</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,<span class="built_in">abs</span>(it-i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(d.<span class="built_in">lower_bound</span>(i)==d.<span class="built_in">begin</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> it=*d.<span class="built_in">lower_bound</span>(i);</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,<span class="built_in">abs</span>(it-i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-27-L-M"><a href="https://codeforces.com/contest/1904/problem/D2">3.27 L,M</a></h2><blockquote><p>题意：给定两个长为 $n$ 的数组 $a,b$ ，每次可以进行如下操作：在 $a$ 中选择一个区间 $[l,r]$ ，然后将这个区间中的所有数变成这个区间中最大的数。问否通过有限次操作后将 $a$ 变得和 $b$ 一样。</p></blockquote><p>可以观察到以下结论：</p><ul><li><p>只能将 $a_i$ 变小，故若存在 $a_i&gt;b_i$ ，不可能满足。</p></li><li><p>若 $a_i!=b_i$ ，若考虑 $a_i$ 右边，如果 $a_{i+1}&gt;b_i$ ，那么一定右边不行。左边同理。</p></li><li><p>若 $a_i!=b_i$ ，若考虑 $a_i$ 右边，若存在 $a_j=b_i$ ，但 $i$ 与 $j$ 之间存在 $b_k&lt;b_i$ ，那么也是无解的。左边同理。</p></li><li><p>因此若 $a_i!=b_i$ ，考虑 $a_i$ 右边有解，那么一定满足最近的 $a_j=b_i$ 之间所有 $a_k&lt;a_i$ ，$b_k&gt;=b_i$ 。</p></li></ul><p>题目的数据有 $n^2\leq10^6$ 和 $n\leq 2\times 10^5$ 两种。</p><ol><li><p>$O(n^2)$ ：</p><p>从小到大考虑 $a$ 中的所有元素，每次都将每个数覆盖最大的区间，这样是不会对后来产生影响的，因为小数不会覆盖大的数，而大数可以覆盖小的数。若在覆盖小数的过程中发现这个数匹配，那么区间扩展停止。最后检查 $a$ 是否与 $b$ 相等。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;num[n+<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> a[n],b[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;a[i],num[a[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j:num[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=j<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[k]&lt;a[j] &amp;&amp; a[k]!=b[k])a[k]=a[j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=j+<span class="number">1</span>;k&lt;n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[k]&lt;a[j] &amp;&amp; a[k]!=b[k])a[k]=a[j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>$O(n)$ ：</p><p>直接按照结论检查每一个 $a_i$ 是否满足条件，最后实现时从最小的 $b_i$ 开始，因此也不会造成影响。需要统计离每个 $a_i$ 最近的比它大的数、离每个 $b_i$ 最近的最小的数，用单调栈完成统计。头尾扫两遍再汇总，分别实现找 $(i,j)$ 和 $(j,i)$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ff first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ss second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ld, ld&gt; pld;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>); cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> tt = <span class="number">1</span>; tt &lt;= T; tt++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="type">int</span> a[n + <span class="number">1</span>], b[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; b[i];</span><br><span class="line">        <span class="type">bool</span> val[n + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">memset</span>(val, <span class="literal">false</span>, <span class="built_in">sizeof</span>(val));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> t = <span class="number">0</span>; t &lt; <span class="number">2</span>; t++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> prvb[n + <span class="number">1</span>]; <span class="comment">//prev smaller</span></span><br><span class="line">            <span class="type">int</span> nxta[n + <span class="number">1</span>]; <span class="comment">//next greater</span></span><br><span class="line">            stack&lt;pii&gt; s;</span><br><span class="line">            s.<span class="built_in">push</span>(&#123;INF, n + <span class="number">1</span>&#125;);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>(s.<span class="built_in">top</span>().ff &lt;= a[i]) s.<span class="built_in">pop</span>();</span><br><span class="line">                nxta[i] = s.<span class="built_in">top</span>().ss;</span><br><span class="line">                s.<span class="built_in">push</span>(&#123;a[i], i&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!s.<span class="built_in">empty</span>()) s.<span class="built_in">pop</span>();</span><br><span class="line">            s.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>(s.<span class="built_in">top</span>().ff &gt;= b[i]) s.<span class="built_in">pop</span>();</span><br><span class="line">                prvb[i] = s.<span class="built_in">top</span>().ss;</span><br><span class="line">                s.<span class="built_in">push</span>(&#123;b[i], i&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> m[n + <span class="number">1</span>];</span><br><span class="line">            <span class="built_in">memset</span>(m, <span class="number">0</span>, <span class="built_in">sizeof</span>(m));</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                m[a[i]] = i;</span><br><span class="line">                <span class="keyword">if</span>(a[i] &lt;= b[i] &amp;&amp; m[b[i]]) val[i] |= prvb[i] &lt; m[b[i]] &amp;&amp; nxta[m[b[i]]] &gt; i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">reverse</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">reverse</span>(b + <span class="number">1</span>, b + n + <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">reverse</span>(val + <span class="number">1</span>, val + n + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">bool</span> ans = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) ans &amp;= val[i];</span><br><span class="line">        cout &lt;&lt; (ans ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="3-29-N"><a href="https://codeforces.com/contest/1903/problem/C">3.29 N</a></h2><blockquote><p>题意：给出长度为 $n$ 的数组 $a$ ，将其划分成 $k$ 个连续子序列，使得 $sum=\sum i\times sum_i$ 最大，$i$ 是区间标号，$sum_i$ 是这个区间内所有元素的和。求这个值。</p></blockquote><p>初始默认每个数都单独一个区间并求出 $sum$ 。若选择把一个数 $a_i$ 合并到前一个区间，那么 $sum$ 会减少 $suf_{i}$ ，$suf_i$ 是从 $a_i$ 到 $a_n$ 的和，因为往后所有区间的 $i$ 都减少1。故只有当 $suf_i$ 是负数时才合并。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> pre[n+<span class="number">2</span>];</span><br><span class="line">        pre[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            pre[i]=pre[i<span class="number">-1</span>]+a[i];</span><br><span class="line">            sum+=a[i]*i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pre[n]-pre[i<span class="number">-1</span>]&lt;=<span class="number">0</span>)sum-=pre[n]-pre[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-1-O"><a href="https://codeforces.com/contest/1903/problem/D1">4.1 O</a></h2><blockquote><p>题意：给出一个长度为 $n$ 的数组 $a $ ，给出 $q$ 次询问，每次给出一个数 $k$ 。在每一次询问中，可以对任意一个数进行+1操作，一共不能超过 $k$ 次操作，求所有数的 $&amp;$ 的最大值。$nq\leq 10^5$</p></blockquote><p>从最高位开始依次向下遍历，判断能否将这一位全变为1，若需要的操作数不超过 $k$ ，那么就可以操作，否则继续。要注意每次如果操作可行，需要把对应的 $a[i]$ 进行更新。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=(<span class="type">int</span>)<span class="number">1</span>&lt;&lt;<span class="number">61</span>;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="type">int</span> aa[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;aa[i];</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        cin&gt;&gt;sum;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]=aa[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">60</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tot=<span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> x=(<span class="type">int</span>)<span class="number">1</span>&lt;&lt;i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> p=<span class="number">1</span>;p&lt;=n;p++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((a[p]&gt;&gt;i)&amp;<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="type">int</span> d;</span><br><span class="line">                <span class="keyword">if</span>(x&gt;a[p])d=x-a[p];</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    d=(x+Max-a[p])%x;</span><br><span class="line">                    <span class="keyword">if</span>(d==<span class="number">0</span>)d=x;</span><br><span class="line">                &#125;</span><br><span class="line">                tot+=d;</span><br><span class="line">                <span class="keyword">if</span>(tot&gt;sum)<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tot&lt;=sum)</span><br><span class="line">            &#123;</span><br><span class="line">                sum-=tot;</span><br><span class="line">                ans+=x;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> p=<span class="number">1</span>;p&lt;=n;p++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>((a[p]&gt;&gt;i)&amp;<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">                    <span class="type">int</span> d;</span><br><span class="line">                    <span class="keyword">if</span>(x&gt;a[p])d=x-a[p];</span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                    &#123;</span><br><span class="line">                        d=(x+Max-a[p])%x;</span><br><span class="line">                        <span class="keyword">if</span>(d==<span class="number">0</span>)d=x;</span><br><span class="line">                    &#125;</span><br><span class="line">                    a[p]+=d;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-2-P"><a href="https://codeforces.com/contest/1902/problem/C">4.2 P</a></h2><blockquote><p>题意：给出长为 $n$ 的数组 $a$ ，每个数都不相等。现需要添加一个数 $a_{n+1}$ ，其值任意指定，然后选定数 $x$ ，每次操作使每个数加上 $x$ ，最后使所有数都相等。求最少操作次数。</p></blockquote><p>最后考虑 $a_{n+1}$ ，先考虑 $x$ 。</p><p>先处理出所有数与最大数的差。若把最终的数设定为最大的数，那么 $x$ 就是所有差的最大公因数。若最终的数设定为比最大数大，设最终数与最大数的差为 $d$ ，那么 $x$ 使 $d$ 的因子，而其他的差都增加了 $d$ ，那么仍需要 $x$ 是所有差的最大公因数。故 $x$ 就是所有差的最大公因数。</p><p>考虑 $a_{n+1}$ 。$a_{n+1}$ 可以是 $maxa-kx$ ，也可是 $maxa+x$ ，比较哪种更优即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;q;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> maxx=<span class="number">-1000000005</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            q[a[i]]=<span class="number">1</span>;</span><br><span class="line">            maxx=<span class="built_in">max</span>(maxx,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;1\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> gcd=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t=maxx-a[i];</span><br><span class="line">            gcd=__gcd(gcd,t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ap;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=maxx;;i-=gcd)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(q[i]!=<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ap=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=<span class="number">1LL</span>*(maxx-a[i])/gcd;</span><br><span class="line">        &#125;</span><br><span class="line">        LL t1=(maxx-ap)/gcd+ans;</span><br><span class="line">        LL t2=ans+n;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">min</span>(t1,t2)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-4-Q"><a href="https://codeforces.com/contest/1901/problem/C">4.4 Q</a></h2><blockquote><p>题意：给定一个长度为 $n$ 的数组 $a$ ，每次操作选择一个整数 $x$ ，使数组的每个数都变成 $\lfloor \frac{a_i+x}{2}\rfloor$ 。若要把它们变得一样，最少需要操作多少次。</p></blockquote><p>假设把所有的数都变成数组中最小的数 $a_{min}$ ，那么只需要每次都使 $x$ 为 $a_{min}$ ，且操作次数就是让 $a_{max}$ 变成 $a_{min}$ 的次数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> minn=a[<span class="number">1</span>],maxx=a[n];</span><br><span class="line">    <span class="type">int</span> d=maxx-minn;</span><br><span class="line">    <span class="type">int</span> ans=d==<span class="number">0</span>?<span class="number">0</span>:<span class="built_in">log2</span>(d)+<span class="number">1</span>;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=ans;i++)cout&lt;&lt;a[<span class="number">1</span>]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-5-R"><a href="https://codeforces.com/contest/1901/problem/D">4.5 R</a></h2><blockquote><p>题意：有 $n$ 个怪兽排成一排，每个怪兽有生命值 $a_i$ ，现在选择一个怪兽对其使用连锁闪电，连锁闪电每次会随机向左右相邻的怪兽扩散，且每次扩散伤害减1。一次闪电消灭所有怪兽，求最小的初始伤害。</p></blockquote><p>假设选定 $i$ 为第一个目标，那么只要闪电全部向左扩散后，再全部向右扩散后能消灭怪兽，或者先全部向右扩散，再全部向左扩散后能消灭全部怪兽即可。</p><p>预处理两个数组，分别储存从左往右和从右往左依次消灭怪兽时每个怪兽需要的伤害值。</p><p>假设闪电先向左扩散再向右扩散，那么在向右扩散时需要满足右边怪兽所需要的最大伤害值，另一种情况同理。</p><p>因此枚举第一个目标位置，然后比较上述左右的伤害值max，然后与 $a_i$ 比较取最大值。</p><p>在闪电先向左再向右时虽然只考虑了右边能否全部消灭，但不用担心左边，因为该值会与先向右再向左的值比较，若大于，那么左边一定可以消灭掉。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">300005</span>];</span><br><span class="line"><span class="type">int</span> pre[<span class="number">300005</span>],suf[<span class="number">300005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        pre[i]=a[i]+n-i;<span class="comment">//3,2,1,0</span></span><br><span class="line">        suf[i]=a[i]+i<span class="number">-1</span>;<span class="comment">//0,1,2,3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)pre[i]=<span class="built_in">max</span>(pre[i],pre[i<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)suf[i]=<span class="built_in">max</span>(suf[i+<span class="number">1</span>],suf[i]);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1e9</span>+<span class="number">3e5</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp=a[i];</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">1</span>)tmp=<span class="built_in">max</span>(tmp,pre[i<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;n)tmp=<span class="built_in">max</span>(tmp,suf[i+<span class="number">1</span>]);</span><br><span class="line">        ans=<span class="built_in">min</span>(ans,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> mashups </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>manacher</title>
      <link href="/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/manacher/"/>
      <url>/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/manacher/</url>
      
        <content type="html"><![CDATA[<blockquote><p>给定一个字符串，$O(n)$ 时间内找出以每一个字符为回文中心时的最大回文长度。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">manacher</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c:s)</span><br><span class="line">    &#123;</span><br><span class="line">        t+=<span class="built_in">string</span>(<span class="string">&quot;#&quot;</span>)+c;</span><br><span class="line">    &#125;</span><br><span class="line">    t+=<span class="built_in">string</span>(<span class="string">&quot;#&quot;</span>);</span><br><span class="line">    <span class="type">int</span> n=t.<span class="built_in">length</span>();</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">p</span>(n+<span class="number">2</span>);</span><br><span class="line">    t=<span class="string">&quot;$&quot;</span>+t+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i]=<span class="built_in">max</span>((<span class="type">int</span>)<span class="number">0</span>,<span class="built_in">min</span>(r-i,p[l+r-i]));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(t[i+p[i]+<span class="number">1</span>]==t[i-p[i]<span class="number">-1</span>])p[i]++;</span><br><span class="line">        <span class="keyword">if</span>(i+p[i]&gt;r)</span><br><span class="line">        &#123;</span><br><span class="line">            r=i+p[i];</span><br><span class="line">            l=i-p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">begin</span>(p)+<span class="number">2</span>,<span class="built_in">end</span>(p)<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权值线段树</title>
      <link href="/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/%E6%9D%83%E5%80%BC%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
      <url>/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/%E6%9D%83%E5%80%BC%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>给出 $n$ 个数，每次有两种操作：</p><p>$1 \ i\ x $ ：把第 $i$ 个数改成 $x$ 。</p><p>$2\ sum$ ：求最少的前 $k$ 大数，使之和大于等于 $sum$ 。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>, M = <span class="number">2</span> * N;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,num;</span><br><span class="line">LL sum;</span><br><span class="line">&#125;tr[<span class="number">4</span> * M + M * <span class="number">19</span>];</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> &amp;id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(id==<span class="number">0</span>)id=++tot;</span><br><span class="line">    tr[id].num+=val;</span><br><span class="line">    tr[id].sum+=pos*val;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l==r)<span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">update</span>(tr[id].l,l,mid,pos,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(tr[id].r,mid+<span class="number">1</span>,r,pos,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,LL sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum&lt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (sum+l<span class="number">-1</span>)/l;<span class="comment">//一个节点可能有重复的多个数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(tr[tr[id].r].sum&gt;sum)<span class="keyword">return</span> <span class="built_in">query</span>(tr[id].r,mid+<span class="number">1</span>,r,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(tr[id].l,l,mid,sum-tr[tr[id].r].sum)+tr[tr[id].r].num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> rt=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[i],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> pos,t;</span><br><span class="line">        cin&gt;&gt;pos&gt;&gt;t;</span><br><span class="line">        <span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[pos],<span class="number">-1</span>),cnt--;</span><br><span class="line">        <span class="built_in">update</span>(rt,<span class="number">1</span>,inf,t,<span class="number">1</span>),cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LL sum;</span><br><span class="line">            cin&gt;&gt;sum;</span><br><span class="line">            cout&lt;&lt;<span class="built_in">query</span>(rt,<span class="number">1</span>,inf,sum)&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf-934-div-2 4/7</title>
      <link href="/2024/03/19/ACM/cf%E3%80%81atc/cf-934-div-2/"/>
      <url>/2024/03/19/ACM/cf%E3%80%81atc/cf-934-div-2/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1944">Dashboard - Codeforces Round 934 (Div. 2) - Codeforces</a></p><h2 id="B">B</h2><blockquote><p>题意：有长度为 $2n$ 的数组 $a$ ，由 $1-n$ 的每个整数组成，每个整数出现两次。需要找出两个长度为 $2k$ 的数组 $l$ ，$r$ ，使得 $l$ 是 $[a_1,a_2,…,a_n]$ 的子集， $r$ 是 $[a_{n+1},a_{n+2},…,a_{2n}]$ 的子集，且 $l_1\bigoplus l_2\bigoplus …\bigoplus l_{2k}=r_1\bigoplus r_2\bigoplus …\bigoplus r_{2k}$ 。</p></blockquote><p>将前 $n$ 个元素和后 $n$ 个元素分别排序，先考虑数组 $l$ ，即前 $n$ 个元素：若有连续的相同元素，那么都选，且数组 $r$ 需要选的两个相同元素的数量+1；然后再考虑单个的元素，那么必然是两个元素一个在 $l$ ，一个在 $r$ ，都统计上即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> a1[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;,a2[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a1[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a2[i];</span><br><span class="line">    <span class="built_in">sort</span>(a1+<span class="number">1</span>,a1+n+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">sort</span>(a2+<span class="number">1</span>,a2+n+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans1[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;,ans2[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> cnt1=<span class="number">0</span>,cnt2=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt1==<span class="number">2</span>*k)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(a1[i]==a1[i+<span class="number">1</span>] &amp;&amp; cnt1+<span class="number">2</span>&lt;=k*<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans1[++cnt1]=a1[i];</span><br><span class="line">            ans1[++cnt1]=a1[++i];</span><br><span class="line">            tot++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt1==<span class="number">2</span>*k)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(a1[i]!=a1[i+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans1[++cnt1]=a1[i];</span><br><span class="line">            ans2[++cnt2]=a1[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum==tot)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(a2[i]==a2[i+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans2[++cnt2]=a2[i];</span><br><span class="line">            ans2[++cnt2]=a2[++i];</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*k;i++)cout&lt;&lt;ans1[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*k;i++)cout&lt;&lt;ans2[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="C">C</h2><blockquote><p>题意：A和B博弈，A先行动。有一个长为 $n$ 的数组，A每次选一个数并将其移动到一个初始为空的数组 $c$ 中，B每次删除一个数，A想要使 $c$ 的 $mex$ 最大，B与其相反。求最后  $c$ 的 $mex$ 。</p></blockquote><p>将 $n$ 个数排序后，最后的答案不会超过第一个没有出现的数。在这些数中，若有出现过2次及以上的数，那么A不需要主动拿它，当B拿这个数的时候再拿这个数。因此策略是：A第一次拿掉第一个只出现过一次的数，B第一次拿掉第二个只出现过一次的数。因此答案就是B第一次拿的数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> num[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],num[a[i]]++;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans==<span class="number">-1</span>)ans=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">1</span> &amp;&amp; tot==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tot++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">1</span> &amp;&amp; tot==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><blockquote><p>题意：对于一个字符串 $t$ ，若存在一个长度为 $k$ 的子串不为回文串，那么称字符串 $t$ 为 $k-good$ 。定义 $f(t)$ 表示所有 $k$ 值只和。先给出字符串 $s$ ，给出 $q$ 个询问，每次给出 $l,r$ 求 $f(s_ls_{l+1}…s_r)$ 。</p></blockquote><p>前置知识：<a href="http://aaaarnoldddd.github.io/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/manacher/">http://aaaarnoldddd.github.io/2024/03/19/ACM/模板/manacher/</a></p><p>考虑什么样的字符串不为 $k-good$ 。</p><p>对于字符串长度为 $n$ ， $1&lt;k&lt; n$ ，</p><ol><li>当 $k$ 为偶数时，需要所有字符都相等。</li><li>当 $k $ 为奇数时，需要所有奇数位置相等，偶数位置相等。</li></ol><p>可以通过预处理来实现。</p><p>当 $k=1$ ，不存在。</p><p>当 $k=n$ ，需要判断整个字符串是否回文。使用manacher算法。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">manacher</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c:s)</span><br><span class="line">    &#123;</span><br><span class="line">        t+=<span class="built_in">string</span>(<span class="string">&quot;#&quot;</span>)+c;</span><br><span class="line">    &#125;</span><br><span class="line">    t+=<span class="built_in">string</span>(<span class="string">&quot;#&quot;</span>);</span><br><span class="line">    <span class="type">int</span> n=t.<span class="built_in">length</span>();</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">p</span>(n+<span class="number">2</span>);</span><br><span class="line">    t=<span class="string">&quot;$&quot;</span>+t+<span class="string">&quot;%&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p[i]=<span class="built_in">max</span>((<span class="type">int</span>)<span class="number">0</span>,<span class="built_in">min</span>(r-i,p[l+r-i]));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(t[i+p[i]+<span class="number">1</span>]==t[i-p[i]<span class="number">-1</span>])p[i]++;</span><br><span class="line">        <span class="keyword">if</span>(i+p[i]&gt;r)</span><br><span class="line">        &#123;</span><br><span class="line">            r=i+p[i];</span><br><span class="line">            l=i-p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="built_in">begin</span>(p)+<span class="number">2</span>,<span class="built_in">end</span>(p)<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> nxt1[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;,nxt2[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[i+<span class="number">1</span>])nxt1[i]=nxt1[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i+<span class="number">1</span>])nxt1[i]=i+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">2</span>&lt;n &amp;&amp; s[i]==s[i+<span class="number">2</span>])nxt2[i]=nxt2[i+<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">2</span>&lt;n &amp;&amp; s[i]!=s[i+<span class="number">2</span>])nxt2[i]=i+<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;nxt1[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;nxt2[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> v=<span class="built_in">manacher</span>(s);</span><br><span class="line">    <span class="comment">// for(auto x:v)cout&lt;&lt;x&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> len=r-l+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(nxt1[l<span class="number">-1</span>]&lt;=r<span class="number">-1</span> &amp;&amp; nxt1[l<span class="number">-1</span>]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(len%<span class="number">2</span>==<span class="number">1</span>)ans+=(<span class="number">2</span>+len/<span class="number">2</span>*<span class="number">2</span>)*(len/<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> ans+=(<span class="number">2</span>+len/<span class="number">2</span>*<span class="number">2</span>)*(len/<span class="number">2</span>)/<span class="number">2</span>-len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nxt2[l<span class="number">-1</span>]&lt;=r<span class="number">-1</span> &amp;&amp; nxt2[l<span class="number">-1</span>]!=<span class="number">0</span> || nxt2[l]&lt;=r<span class="number">-1</span> &amp;&amp; nxt2[l]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(len%<span class="number">2</span>==<span class="number">0</span>)ans+=(<span class="number">1</span>+(len<span class="number">-1</span>)/<span class="number">2</span>*<span class="number">2</span>+<span class="number">1</span>)*((len+<span class="number">1</span>)/<span class="number">2</span>)/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span> ans+=(<span class="number">1</span>+(len<span class="number">-1</span>)/<span class="number">2</span>*<span class="number">2</span>+<span class="number">1</span>)*((len+<span class="number">1</span>)/<span class="number">2</span>)/<span class="number">2</span>-len<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(v[l+r<span class="number">-2</span>]&lt;len)ans+=len;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性神经网络(2)-softmax回归的实现</title>
      <link href="/2024/03/19/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax%E5%9B%9E%E5%BD%92/"/>
      <url>/2024/03/19/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>对于分类问题，我们希望的是输出一个标签，表示属于哪一类，因此对于每一个标签都应输出一个概率，概率最大的即为标签。采用softmax进行归一化：<br>$$<br>\hat {\pmb y}=softmax(\pmb o),\hat y_j=\frac{e^{o_j}}{\sum_{k}e^{o_k}}<br>$$<br>因此softmax的矢量计算表达式为：<br>$$<br>\pmb O=\pmb X\pmb W+\pmb b,\hat{\pmb Y}=softmax(\pmb O)<br>$$<br>定义损失函数为交叉熵：<br>$$<br>l(y,\hat y)=-\sum y_j log\hat{y_j}<br>$$<br>然后每次利用梯度对参数进行更新。</p><h2 id="softmax回归的实现-TensorFlow的高级API">softmax回归的实现(TensorFlow的高级API)</h2><ol><li>读取数据集；</li><li>定义模型；</li><li>定义损失函数、优化器；</li><li>设置超参数进行训练</li></ol><h3 id="导入数据集">导入数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> tensorflow <span class="keyword">as</span> d2l</span><br><span class="line">batch_size = <span class="number">256</span></span><br><span class="line">train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)</span><br></pre></td></tr></table></figure><h3 id="初始化模型参数">初始化模型参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">net = tf.keras.models.Sequential()</span><br><span class="line"><span class="comment">###添加输入层Flatten，定义输入为一个28*28的矩阵，在实际输入时会展平为784个输入</span></span><br><span class="line">net.add(tf.keras.layers.Flatten(input_shape=(<span class="number">28</span>, <span class="number">28</span>)))</span><br><span class="line">weight_initializer = tf.keras.initializers.RandomNormal(mean=<span class="number">0.0</span>, stddev=<span class="number">0.01</span>)</span><br><span class="line"><span class="comment">###添加全连接层为10个节点，即为输出，初始化权重</span></span><br><span class="line">net.add(tf.keras.layers.Dense(<span class="number">10</span>, kernel_initializer=weight_initializer))</span><br><span class="line"></span><br><span class="line"><span class="comment">###定义损失函数</span></span><br><span class="line"><span class="comment">###为了避免softmax后产生上溢或下溢，将softmax和求交叉熵在一步中完成。类似于LogSumExp技巧</span></span><br><span class="line">loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###定义优化算法</span></span><br><span class="line">trainer = tf.keras.optimizers.SGD(learning_rate=<span class="number">.1</span>)</span><br></pre></td></tr></table></figure><h3 id="定义分类精度函数">定义分类精度函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###计算预测正确的数量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">accuracy</span>(<span class="params">y_hat, y</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(y_hat.shape) &gt; <span class="number">1</span> <span class="keyword">and</span> y_hat.shape[<span class="number">1</span>] &gt; <span class="number">1</span>:</span><br><span class="line">        y_hat = tf.argmax(y_hat, axis=<span class="number">1</span>)</span><br><span class="line">    cmp = tf.cast(y_hat, y.dtype) == y</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">float</span>(tf.reduce_sum(tf.cast(cmp, y.dtype)))</span><br><span class="line"></span><br><span class="line"><span class="comment">###计算在指定数据集上模型的精度</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Accumulator</span>:  </span><br><span class="line">    <span class="comment"># 正确预测数、预测总数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, n</span>):</span><br><span class="line">        self.data = [<span class="number">0.0</span>] * n</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, *args</span>):</span><br><span class="line">        self.data = [a + <span class="built_in">float</span>(b) <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(self.data, args)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">        self.data = [<span class="number">0.0</span>] * <span class="built_in">len</span>(self.data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        <span class="keyword">return</span> self.data[idx]</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evaluate_accuracy</span>(<span class="params">net, data_iter</span>):</span><br><span class="line">    metric = Accumulator(<span class="number">2</span>)  <span class="comment"># 正确预测数、预测总数</span></span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter:</span><br><span class="line">        metric.add(accuracy(net(X), y), d2l.size(y))</span><br><span class="line">    <span class="keyword">return</span> metric[<span class="number">0</span>] / metric[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="作图">作图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###在动画中绘制数据</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animator</span>:      </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, xlabel=<span class="literal">None</span>, ylabel=<span class="literal">None</span>, legend=<span class="literal">None</span>, xlim=<span class="literal">None</span>,</span></span><br><span class="line"><span class="params">                 ylim=<span class="literal">None</span>, xscale=<span class="string">&#x27;linear&#x27;</span>, yscale=<span class="string">&#x27;linear&#x27;</span>,</span></span><br><span class="line"><span class="params">                 fmts=(<span class="params"><span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;m--&#x27;</span>, <span class="string">&#x27;g-.&#x27;</span>, <span class="string">&#x27;r:&#x27;</span></span>), nrows=<span class="number">1</span>, ncols=<span class="number">1</span>,</span></span><br><span class="line"><span class="params">                 figsize=(<span class="params"><span class="number">3.5</span>, <span class="number">2.5</span></span>)</span>):</span><br><span class="line">        <span class="comment"># 增量地绘制多条线</span></span><br><span class="line">        <span class="keyword">if</span> legend <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            legend = []</span><br><span class="line">        d2l.use_svg_display()</span><br><span class="line">        self.fig, self.axes = d2l.plt.subplots(nrows, ncols, figsize=figsize)</span><br><span class="line">        <span class="keyword">if</span> nrows * ncols == <span class="number">1</span>:</span><br><span class="line">            self.axes = [self.axes, ]</span><br><span class="line">        <span class="comment"># 使用lambda函数捕获参数</span></span><br><span class="line">        self.config_axes = <span class="keyword">lambda</span>: d2l.set_axes(</span><br><span class="line">            self.axes[<span class="number">0</span>], xlabel, ylabel, xlim, ylim, xscale, yscale, legend)</span><br><span class="line">        self.X, self.Y, self.fmts = <span class="literal">None</span>, <span class="literal">None</span>, fmts</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="comment"># 向图表中添加多个数据点</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(y, <span class="string">&quot;__len__&quot;</span>):</span><br><span class="line">            y = [y]</span><br><span class="line">        n = <span class="built_in">len</span>(y)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(x, <span class="string">&quot;__len__&quot;</span>):</span><br><span class="line">            x = [x] * n</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.X:</span><br><span class="line">            self.X = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.Y:</span><br><span class="line">            self.Y = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="keyword">for</span> i, (a, b) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(x, y)):</span><br><span class="line">            <span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                self.X[i].append(a)</span><br><span class="line">                self.Y[i].append(b)</span><br><span class="line">        self.axes[<span class="number">0</span>].cla()</span><br><span class="line">        <span class="keyword">for</span> x, y, fmt <span class="keyword">in</span> <span class="built_in">zip</span>(self.X, self.Y, self.fmts):</span><br><span class="line">            self.axes[<span class="number">0</span>].plot(x, y, fmt)</span><br><span class="line">        self.config_axes()</span><br><span class="line">        display.display(self.fig)</span><br><span class="line">        display.clear_output(wait=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="训练">训练</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_epoch_ch3</span>(<span class="params">net, train_iter, loss, updater</span>):</span><br><span class="line">    <span class="comment"># 训练损失总和、训练准确度总和、样本数</span></span><br><span class="line">    metric = Accumulator(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> train_iter:</span><br><span class="line">        <span class="comment"># 计算梯度并更新参数</span></span><br><span class="line">        <span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape:</span><br><span class="line">            y_hat = net(X)</span><br><span class="line">            l = loss(y, y_hat)</span><br><span class="line">                 </span><br><span class="line">        params = net.trainable_variables</span><br><span class="line">        grads = tape.gradient(l, params)</span><br><span class="line">        updater.apply_gradients(<span class="built_in">zip</span>(grads, params))</span><br><span class="line">        <span class="comment"># Keras的loss默认返回一个批量的平均损失</span></span><br><span class="line">        l_sum = l * <span class="built_in">float</span>(tf.size(y)) </span><br><span class="line">        metric.add(l_sum, accuracy(y_hat, y), tf.size(y))</span><br><span class="line">    <span class="comment"># 返回训练损失和训练精度</span></span><br><span class="line">    <span class="keyword">return</span> metric[<span class="number">0</span>] / metric[<span class="number">2</span>], metric[<span class="number">1</span>] / metric[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_ch3</span>(<span class="params">net, train_iter, test_iter, loss, num_epochs, trainer</span>):</span><br><span class="line">    animator = Animator(xlabel=<span class="string">&#x27;epoch&#x27;</span>, xlim=[<span class="number">1</span>, num_epochs], ylim=[<span class="number">0.3</span>, <span class="number">0.9</span>],</span><br><span class="line">                        legend=[<span class="string">&#x27;train loss&#x27;</span>, <span class="string">&#x27;train acc&#x27;</span>, <span class="string">&#x27;test acc&#x27;</span>])</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">        train_metrics = train_epoch_ch3(net, train_iter, loss, trainer)</span><br><span class="line">        test_acc = evaluate_accuracy(net, test_iter)</span><br><span class="line">        animator.add(epoch + <span class="number">1</span>, train_metrics + (test_acc,))</span><br><span class="line">    train_loss, train_acc = train_metrics</span><br><span class="line">    </span><br><span class="line">    <span class="comment">###如果不满足条件就停止并输出</span></span><br><span class="line">    <span class="keyword">assert</span> train_loss &lt; <span class="number">0.5</span>, train_loss</span><br><span class="line">    <span class="keyword">assert</span> train_acc &lt;= <span class="number">1</span> <span class="keyword">and</span> train_acc &gt; <span class="number">0.7</span>, train_acc</span><br><span class="line">    <span class="keyword">assert</span> test_acc &lt;= <span class="number">1</span> <span class="keyword">and</span> test_acc &gt; <span class="number">0.7</span>, test_acc</span><br><span class="line">    </span><br><span class="line">num_epochs = <span class="number">10</span></span><br><span class="line">train_ch3(net, train_iter, test_iter, cross_entropy, num_epochs, updater)</span><br></pre></td></tr></table></figure><h3 id="预测">预测</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###只显示6张</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict_ch3</span>(<span class="params">net, test_iter, n=<span class="number">6</span></span>): </span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> test_iter:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    trues = d2l.get_fashion_mnist_labels(y)</span><br><span class="line">    preds = d2l.get_fashion_mnist_labels(tf.argmax(net(X), axis=<span class="number">1</span>))</span><br><span class="line">    titles = [true +<span class="string">&#x27;\n&#x27;</span> + pred <span class="keyword">for</span> true, pred <span class="keyword">in</span> <span class="built_in">zip</span>(trues, preds)]</span><br><span class="line">    d2l.show_images(</span><br><span class="line">        tf.reshape(X[<span class="number">0</span>:n], (n, <span class="number">28</span>, <span class="number">28</span>)), <span class="number">1</span>, n, titles=titles[<span class="number">0</span>:n])</span><br><span class="line"></span><br><span class="line">predict_ch3(net, test_iter)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
          <category> 线性神经网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.17</title>
      <link href="/2024/03/18/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-17/"/>
      <url>/2024/03/18/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-17/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/511836">Dashboard - 3.17 周赛 - Codeforces</a></p><h2 id="B">B</h2><p>水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">3</span>)cout&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;n<span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><p>字符串模拟水题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">string s[<span class="number">30</span>];</span><br><span class="line">map&lt;string,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;mp;<span class="comment">//映射的序号、有几个翻译</span></span><br><span class="line">set&lt;string&gt;ppp;</span><br><span class="line"><span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">string str[<span class="number">21</span>][<span class="number">100005</span>];</span><br><span class="line"><span class="type">bool</span> check[<span class="number">21</span>][<span class="number">100005</span>];</span><br><span class="line"><span class="type">int</span> cor[<span class="number">21</span>],all[<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;s[i],ppp.<span class="built_in">insert</span>(s[i]);</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string x,y;</span><br><span class="line">        string flag;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;flag;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ppp.<span class="built_in">find</span>(x)==ppp.<span class="built_in">end</span>())<span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mp[x].first==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mp[x].first=++cnt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        str[mp[x].first][++mp[x].second]=y;</span><br><span class="line"></span><br><span class="line">        all[mp[x].first]++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="string">&quot;correct&quot;</span>)cor[mp[x].first]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> cr=<span class="number">1</span>,al=<span class="number">1</span>;</span><br><span class="line">    <span class="type">bool</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mp[s[i]].second&gt;<span class="number">1</span>)f=<span class="number">0</span>;</span><br><span class="line">        cr*=cor[mp[s[i]].first];</span><br><span class="line">        al*=all[mp[s[i]].first];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;cr&lt;&lt;<span class="string">&quot; correct\n&quot;</span>&lt;&lt;al-cr&lt;&lt;<span class="string">&quot; incorrect&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;str[mp[s[i]].first][<span class="number">1</span>]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(cor[mp[s[i]].first]==<span class="number">0</span>)f=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)cout&lt;&lt;<span class="string">&quot;\ncorrect&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;\nincorrect&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="H">H</h2><blockquote><p>题意：给定 $a,b,c,d$ ，其中 $d$ 可以分配给 $a,b,c$ ，求 $a^2+b^2+c^2+7\times min(a,b,c)$ 的最大值。</p></blockquote><p>假设 $a\geq b\geq c$ ，若不考虑 $min(a,b,c)$ ，那么一定是将 $d$ 全部分配给 $a$ 使结果最大。</p><p>若考虑 $min(a,b,c)$ ，那么将 $d$ 同时分配给 $a$ 和 $c$ 可以使结果变大。假设分配 $k$ 给 $a$ ，且 $c$ 不大于 $b$ 。（若 $c=b$ 了，那么需要同时增加 $c$ 和 $b$ 才能改变最后一项，不优）那么此时增加的值为：<br>$$<br>delta=[(a+d-k)^2+b^2+(c+k)^2+7\times (c+k)]-[a^2+b^2+c^2+7\times c]<br>$$<br>化简后得到：<br>$$<br>delta=2k^2+(7-2a-2d+2c)k+2ad+d^2<br>$$<br>得到的是一个二次函数，分析可知当对称轴大于0时， $d\geq 4$ 时。因 $c$ 需小于 $b$ ，而当 $d\geq 4$ 时满足：$2\times \frac{2a+2d-2c-7}{4}\geq b-c=k$ ，故此时最大值即在 $k=0$ 时取到。若 $d&lt;4$ ，直接枚举。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL d;</span><br><span class="line">LL a[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[<span class="number">1</span>] &gt;&gt; a[<span class="number">2</span>] &gt;&gt; a[<span class="number">3</span>];</span><br><span class="line">        cin &gt;&gt; d;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + <span class="number">3</span>, <span class="built_in">greater</span>&lt;LL&gt;());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(d &gt;= <span class="number">4</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (a[<span class="number">1</span>] + d) * (a[<span class="number">1</span>] + d) + a[<span class="number">2</span>] * a[<span class="number">2</span>] + a[<span class="number">3</span>] * a[<span class="number">3</span>] + <span class="number">7</span> * <span class="built_in">min</span>(a[<span class="number">2</span>] , a[<span class="number">3</span>]) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            LL res = (a[<span class="number">1</span>]) * (a[<span class="number">1</span>]) + a[<span class="number">2</span>] * a[<span class="number">2</span>] + a[<span class="number">3</span>] * a[<span class="number">3</span>] + <span class="number">7</span> * <span class="built_in">min</span>(a[<span class="number">2</span>] , a[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= d; i ++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= d; j ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> k = d - i - j;</span><br><span class="line">                    <span class="keyword">if</span>(k&gt;=<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        LL ans = (a[<span class="number">1</span>] + i) * (a[<span class="number">1</span>] + i) + (a[<span class="number">2</span>] + j) * (a[<span class="number">2</span>]+j) + (a[<span class="number">3</span>]+k) * (a[<span class="number">3</span>]+k) + <span class="number">7</span> * <span class="built_in">min</span>(a[<span class="number">1</span>] + i, <span class="built_in">min</span>(a[<span class="number">2</span>] +j , a[<span class="number">3</span>]+k));</span><br><span class="line">                        <span class="keyword">if</span>(ans &gt; res)res = ans;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            cout &lt;&lt; res &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="I">I</h2><blockquote><p>题意：一台电脑容量为 $c$ ，现在有 $n$ 个程序，每个程序下载需要容量 $d$ ，安装需要容量 $s$ ，每个程序在下载后安装时，占的容量会马上从 $d$ 转换成 $s$ 。问最多能下载多少个程序，并打印出下载顺序。</p></blockquote><p>首先考虑对于两个程序 $d_1,s_1$ 与 $d_2,s_2$ ，若先安装第二个，那么需要满足：<br>$$<br>s_2+d_1\leq s_1+d_2<br>$$<br>即：<br>$$<br>d_2-s_2\geq d_1-s_1<br>$$<br>因此全部按照 $d-s$ 进行排序，此时选择顺序一定是按照这个顺序，因此可以线性背包解决。</p><p>考虑设状态为 $dp[i][j]$ ，第二位表示安装好程序后占用的空间。状态转移方程为：<br>$$<br>dp[i][j]=max(dp[i-1][j],dp[i-1][j-s[i]]+1)<br>$$<br>但是需注意限制条件：$c-(j-s[i])\geq d[i]$ ，因为第一步下载时要保证空间足够。</p><p>打印路径时从后往前一个一个对比从那个状态转移来。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> d,s,id;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[<span class="number">505</span>][MAXN],n,V;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> Node a, <span class="type">const</span> Node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a.d - a.s) &gt; (b.d - b.s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;1.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;V;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i].d &gt;&gt; a[i].s;</span><br><span class="line">        a[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=V;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = f[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(V-(j-a[i].s) &lt; a[i].d) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(j &lt; a[i].s) <span class="keyword">continue</span>;</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i<span class="number">-1</span>][j], f[i<span class="number">-1</span>][j-a[i].s]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> Max = <span class="number">0</span>, v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=V;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[n][i] &gt; Max)</span><br><span class="line">        &#123;</span><br><span class="line">            Max = f[n][i];</span><br><span class="line">            v = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[n][v] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(f[n][v] == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> q[MAXN],cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>&amp;&amp;v&gt;<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[i][v] == f[i<span class="number">-1</span>][v-a[i].s]+<span class="number">1</span> &amp;&amp; v-a[i].s&gt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q[++cnt] = a[i].id;</span><br><span class="line">            v -= a[i].s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=cnt;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; q[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="K">K</h2><blockquote><p>题意：有 $n$ 个人参加锦标赛（$n\leq 4096$），两两对决，赢家进入下一轮，输家直接淘汰。每个人有一个能力值，当能力值为 $a_i$ 的人与 $a_j$ 的人对决，赢得概率是 $\frac{a_i}{a_i+a_j}$。若人数不是2的幂次，首先进行一次预选淘汰一部分人使总人数为2的幂次再进行正式比赛。现请求出一种初始对决的位置安排，使1号获胜的概率最大，输出获胜概率。</p></blockquote><p><s>好恶心的dp</s></p><ol><li><p>首先考虑如何安排位置能够使1号获胜概率最大。</p><blockquote><p>策略：除了1之外所有人从小到大排序，若需要淘汰 $x$ 个人，那么选能力最强的 $2x$ 个人进行预选。</p><p>$proof$ ：若离1号越近的人能力越强，那么在越近的回合中1号获胜的概率就越小；若能力强的人离1号远，那么在更后的回合中1号才会遇到他，而此时能力强的人坚持到这个回合会乘上一个概率，那么1号赢的概率就越大。</p><p>同时若需要预选，那么淘汰能力值强的一定是好的。</p></blockquote></li><li><p>然后考虑如何得到最终的概率。</p><blockquote><p>可以得到第 $k$ 轮比赛中选手 $p$ 可能会与 $2^{k-1}$ 个人进行比赛，而这 $2^{k-1}$ 个人来自离 $p$ 相邻的块 $S$ 中；设状态为 $dp[p][k]$ 表示选手 $p$ 赢得第 $k$ 轮的概率，那么有状态转移方程：<br>$$<br>dp[p][k]=dp[p][k-1]\sum_{i\in S}\frac{a[p]}{a[p]+a[i]}dp[i][k-1]<br>$$<br>初始 $dp[p][0]=1$ 。</p><p>需要注意若需要进行预选赛，那么把总人数当做 $2^x$ ，只是在进行过预选选上来的位置打上标记，若遍历到这点时，要分别计算这个位置包含的两个人的贡献。同时，需要预选的选手的 $dp[p][0]$ 设置为预选赛胜的概率。</p></blockquote></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> s[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> ns[<span class="number">5000</span>];</span><br><span class="line"><span class="type">double</span> dp[<span class="number">5000</span>][<span class="number">20</span>];</span><br><span class="line"><span class="type">bool</span> d[<span class="number">5000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;s[i];</span><br><span class="line">    <span class="built_in">sort</span>(s+<span class="number">2</span>,s+n+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> lft=n-<span class="built_in">pow</span>(<span class="number">2</span>,<span class="built_in">int</span>(<span class="built_in">log2</span>(n)));</span><br><span class="line">    n=<span class="built_in">pow</span>(<span class="number">2</span>,<span class="built_in">int</span>(<span class="built_in">log2</span>(n)));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n-lft+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        d[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i]==<span class="number">0</span>)dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> num=(n-lft)+(i-(n-lft))*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">            dp[num][<span class="number">0</span>]=<span class="number">1.0</span>*s[num]/(s[num]+s[num+<span class="number">1</span>]);</span><br><span class="line">            dp[num+<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1.0</span>*s[num+<span class="number">1</span>]/(s[num]+s[num+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="built_in">int</span>(<span class="built_in">log2</span>(n));k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> p=<span class="number">1</span>;p&lt;=n;p++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            <span class="type">int</span> pw=<span class="built_in">pow</span>(<span class="number">2</span>,k);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(p%pw==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x=<span class="number">1</span>+(p<span class="number">-1</span>)/pw*pw;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> tmp1=p-p/pw*pw;</span><br><span class="line">                <span class="keyword">if</span>(tmp1&gt;pw/<span class="number">2</span>) x=<span class="number">1</span>+p/pw*pw;</span><br><span class="line">                <span class="keyword">else</span> x=pw/<span class="number">2</span>+<span class="number">1</span>+p/pw*pw;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;x+<span class="built_in">pow</span>(<span class="number">2</span>,k<span class="number">-1</span>);i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[p]==<span class="number">0</span> &amp;&amp; d[i]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[p][k]+=dp[p][k<span class="number">-1</span>] * s[p]/(s[p]+s[i]) * dp[i][k<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(d[p]==<span class="number">0</span> &amp;&amp; d[i]!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> num=(n-lft)+(i-(n-lft))*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">                    dp[p][k]+=dp[p][k<span class="number">-1</span>] * s[p]/(s[p]+s[num]) * dp[num][k<span class="number">-1</span>];</span><br><span class="line">                    dp[p][k]+=dp[p][k<span class="number">-1</span>] * s[p]/(s[p]+s[num+<span class="number">1</span>]) * dp[num+<span class="number">1</span>][k<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(d[p]!=<span class="number">0</span> &amp;&amp; d[i]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> num=(n-lft)+(p-(n-lft))*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">                    dp[num][k]+=dp[num][k<span class="number">-1</span>] * s[num]/(s[num]+s[i]) * dp[i][k<span class="number">-1</span>];</span><br><span class="line">                    dp[num+<span class="number">1</span>][k]+=dp[num+<span class="number">1</span>][k<span class="number">-1</span>] * s[num+<span class="number">1</span>]/(s[num+<span class="number">1</span>]+s[i]) * dp[i][k<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(d[p]!=<span class="number">0</span> &amp;&amp; d[i]!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> nump=(n-lft)+(p-(n-lft))*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">                    <span class="type">int</span> numi=(n-lft)+(i-(n-lft))*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">                    dp[nump][k]+=dp[nump][k<span class="number">-1</span>] * s[nump]/(s[nump]+s[numi]) * dp[numi][k<span class="number">-1</span>];</span><br><span class="line">                    dp[nump][k]+=dp[nump][k<span class="number">-1</span>] * s[nump]/(s[nump]+s[numi+<span class="number">1</span>]) * dp[numi+<span class="number">1</span>][k<span class="number">-1</span>];</span><br><span class="line">                    dp[nump+<span class="number">1</span>][k]+=dp[nump+<span class="number">1</span>][k<span class="number">-1</span>] * s[nump+<span class="number">1</span>]/(s[nump+<span class="number">1</span>]+s[numi]) * dp[numi][k<span class="number">-1</span>];</span><br><span class="line">                    dp[nump+<span class="number">1</span>][k]+=dp[nump+<span class="number">1</span>][k<span class="number">-1</span>] * s[nump+<span class="number">1</span>]/(s[nump+<span class="number">1</span>]+s[numi+<span class="number">1</span>]) * dp[numi+<span class="number">1</span>][k<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">15</span>)&lt;&lt;dp[<span class="number">1</span>][<span class="built_in">int</span>(<span class="built_in">log2</span>(n))];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> math </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf-ECR 163 5/7</title>
      <link href="/2024/03/16/ACM/cf%E3%80%81atc/cf-ECR163/"/>
      <url>/2024/03/16/ACM/cf%E3%80%81atc/cf-ECR163/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1948">Dashboard - Educational Codeforces Round 163 (Rated for Div. 2) - Codeforces</a></p><h2 id="C">C</h2><blockquote><p>题意：有一个 $2\times n$ 的网格，每个格子有一个指向左或右的箭头。有一机器人从 $(1,1)$ 开始，每次的操作如下：先向上下左右走到任一个网格(不能超出地图)，然后根据该格箭头走一步。问能否走到 $(2,n)$ 。</p></blockquote><p>dfs</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> mp[<span class="number">3</span>][<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> v[<span class="number">3</span>][<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">1</span> || x&gt;<span class="number">2</span> || y&lt;<span class="number">1</span> ||y&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(v[x][y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">2</span> &amp;&amp; y==n)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    v[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nx=x+dx[i];</span><br><span class="line">        <span class="type">int</span> ny=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">check</span>(nx,ny))<span class="keyword">continue</span>;</span><br><span class="line">        ny+=mp[nx][ny];</span><br><span class="line">        <span class="built_in">dfs</span>(nx,ny);</span><br><span class="line">        <span class="keyword">if</span>(flag)<span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)v[<span class="number">1</span>][i]=<span class="number">0</span>,v[<span class="number">2</span>][i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> c;</span><br><span class="line">            cin&gt;&gt;c;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">&#x27;&gt;&#x27;</span>)mp[i][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> mp[i][j]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(flag)cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><blockquote><p>给一个由小写字母和问号组成的字符串 $s$，问号可以表示任何字母。求最大的偶数长度的连续子串，其前半部分与后半部分相同。$n\leq 5000$</p></blockquote><p>一开始考虑区间dp，发现不能转移，然后换了思路。。</p><p>枚举一半的子串长度 $len$，处理某一位置后 $len$ 的位置是否与此相同，然后找连续相同的元素，若连续超过 $len$ 那么长度为 $2\times len$ 的子串存在。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">5005</span>];</span><br><span class="line">    cin&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> len=<span class="number">1</span>;len*<span class="number">2</span>&lt;=n;len++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> q[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+len&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[i+len] || s[i]==<span class="string">&#x27;?&#x27;</span> || s[i+len]==<span class="string">&#x27;?&#x27;</span>)q[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> q[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(q[i])cnt++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt&gt;=len)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans=<span class="built_in">max</span>(ans,len*<span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                cnt=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="E">E</h2><blockquote><p>题意：给两个整数 $n$ 和 $k$ ，$n$ 个顶点上有一个图。现在需要给每一个顶点分配一个 $1-n$ 整数 $a_i$ ，对于两个顶点，如果 $|i - j| + |a_i - a_j| ≤ k$ ，那么在这两个点之间添加一条边。现在需要把这个图分割成尽量少的群，对于每一个群，任两个顶点之间存在一条边。求每个顶点分配的整数、最小群的数量以及每个顶点属于哪一个群。</p></blockquote><p><s>好妙的贪心</s></p><ol><li>不要从整个图开始考虑，从每个群开始考虑。在限制条件中 $|i - j|$ 是固定的因此要使得满足条件，选择序号连续的点构成一个群是最优的。</li><li>对于一个群，分配整数时，同样选择一段连续的整数进行分配是最优的。因此从1开始依次选择连续的整数段分配给对应的群。</li><li>考虑大小为 $n$ 的群能否满足 $|i - j| + |a_i - a_j| ≤ n$ 。假设序号为 $1-n$ 的点对应整数 $1-n$ ，考虑将数列对半分，即对序号为 $1-\lceil \frac{n}{2}\rceil$ 的点，依次分配 $\lceil \frac{n}{2}\rceil,\lceil \frac{n}{2}\rceil-1,…,2,1$ ，对序号为 $\lceil \frac{n}{2}\rceil+1-n$ 的点，依次分配 $n,n-1,…,\lceil \frac{n}{2}\rceil+2,\lceil \frac{n}{2}\rceil+1$ 。这样保证每个半区内部的最大值为 $n-2$ ，不同半区的任两个元素的差均为 $n$ 。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> a[k+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> ans[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> c[n+<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> tot=(n<span class="number">-1</span>)/k+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(k<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=(k<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">1</span>-i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=(k<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">2</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=k-i+(k<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=tot || i==tot &amp;&amp; tot*k==n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[k*(i<span class="number">-1</span>)+j]=a[j]+k*(i<span class="number">-1</span>);</span><br><span class="line">                c[k*(i<span class="number">-1</span>)+j]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> r=n%k;</span><br><span class="line">            <span class="type">int</span> b=n/k*k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=(r<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[b+j]=(r<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">1</span>-j+<span class="number">1</span>+b;</span><br><span class="line">                c[b+j]=tot;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=(r<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">2</span>;j&lt;=r;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[b+j]=r-j+(r<span class="number">-1</span>)/<span class="number">2</span>+<span class="number">2</span>+b;</span><br><span class="line">                c[b+j]=tot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;tot&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;c[i]&lt;&lt;<span class="string">&quot; &quot;</span>;cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> strings </tag>
            
            <tag> bfs/dfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.14</title>
      <link href="/2024/03/14/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-14/"/>
      <url>/2024/03/14/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-14/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104869">Dashboard - The 2023 ICPC Asia Shenyang Regional Contest (The 2nd Universal Cup. Stage 13: Shenyang) - Codeforces</a></p><h2 id="C">C</h2><p>水题</p><hr><h2 id="E">E</h2><blockquote><p>题意：有羊 $x$ 只，狼 $y$ 只，有一人用一艘容量为 $p$ 的船要将所有的羊运到对岸，但当人不在的一边中狼严格大于羊的数量加 $q$ ，羊就会被吃掉。在保证羊安全的前提下至少需要运多少次。</p></blockquote><p>考虑设计 $dp$ 状态：$dp[i][j][k]$ ，表示人在 $k $ 岸时，初始岸的羊和狼的数量为 $i,j$ 时的最小次数。</p><p>因为求最少次数，用 $bfs$ 更新状态。每次可以转移如下：<br>$$<br>dp[i][j][1]\rightarrow dp[i-n][j-m][2],n+m=p,i-n\geq j-m+q<br>$$</p><p>$$<br>dp[i][j][2]\rightarrow dp[i][j+m][1]<br>$$</p><p>每次运送到对岸时都把容量排满是最优的；</p><p>往回运的时候只把多余的狼运回，保证对岸满足条件即可。</p><p>最终的答案就是 $dp[0][y’][2]$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">state</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y,id;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n,m,p,q;</span><br><span class="line"><span class="type">int</span> d[N][N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; p &gt;&gt; q;</span><br><span class="line">    queue&lt;state&gt;heap;</span><br><span class="line"></span><br><span class="line">    heap.<span class="built_in">push</span>(&#123;n, m, <span class="number">1</span>&#125;);</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">    d[n][m][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(heap.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = heap.<span class="built_in">front</span>();</span><br><span class="line">        heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> x = t.x, y = t.y, id = t.id;</span><br><span class="line">        <span class="type">int</span> dis = d[x][y][id];</span><br><span class="line">        <span class="comment">//cout &lt;&lt; x &lt;&lt; &#x27; &#x27; &lt;&lt; y &lt;&lt; &#x27; &#x27; &lt;&lt; id &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">if</span>(!x) </span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            cout &lt;&lt; dis &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(id == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x + y &lt;= p) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[<span class="number">0</span>][<span class="number">0</span>][<span class="number">2</span>] == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    d[<span class="number">0</span>][<span class="number">0</span>][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="built_in">min</span>(x, p); i ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(p - i &gt;= y) </span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(d[x - i][<span class="number">0</span>][<span class="number">2</span>] == <span class="number">-1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            d[x - i][<span class="number">0</span>][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                            heap.<span class="built_in">push</span>(&#123;x - i, <span class="number">0</span>, <span class="number">2</span>&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="type">int</span> sheep = x - i;</span><br><span class="line">                        <span class="type">int</span> wolf = y - (p - i);</span><br><span class="line">                        <span class="keyword">if</span>(!sheep || (sheep + q &gt;= wolf &amp;&amp; d[sheep][wolf][<span class="number">2</span>] == <span class="number">-1</span>) )</span><br><span class="line">                        &#123;</span><br><span class="line">                            d[sheep][wolf][<span class="number">2</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                            heap.<span class="built_in">push</span>(&#123;sheep, wolf, <span class="number">2</span>&#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sx = n - x, sy = m - y;</span><br><span class="line">            <span class="keyword">if</span>(sx &amp;&amp; sx + q &lt; sy)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> cnt = sy - sx - q;</span><br><span class="line">                <span class="keyword">if</span>(d[x][y + cnt][<span class="number">1</span>] == <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    d[x][y + cnt][<span class="number">1</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123;x, y + cnt, <span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(d[x][y][<span class="number">1</span>] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d[x][y][<span class="number">1</span>] = dis + <span class="number">1</span>;</span><br><span class="line">                heap.<span class="built_in">push</span>(&#123;x, y, <span class="number">1</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="J">J</h2><blockquote><p>题意：给出一颗树，两人轮流执行，每次选择相连的一对顶点 $u,v$ ，然后将所有与 $u$ 相连的顶点全部连向 $v$ ，保证每次操作之后的新树与操作之前的原树不是同构树，当某人无法操作时则输掉比赛。求谁会赢。</p></blockquote><p>找规律题。</p><p>最后的终止状态是一棵只有两层的树，所有的儿子都连向一个根节点。</p><p>因此，每次最优解是选择某一父节点与一个子节点，将所有与子节点相连的点连向父节点，相当于每次将深度减少一层，故只需统计每个点的度来判断满足条件的操作对。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> d[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        d[x]++;</span><br><span class="line">        d[y]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(d[i]&gt;=<span class="number">2</span>)cnt++;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;Bob&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;Alice&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(cnt%<span class="number">2</span>==<span class="number">1</span>)cout&lt;&lt;<span class="string">&quot;Bob&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="K">K</h2><blockquote><p>题意：给出 $n$ 场比赛每场比赛后rating的升降，初始rating是0，可以随便安排比赛的顺序，问rating最大值的更新次数有多少种不同的取值。</p></blockquote><p>前置知识：<a href="http://aaaarnoldddd.github.io/2024/03/19/ACM/%E6%A8%A1%E6%9D%BF/%E6%9D%83%E5%80%BC%E7%BA%BF%E6%AE%B5%E6%A0%91/">http://aaaarnoldddd.github.io/2024/03/19/ACM/模板/权值线段树/</a></p><p><s>想出思路但是不会数据结构</s></p><p>将所有的rating分为正负两类，将正rating降序排列，将负rating求和看做一个整体，考虑负rating能产生多大的影响：</p><p>若将负rating放在最后，那么rating更新次数就是正rating的个数；</p><p>若将负rating放在最后一个正rating之前且大于最后一个正rating，那么rating更新次数就是正rating的个数-1；</p><p>若将负rating放在最后两个正rating之前且大于最后两个正rating和，那么rating更新次数就是正rating的个数-2；</p><p>……</p><p>假设前 $k$ 次更新可行，那么前 $k$ 个数的和一定大于所有rating的和，因此使用权值线段树，其中包括单点更新和查询操作，每次查询最少的最大的 $k$ 个数的和大于等于 $sum$ ，答案就是 $cnt(+)-k+1$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>, M = <span class="number">2</span> * N;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,num;</span><br><span class="line">LL sum;</span><br><span class="line">&#125;tr[<span class="number">4</span> * M + M * <span class="number">19</span>];</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> &amp;id,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> pos,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(id==<span class="number">0</span>)id=++tot;</span><br><span class="line">    tr[id].num+=val;</span><br><span class="line">    tr[id].sum+=pos*val;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l==r)<span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid)<span class="built_in">update</span>(tr[id].l,l,mid,pos,val);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(tr[id].r,mid+<span class="number">1</span>,r,pos,val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> id,<span class="type">int</span> l,<span class="type">int</span> r,LL sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum&lt;=<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (sum+l<span class="number">-1</span>)/l;<span class="comment">//一个节点可能有重复的多个数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(tr[tr[id].r].sum&gt;sum)<span class="keyword">return</span> <span class="built_in">query</span>(tr[id].r,mid+<span class="number">1</span>,r,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(tr[id].l,l,mid,sum-tr[tr[id].r].sum)+tr[tr[id].r].num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> rt=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[i],<span class="number">1</span>);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> pos,t;</span><br><span class="line">        cin&gt;&gt;pos&gt;&gt;t;</span><br><span class="line">        <span class="keyword">if</span>(a[pos]&gt;<span class="number">0</span>)<span class="built_in">update</span>(rt,<span class="number">1</span>,inf,a[pos],<span class="number">-1</span>),cnt--;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;<span class="number">0</span>)<span class="built_in">update</span>(rt,<span class="number">1</span>,inf,t,<span class="number">1</span>),cnt++;</span><br><span class="line">        sum=sum-a[pos]+t;</span><br><span class="line">        a[pos]=t;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// cout&lt;&lt;sum&lt;&lt;&quot; &quot;&lt;&lt;cnt&lt;&lt;&quot; &quot;&lt;&lt;query(rt,1,inf,sum)&lt;&lt;&quot; &quot;;</span></span><br><span class="line">        cout&lt;&lt;cnt-<span class="built_in">query</span>(rt,<span class="number">1</span>,inf,sum)+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> dp </tag>
            
            <tag> bfs/dfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性神经网络(1)-线性回归的实现</title>
      <link href="/2024/03/14/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
      <url>/2024/03/14/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>对于特征集合 $\pmb X$ ，预测值 $\hat y$ ，可用矩阵向量乘法表示为：<br>$$<br>\hat{y}=\pmb Xw+b<br>$$<br>其中 $X$ 的每一行代表一条数据。</p><p>定义损失函数为：<br>$$<br>l^{(i)}(w,b)=\frac{1}{2}(\hat y^{(i)}-y^{(i)})^2<br>$$<br>为了降低损失，定义平均损失函数为：<br>$$<br>L(w,b)=\frac{1}{n}\sum l^{(i)}(w,b)=\frac{1}{n}\sum \frac{1}{2}(w^\mathrm Tx^{(i)}+b-y^{(i)})^2<br>$$<br>要求的即是：<br>$$<br>w^\ast,b^\ast=\arg \mathop{\min}\limits_{w,b} L(w,b)<br>$$<br>求解时利用随机梯度下降法解出 $w,b$ ：<br>$$<br>w\leftarrow w-\frac{\eta}{|\beta|}\sum\partial_{w}l^{(i)}(w,b)=w-\frac{\eta}{|\beta|}\sum x^{(i)}(w^\mathrm Tx^{(i)}+b-y^{(i)})<br>$$ { }</p><p>$$<br>b\leftarrow b-\frac{\eta}{|\beta|}\sum\partial_bl^{(i)}(w,b)=w-\frac{\eta}{|\beta|}\sum (w^\mathrm Tx^{(i)}+b-y^{(i)})<br>$$</p><p>$\beta$ 是选择的一个小样本，所有的 $i$ 都是来自 $\beta$ 。</p><h2 id="线性回归的实现-TensorFlow的高级API">线性回归的实现(TensorFlow的高级API)</h2><ol><li>生成、读取数据集；</li><li>定义模型；</li><li>定义损失函数、优化器；</li><li>设置超参数进行训练</li></ol><h3 id="生成数据集">生成数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> tensorflow <span class="keyword">as</span> d2l</span><br><span class="line"><span class="comment">###设定标准参数，生成数据集</span></span><br><span class="line">true_w = tf.constant([<span class="number">2</span>, -<span class="number">3.4</span>])</span><br><span class="line">true_b = <span class="number">4.2</span></span><br><span class="line"><span class="comment">###分别是x向量与y</span></span><br><span class="line">features, labels = d2l.synthetic_data(true_w, true_b, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h3 id="读取数据集">读取数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">load_array</span>(<span class="params">data_arrays, batch_size, is_train=<span class="literal">True</span></span>): </span><br><span class="line">    <span class="comment">###数据切片，每一条数据仅包含x与对应的y两个元组</span></span><br><span class="line">    dataset = tf.data.Dataset.from_tensor_slices(data_arrays)</span><br><span class="line">    <span class="comment">###是否打乱</span></span><br><span class="line">    <span class="keyword">if</span> is_train:</span><br><span class="line">        dataset = dataset.shuffle(buffer_size=<span class="number">1000</span>)</span><br><span class="line">    <span class="comment">###将dataset分成x和y两个元组，但是每个元组有batch个元素，多个元组构成dataset</span></span><br><span class="line">    dataset = dataset.batch(batch_size)</span><br><span class="line">    <span class="keyword">return</span> dataset</span><br><span class="line">    </span><br><span class="line"><span class="comment">###data_iter中每一项包含10条数据</span></span><br><span class="line">batch_size = <span class="number">10</span></span><br><span class="line">data_iter = load_array((features, labels), batch_size)</span><br></pre></td></tr></table></figure><h3 id="生成模型及操作">生成模型及操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###定义net为一个Sequential类的实例</span></span><br><span class="line"><span class="comment">###全连接层在dense定义，只需要一个输出</span></span><br><span class="line"><span class="comment">###初始化权重w为正态分布，偏置b为0</span></span><br><span class="line">initializer = tf.initializers.RandomNormal(stddev=<span class="number">0.01</span>)</span><br><span class="line">net = tf.keras.Sequential()</span><br><span class="line">net.add(tf.keras.layers.Dense(<span class="number">1</span>,kernel_initializer=initializer))</span><br><span class="line"><span class="comment">###此时并没有真正初始化，只有当输入第一组数据时才开始初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###定义损失函数平方范数</span></span><br><span class="line">loss = tf.keras.losses.MeanSquaredError()</span><br><span class="line"></span><br><span class="line"><span class="comment">###定义优化器为小批量随机梯度下降</span></span><br><span class="line">trainer = tf.keras.optimizers.SGD(learning_rate=<span class="number">0.03</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###训练</span></span><br><span class="line">num_epochs = <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> data_iter:</span><br><span class="line">        <span class="comment">###创建梯度带并跟踪其下的运算，一般把需要求梯度的量放在这下面</span></span><br><span class="line">        <span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape:</span><br><span class="line">            l = loss(net(X, training=<span class="literal">True</span>), y)</span><br><span class="line">        <span class="comment">###求出l关于w与b分别的梯度，net.trainable_variables包括权重与偏置</span></span><br><span class="line">        grads = tape.gradient(l, net.trainable_variables)</span><br><span class="line">        <span class="comment">###用优化器更新参数</span></span><br><span class="line">        trainer.apply_gradients(<span class="built_in">zip</span>(grads, net.trainable_variables))</span><br><span class="line">    l = loss(net(features), labels)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;epoch <span class="subst">&#123;epoch + <span class="number">1</span>&#125;</span>, loss <span class="subst">&#123;l:f&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###输出</span></span><br><span class="line">w = net.get_weights()[<span class="number">0</span>]</span><br><span class="line">b = net.get_weights()[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(w,<span class="string">&#x27;\n&#x27;</span>,b)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
          <category> 线性神经网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.1</title>
      <link href="/2024/03/11/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-10/"/>
      <url>/2024/03/11/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-10/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/509905">Dashboard - 3.10 周赛 - Codeforces</a></p><h2 id="A">A</h2><blockquote><p>题意：给出两个长为 $n$ 的字符串 $s$ ，$t$ ，找出满足如下的整数对 $(i,j)$ 的个数：子串 $s_is_{i+1}…s_l$ 字典序严格小于  $t_it_{i+1}…t_l$ 。</p></blockquote><p>若在某一位满足 $s_i&lt;t_i$ ，那么以 $i$ 为开头的所有整数对都满足；</p><p>若在连续多位 $s_i=t_i$ ，如果往后第一位不同的位上 $s_j&lt;t_j$ ，那么以 $i$ 开头，至少以 $j$ 结尾是可行的。</p><p>那么只需要统计 $s_i=t_i$ 是下一个最近的不等位的情况即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> p[<span class="number">200005</span>];</span><br><span class="line"><span class="type">int</span> nxt[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">200005</span>],t[<span class="number">200005</span>];</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==t[i])p[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&lt;t[i])p[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;t[i])p[i]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span>)tmp=i;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">-1</span>)tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">0</span>)nxt[i]=tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;p[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// for(int i=0;i&lt;n;i++)cout&lt;&lt;nxt[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">-1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">1</span>)ans+=n-i;</span><br><span class="line">        <span class="keyword">if</span>(p[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nxt[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> ans+=n-nxt[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：每轮游戏中有以下情况发生：</p><ol><li>BOSS可以选择吟唱Regeneration咒语</li><li>你可以选择吟唱Poison咒语</li><li>你可以用剑进行攻击，并造成XXX点伤害</li><li>所有负面效果生效</li></ol><p>每层Regeneration可叠加一层回复r，每层Poison可叠加一层毒p，若在boss发动Regeneration时发动Poison可以时Regeneration层数减一。告诉回合数与每回合BOSS是否Regeneration以及可以发动Poison的总次数，求BOSS减少的最大血量。</p></blockquote><p><s>太妙的贪心辣</s></p><p>以BOSS是否回血进行分段，可以得出以下结论：</p><ol><li>在BOSS回血的当回合采用Poison比在以后任一回合采用Poison更优；</li><li>在BOSS回血后的第一回合采用Poison比在第二回合采用Poison更优；</li></ol><p>故采用双指针，head指向第一个BOSS没回血的回合，tail指向第一个BOSS回血的回合，比较在哪个回合下毒贡献最大。后续head往后移到下一个回合，tail移到下一个BOSS回复的回合。多余的次数从头依次下毒。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,X,r,p,k;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> cnt,bos[N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld%lld%lld&quot;</span>,&amp;n,&amp;X,&amp;r,&amp;p,&amp;k);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">    ans=n*X;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(s[i]==<span class="string">&#x27;1&#x27;</span>)  ans-=(n-i+<span class="number">1</span>)*r;  </span><br><span class="line">    <span class="type">int</span> x=<span class="number">1</span>,y=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[y]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;y&lt;=n)  ++y;</span><br><span class="line">    <span class="keyword">while</span>(s[x]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;x&lt;=n)  ++x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> tot=<span class="number">1</span>;x&lt;=n+<span class="number">1</span>&amp;&amp;y&lt;=n+<span class="number">1</span>&amp;&amp;tot&lt;=k;++tot)&#123;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;(n-x+1)*p&lt;&lt;&quot; &quot;&lt;&lt;(n-y+1)*(p+r)&lt;&lt;&quot; &quot;&lt;&lt;tot&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>((n-x+<span class="number">1</span>)*p&lt;(n-y+<span class="number">1</span>)*(p+r))&#123;</span><br><span class="line">            ans+=(n-y+<span class="number">1</span>)*(p+r);</span><br><span class="line">            ++y;</span><br><span class="line">            <span class="keyword">while</span>(s[y]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;y&lt;=n)    ++y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans+=(n-x+<span class="number">1</span>)*p;</span><br><span class="line">            ++x;</span><br><span class="line">            <span class="keyword">while</span>(s[x]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;x&lt;=n)  ++x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：有 $2n$ 个点，每个点表示为 $(a_i,b_i)$ ，把它们分成 $n$ 对，使得 $\sum max(|a_i-a_j|,|a_i-b_j|,|b_i-a_j|,|b_i-b_j|$ 最大。</p></blockquote><p><s>真是 蠢死辣</s></p><p>保证每个点的 $a$ 大于 $b$ ，那么两个点的最大值即为 $max(a_i-b_j,a_j-b_i)$ ，若前项大于后项，移项得 $a_i+b_i&gt;a_j+b_j$ ，故按照和排序，前 $n$ 个点选 $a$ ，后 $n$ 个点选 $b$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    LL a, b;</span><br><span class="line">    LL sum;</span><br><span class="line">&#125;f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.sum &gt; y.sum) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n * <span class="number">2</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;f[i].a, &amp;f[i].b);</span><br><span class="line">         <span class="keyword">if</span>(f[i].a &lt; f[i].b) <span class="built_in">swap</span>(f[i].a, f[i].b);</span><br><span class="line">         f[i].sum = f[i].a + f[i].b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(f + <span class="number">1</span>, f + <span class="number">1</span> + <span class="number">2</span> * n, cmp);</span><br><span class="line">    <span class="comment">//for(int i =1; i &lt;= 2 * n; i ++) cout &lt;&lt; f[i].a &lt;&lt; &#x27; &#x27; &lt;&lt; f[i].b &lt;&lt; &#x27; &#x27; &lt;&lt; f[i].sum &lt;&lt; endl;</span></span><br><span class="line">    LL suma = <span class="number">0</span>, sumb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) suma += f[i].a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i ++) sumb += f[i].b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, suma - sumb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="J">J</h2><blockquote><p>题意： 将一个长 $2n$ 的只包含 $ABC$ 串分成 $n $ 个子串，相对顺序不变，但是分出来的子串只能是 $AB,BC,AC$ 三者之一。求是否可行并求分解方案。</p></blockquote><p><s>全是贪心哈哈</s></p><p>首先考虑把 $B$ 分配完。注意到条件特征， $B$ 既可以和 $A$ 结合，也可以和 $C$ 结合，那么当 $B$ 全部分配后剩下的 $A$ 和 $B$ 数量应该相等。将 $A$ ，$B$ ，$C$ 出现的下标分别储存下来，因为最后 $A$ ，$C$ 结合时要保证 $A$ 的下标要比 $B$ 小，故在处理 $B$ 时贪心策略如下：</p><ol><li>与 $A$ 结合时应尽量消去 $A$ 较大的元素，即用 $B$ 最大的元素去消去能消去的 $A$ 最大的元素。</li><li>与 $C$ 结合时应尽量消去 $C$ 较大的元素，即用 $B$ 最大的元素去消去能消去的 $C$ 最小的元素。</li><li>最后 $AC$ 依次配对。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">pragma</span> GCC optimize(3)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;ans;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt;A,B,C;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>, &amp;n, str + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n * <span class="number">2</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&#x27;A&#x27;</span>) A.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i] == <span class="string">&#x27;B&#x27;</span>) B.<span class="built_in">insert</span>(i);</span><br><span class="line">        <span class="keyword">else</span> C.<span class="built_in">insert</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cnt1 = A.<span class="built_in">size</span>(), cnt2 = B.<span class="built_in">size</span>(), cnt3 = C.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span>(cnt1 &gt; n || cnt3 &gt; n) <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> b1 = n - cnt1, b2 = n - cnt3;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; b1; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(B.<span class="built_in">begin</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = C.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(!C.<span class="built_in">empty</span>() &amp;&amp; it != C.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *it;</span><br><span class="line">                B.<span class="built_in">erase</span>(t), C.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;t, k&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; b2; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(--B.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = A.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(!A.<span class="built_in">empty</span>() &amp;&amp; it != A.<span class="built_in">begin</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *(-- it);</span><br><span class="line">                B.<span class="built_in">erase</span>(t), A.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;k, t&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;           </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ss = A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = *(A.<span class="built_in">begin</span>());</span><br><span class="line">            <span class="keyword">auto</span> it = C.<span class="built_in">lower_bound</span>(t);</span><br><span class="line">            <span class="keyword">if</span>(it != C.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> k = *(it);</span><br><span class="line">                A.<span class="built_in">erase</span>(t), C.<span class="built_in">erase</span>(k);</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;t, k&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> c : ans) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, c.first, c.second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="L">L</h2><blockquote><p>题意：给一个长度为 $3n$ 的只含有 $ABC$ 的字符串，现要得到的字符串中每个字母出现的次数均为 $n$ 次，可以进行如下操作：选择某个连续子串并将这个子串所有字母变成同一个字母。求最小操作方案。</p></blockquote><p><s>贪死我辣</s></p><p>首先可以想到最多操作两次。首先预处理某一位置之前每个字母出现次数。分为以下情况：</p><ol><li>不需要操作。</li><li>操作1次：将某一段子串变成某一字母后，另两种字母的数量均为 $n$ ，可以用双指针处理。</li><li>操作2次：当第一次某一字母出现 $n$ 次后，将后面的字符串直接变成对应数量另两种字母。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> cnt[N][<span class="number">4</span>];</span><br><span class="line"><span class="type">char</span> s[<span class="number">1000006</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">change1</span><span class="params">(<span class="type">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>) % <span class="number">3</span> + <span class="number">1</span>, y = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">2</span>) % <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>; l &lt;= <span class="number">3</span> * n; )&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) r = l;</span><br><span class="line">        <span class="keyword">while</span>((cnt[r][x] - cnt[l - <span class="number">1</span>][x] &lt; cnt[<span class="number">3</span> * n][x] - n || cnt[r][y] - cnt[l - <span class="number">1</span>][y] &lt; cnt[<span class="number">3</span> * n][y] - n) &amp;&amp; r &lt;= <span class="number">3</span> * n) r++;</span><br><span class="line">        <span class="keyword">if</span>(cnt[r][x] - cnt[l - <span class="number">1</span>][x] == cnt[<span class="number">3</span> * n][x] - n &amp;&amp; cnt[r][y] - cnt[l - <span class="number">1</span>][y] == cnt[<span class="number">3</span> * n][y] - n)&#123;</span><br><span class="line">            <span class="keyword">return</span> cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl &lt;&lt; l &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c &lt;&lt; endl, <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change2</span> <span class="params">(<span class="type">char</span> c, <span class="type">int</span> maxc)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">        <span class="type">int</span> x = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>) % <span class="number">3</span>, y = (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">2</span>) % <span class="number">3</span>;</span><br><span class="line">        <span class="type">char</span> X = x + <span class="string">&#x27;A&#x27;</span>, Y = y + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; maxc + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; maxc + n - cnt[maxc][x + <span class="number">1</span>]  &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; X &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; maxc + n - cnt[maxc][x + <span class="number">1</span>] + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">3</span> * n &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; Y &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>*n;i++)cin&gt;&gt;s[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span> * n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++) cnt[i][j] = cnt[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;A&#x27;</span>) cnt[i][<span class="number">1</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;B&#x27;</span>) cnt[i][<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;C&#x27;</span>) cnt[i][<span class="number">3</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cnt[<span class="number">3</span> * n][<span class="number">1</span>] == cnt[<span class="number">3</span> * n][<span class="number">2</span>] &amp;&amp; cnt[<span class="number">3</span> * n][<span class="number">2</span>] == n)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">change1</span>(<span class="string">&#x27;A&#x27;</span>) || <span class="built_in">change1</span>(<span class="string">&#x27;B&#x27;</span>) || <span class="built_in">change1</span>(<span class="string">&#x27;C&#x27;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// int maxc = 0;</span></span><br><span class="line">    <span class="comment">// char maxch;</span></span><br><span class="line">    <span class="comment">// for(int i = 1; i &lt;= 3 * n; i++) if(!maxc &amp;&amp; cnt[i][s[i]-&#x27;A&#x27; + 1] == n) maxc = i, maxch = s[i];</span></span><br><span class="line">    <span class="comment">// change2(maxch, maxc);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span> * n; i++) <span class="keyword">if</span>(cnt[i][s[i]-<span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>] == n)&#123;<span class="built_in">change2</span>(s[i], i);<span class="keyword">break</span>;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> greedy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reminder</title>
      <link href="/2024/03/11/ACM/Reminder/"/>
      <url>/2024/03/11/ACM/Reminder/</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>快读快写，ios。</p></div><div class="note warning modern"><p>注意memset中sizeof的用法。可以直接循环数组清零</p></div><div class="note warning modern"><p>在set中找元素不能用<code>lower_bound(C.begin(), C.end(), t)</code>，应该用<code>C.lower_bound(t)</code>。</p></div><div class="note danger modern"><p>注意数据范围。long long。一定要算清楚</p></div>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Appendix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.7</title>
      <link href="/2024/03/07/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-7/"/>
      <url>/2024/03/07/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-7/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/104821">Dashboard - The 2023 ICPC Asia Nanjing Regional Contest (The 2nd Universal Cup. Stage 11: Nanjing) - Codeforces</a></p><p><s>SUA牛逼</s></p><h2 id="A">A</h2><blockquote><p>题意：在一个 $n\times m$ 的网格中有很多洞，没有洞的位置上都有一只袋鼠，现在控制所有袋鼠上下左右移动，移出网格或到洞里就会淘汰，问对每一只袋鼠，能否存在一种操作序列使其成为最后一只袋鼠，求这样的袋鼠的数量。$n\times m\leq1000$</p></blockquote><p>一个比较难写的bfs。</p><p>对每个袋鼠，考虑它是否能将其他所有袋鼠都带进坑里，可用 $(i,j,i’,j’)$ 表示，在存储状态时将其哈希处理为 $S=n\times m\times n\times i+n\times m\times j+m\times i’+j’$ 。在bfs时，将某一初始状态能到达的所有位置都记录下初始位置进行剪枝，若以后的初始状态遍历过，那么就直接跳过。复杂度 $O(n^2\times m^2)$ 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXP 1000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, ans;</span><br><span class="line">vector&lt;string&gt; MAP;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[MAXP + <span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> vis[MAXP * MAXP + <span class="number">10</span>];</span><br><span class="line"><span class="type">bool</span> flag[MAXP * MAXP + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gao</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">        i * m * n * m +</span><br><span class="line">        j * n * m +</span><br><span class="line">        r * m +</span><br><span class="line">        c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ungao</span><span class="params">(<span class="type">int</span> msk, <span class="type">int</span> &amp;i, <span class="type">int</span> &amp;j, <span class="type">int</span> &amp;r, <span class="type">int</span> &amp;c)</span> </span>&#123;</span><br><span class="line">    i = msk / (m * n * m);</span><br><span class="line">    j = msk / (n * m) % m;</span><br><span class="line">    r = msk / m % n;</span><br><span class="line">    c = msk % m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">fall</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span> || i &gt;= n || j &gt;= m || MAP[i][j] == <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">short</span> dir[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> S)</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(S); vis[S] = S;</span><br><span class="line">    flag[S] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> i, j, r, c; <span class="built_in">ungao</span>(q.<span class="built_in">front</span>(), i, j, r, c); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">            <span class="type">int</span> ii = i + dir[k][<span class="number">0</span>], jj = j + dir[k][<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> rr = r + dir[k][<span class="number">0</span>], cc = c + dir[k][<span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fall</span>(ii, jj)) <span class="keyword">continue</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fall</span>(rr, cc)) &#123; flag[S] = <span class="literal">true</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">            <span class="type">int</span> nxt = <span class="built_in">gao</span>(ii, jj, rr, cc);</span><br><span class="line">            <span class="keyword">if</span> (vis[nxt] &gt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(nxt); vis[nxt] = S;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> r = <span class="number">0</span>; r &lt; n; r++) <span class="keyword">for</span> (<span class="type">int</span> c = <span class="number">0</span>; c &lt; m; c++) <span class="keyword">if</span> (MAP[r][c] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == r &amp;&amp; j == c) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> msk = <span class="built_in">gao</span>(i, j, r, c);</span><br><span class="line">        <span class="keyword">if</span> (vis[msk] == <span class="number">-1</span>) <span class="built_in">bfs</span>(msk);</span><br><span class="line">        <span class="keyword">if</span> (!flag[vis[msk]]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    MAP.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">        MAP.<span class="built_in">push_back</span>(<span class="built_in">string</span>(s));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">-1</span>, <span class="built_in">sizeof</span>(<span class="type">int</span>) * (n * m * n * m + <span class="number">3</span>));</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++) <span class="keyword">if</span> (MAP[i][j] == <span class="string">&#x27;.&#x27;</span>) ans += <span class="built_in">check</span>(i, j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> tcase; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tcase);</span><br><span class="line">    <span class="keyword">while</span> (tcase--) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="C">C</h2><blockquote><p>求不超过 $m$ 的 $g$ 的数量，其中 $g\bigoplus(P-1)\equiv1(mod P)$。</p></blockquote><p>化简后可得到 $g=(P-1)\bigoplus(kP+1)$ 。注意到：<br>$$<br>a-b\leq a\bigoplus b\leq a+b<br>$$<br>故：<br>$$<br>(k-1)P+2\leq g\leq(k+1)P<br>$$<br>因有 $m$ 的限制，得到当 $k$ 满足 $k\leq \lfloor\frac{m}{P}\rfloor-1$ 时一定满足，当 $k\geq \lceil\frac{m-2}{p}\rceil+1$ 时一定不满足。接下来只需要枚举这两个之间有无满足的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL p,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; p &gt;&gt; m;</span><br><span class="line"><span class="keyword">if</span>((m - <span class="number">2</span>) / p + <span class="number">1</span> &lt; <span class="number">0</span> )</span><br><span class="line"><span class="keyword">if</span>( <span class="number">1</span> ^ (p - <span class="number">1</span>) &lt;= m) cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> LL cnt1 = m / p;  </span><br><span class="line"><span class="keyword">for</span>(LL i = <span class="built_in">max</span>(<span class="number">0ll</span>, m / p) ; i &lt;= (m - <span class="number">2</span>) / p + <span class="number">1</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; ((i * p + 1) ^ (p - 1)) &lt;&lt; &#x27; &#x27; &lt;&lt; i &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span>(((LL)(i * p + <span class="number">1</span>) ^ (p - <span class="number">1</span>)) &lt;= m) cnt1  ++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cnt1 &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(T --) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：有一个长度为 $m$ 的序列初始为空，第 $i$ 次操作可以把一些数变成 $i$ ，问能否打乱操作顺序但是使最后的序列相同。</p></blockquote><p>对于每一个位置，所涉及的操作有先后顺序，最后该位的数字所涉及的操作需最后执行，用拓扑排序解决。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> din[N],dout[N];</span><br><span class="line"><span class="type">int</span> h[N],e[M],ne[M],idx;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> color[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;ver[N + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    unordered_set&lt;LL&gt;S;</span><br><span class="line">    idx = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)  h[i] = <span class="number">-1</span>, color[i] = din[i] = dout[i] = st[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) ver[i].<span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt;</span><br><span class="line">        cin &gt;&gt; cnt;</span><br><span class="line">        <span class="keyword">while</span>(cnt --)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> a;</span><br><span class="line">            cin &gt;&gt; a;</span><br><span class="line">            color[a] = i;</span><br><span class="line">            ver[a].<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = color[i];</span><br><span class="line">        <span class="keyword">if</span>(!color[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> c : ver[i]) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c &gt;= t) <span class="keyword">continue</span>;</span><br><span class="line">            LL hash = (LL)c * N + t;</span><br><span class="line">            <span class="keyword">if</span>(!S.<span class="built_in">count</span>(hash)) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">add</span>(c, t);</span><br><span class="line">                S.<span class="built_in">insert</span>(hash);</span><br><span class="line">                din[t] ++;</span><br><span class="line">                dout[c] ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;path;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">if</span>(!din[i])</span><br><span class="line">            q.<span class="built_in">push</span>(i);</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="type">int</span> tt = q.<span class="built_in">front</span>();</span><br><span class="line">            st[t] = st[tt] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(t &gt; tt) path.<span class="built_in">push_back</span>(t),path.<span class="built_in">push_back</span>(tt);</span><br><span class="line">            <span class="keyword">else</span> path.<span class="built_in">push_back</span>(tt), path.<span class="built_in">push_back</span>(t);</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        path.<span class="built_in">push_back</span>(t);</span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = h[t]; ~i; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span>(!(--din[j])) q.<span class="built_in">push</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> c : path) cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">            <span class="keyword">if</span>(!st[i]) cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T --) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种简化的思路，只要比较相邻两次操作能否交换即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> col[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; vec[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    vec[i].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)   col[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="type">int</span> p,u;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p);</span><br><span class="line">            <span class="keyword">while</span>(p--)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;u);</span><br><span class="line">                vec[i].<span class="built_in">push_back</span>(u);</span><br><span class="line">                col[u]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</span><br><span class="line">            <span class="type">int</span> mn=n+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> v:vec[i])&#123;</span><br><span class="line">                <span class="keyword">if</span>(col[v]==i)    <span class="keyword">continue</span>;</span><br><span class="line">                mn=<span class="built_in">min</span>(mn,col[v]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mn!=i+<span class="number">1</span>) &#123;</span><br><span class="line">                ans=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==ans)  <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>,i+<span class="number">1</span>,i),++i;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>   <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><p><s>真心没想到</s></p><blockquote><p>题意：在普通01背包的条件下添加附加条件：可以免费任选 $k $ 件物品，求最大价值。$n\leq 5000,W\leq 100000$ 。</p></blockquote><p>根据以下条件贪心：</p><ol><li>若某物品选择免费挑而不是买，那么一定这件物品更贵；</li><li>若挑选了物品 $A$ 而没有挑选 $B$ ，那么一定 $A$ 比 $B$ 价值高。</li></ol><p>因此贪心策略如下：</p><p>将所有物品按照价格排序，枚举分界点，在分界点前按照背包预处理答案，分界点后免费挑价值最大的 $k$ 件物品。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line">pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; a[<span class="number">500005</span>];</span><br><span class="line"><span class="type">int</span> tmp[<span class="number">500005</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i].first&gt;&gt;a[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    multiset&lt;<span class="type">int</span>&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp[i]=tmp[i+<span class="number">1</span>]+a[i].second;</span><br><span class="line">        s.<span class="built_in">insert</span>(a[i].second);</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">size</span>()&gt;k)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp[i]-=*s.<span class="built_in">begin</span>();</span><br><span class="line">            s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=a[i].first;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[j]=<span class="built_in">max</span>(dp[j],dp[j-a[i].first]+a[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// for(int i=0;i&lt;=m;i++)cout&lt;&lt;dp[i]&lt;&lt;&quot; &quot;;cout&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// cout&lt;&lt;i&lt;&lt;&#x27; &#x27;&lt;&lt;dp[m]&lt;&lt;&#x27; &#x27;&lt;&lt;tmp[i+1]&lt;&lt;endl;</span></span><br><span class="line">        ans=<span class="built_in">max</span>(ans,dp[m]+tmp[i+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="comment">// system(&quot;pause&quot;);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="L">L</h2><blockquote><p>题意：有很多重量只为1或2的包裹，他们需要运送到不同的楼层，每次电梯的最大载重量为 $k$ ，且 $k$ 为偶数，每一次运输消耗的电能是本次运输到达的最高楼层的层数。求最小电能。</p></blockquote><p>首先容易想到贪心思路：从高楼层开始运输，若电梯容量仅为1但下一个包裹为2，那么往后找第一个重量为1的包裹。</p><p>优化：将包裹都拆分成重量为1，直接从高楼层开始运输。</p><p>$proof:$ 注意到题目特殊条件 $k$ 为偶数。当容量仅为1时，若不将下一个重量为1的包裹提前，那么只可能在下一个重量为1的包裹之前会有影响：因这之间所有包裹重量均为2，故唯一的影响是所有包裹往前进1，不影响每次最大楼层，故贪心正确。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> K, ans;</span><br><span class="line">vector&lt;pii&gt; A;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%lld&quot;</span>, &amp;n, &amp;K);</span><br><span class="line"></span><br><span class="line">    A.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, y, z; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        <span class="comment">// 把所有大小为 2 的包裹拆成两个大小为 1 的包裹</span></span><br><span class="line">        A.<span class="built_in">push_back</span>(<span class="built_in">pii</span>(-z, x * y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 按楼层从高到低排序</span></span><br><span class="line">    <span class="built_in">sort</span>(A.<span class="built_in">begin</span>(), A.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// now：这一趟电梯的最高楼层</span></span><br><span class="line">    <span class="comment">// sm：现在电梯里已经放了多少包裹</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> now = -A[<span class="number">0</span>].first, sm = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 依次处理每种包裹</span></span><br><span class="line">    <span class="keyword">for</span> (pii p : A) &#123;</span><br><span class="line">        sm += p.second;</span><br><span class="line">        <span class="comment">// 新包裹的加入导致电梯里放了超过 K 个包裹</span></span><br><span class="line">        <span class="keyword">if</span> (sm &gt; K) &#123;</span><br><span class="line">            ans += now;</span><br><span class="line">            now = -p.first;</span><br><span class="line">            sm -= K;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 用除法快速处理同一种包裹</span></span><br><span class="line">            <span class="comment">// 这里分子是 sm - 1，是为了防止 sm % K == 0 的情况，导致 now 的值出错</span></span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> t = (sm - <span class="number">1</span>) / K;</span><br><span class="line">            ans += now * t;</span><br><span class="line">            sm -= t * K;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans += now;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> tcase; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tcase);</span><br><span class="line">    <span class="keyword">while</span> (tcase--) <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> greedy </tag>
            
            <tag> dp </tag>
            
            <tag> bfs/dfs </tag>
            
            <tag> topsort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cf 932 div.2 4/6</title>
      <link href="/2024/03/06/ACM/cf%E3%80%81atc/cf-932-div-2/"/>
      <url>/2024/03/06/ACM/cf%E3%80%81atc/cf-932-div-2/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/contest/1935">Dashboard - Codeforces Round 932 (Div. 2) - Codeforces</a></p><hr><h2 id="C">C</h2><blockquote><p>题意：给出一个数组包含 $n$ 个元素，每个元素包含 $a$、$b$ 两个元素，在这个数组中找出最多的元素并令其下标为 $p_1,…,p_k$ ，使得：</p><p><img src="/images/cf/1.png" alt=""></p><p>不超过 $l$ 。$n^2\leq 2 \times 10^6$</p></blockquote><ol><li>把数组按照 $b$ 从大到小排序后，$n^2$ 遍历 $b$ 项的开头 $st$ 与结尾 $ed$ ，可以证得当 $b$ 降序排列时得到的和最小。</li><li>用 $multiset$ 维护 $st$ 与 $ed$ 之间的 $a$ 的最大值。</li></ol><div class="note info modern"><p>不用担心在multiset中将ed元素的a值删除，因为删除后等效于ed位置提前，且b项的值还变大了，故不会影响答案统计</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;x,pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.second&gt;y.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,l;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;l;</span><br><span class="line">    pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;a[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i].first&gt;&gt;a[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        multiset&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=a[j].first;</span><br><span class="line">            q.<span class="built_in">insert</span>(a[j].first);</span><br><span class="line">            <span class="keyword">while</span>(q.<span class="built_in">size</span>() &amp;&amp; sum+a[i].second-a[j].second&gt;l)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mx=*q.<span class="built_in">rbegin</span>();</span><br><span class="line">                sum-=mx;</span><br><span class="line">                q.<span class="built_in">erase</span>(q.<span class="built_in">find</span>(mx));</span><br><span class="line">            &#125;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,(<span class="type">int</span>)q.<span class="built_in">size</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)<span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="D">D</h2><blockquote><p>题意：给出一个大小为 $n$ 的集合 $s$ 和整数 $c$ 。对于这个集合，计算出 $0\leq x\leq y\leq c$ ， $x+y$ 、$y-x$ 不包含在集合 $s$  中的整数对 $(x,y)$ 的数量。</p></blockquote><p>考虑容斥的思想，$ans(x,y)=cnt(x,y)-cnt(x,y,x+y\in s)-cnt(x,y,y-x\in s)+cnt(x,y,x+y\in s,y-x\in s)$。</p><ol><li>$cnt(x,y)=C_{c+1}^{2}+c+1=\frac{(c+1)(c+2)}{2}$</li><li>$cnt(x,y,x+y\in s)=\lfloor \frac{a_{i}}{2}\rfloor+1 $</li><li>$cnt(x,y,y-x\in s)=c-a_{i}+1$</li><li>$cnt(x,y,x+y\in s,y-x\in s)=\frac{even(even+1)}{2}+\frac{ood(odd+1)}{2}$</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long </span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n,c;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line">        <span class="type">int</span> a[n+<span class="number">5</span>];</span><br><span class="line">        <span class="type">int</span> ev=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> od=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans=(c+<span class="number">1</span>)*(c+<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">0</span>)ev++;</span><br><span class="line">            <span class="keyword">else</span> od++;</span><br><span class="line">            ans-=a[i]/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">            ans-=c-a[i]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=ev*(ev+<span class="number">1</span>)/<span class="number">2</span>+od*(od+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> Codeforces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.3</title>
      <link href="/2024/03/04/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-3/"/>
      <url>/2024/03/04/ACM/%E5%91%A8%E8%B5%9B/%E5%91%A8%E8%B5%9B3-3/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/508325">Dashboard - 2024.3.3 周赛 - Codeforces</a></p><hr><h2 id="C">C</h2><blockquote><p>题意：给出$p$，求整数对 $(a,b)$ 使得 $\frac{a}{b}=p$ 且 $\frac{a}{b},\frac{a+1}{b+1},\frac{a+2}{b+2}$ 均为整数。$p\leq10^{18}$</p></blockquote><p>通过数学化简后即为求满足以下条件的 $b$ ：$k\times(b+1)\times(b+2)=2\times(p-1),b+1|p-1$</p><p>关于求 $a\times b\times f(b)=p,p\leq10^{18}$ 时，可采用如下的方法：</p><ol><li>枚举 $a\in[1,\sqrt[3]p]$，使 $a$ 成为最小的值，然后手算出 $b$ 的值并判断是否满足条件。</li><li>枚举 $b\in[1,\sqrt[3]p]$， 使 $b$ 成为最小的值，然后判断 $a$ 是否满足条件。</li></ol><p>这种方法可以使时间复杂度为 $O(\sqrt[3]p)$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;LL&gt;ans;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; p;</span><br><span class="line">p = <span class="number">2</span>*(p <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL k = <span class="number">1</span>; k * k&lt;= <span class="number">9</span> * p / k; k ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p % k == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LL t = p / k;</span><br><span class="line"></span><br><span class="line">LL l = <span class="number">1</span>, r = t;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">LL mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>((mid + <span class="number">1</span>) &gt; t / (mid + <span class="number">2</span>)) r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( (r + <span class="number">1</span>) * (r + <span class="number">2</span>) == t)  </span><br><span class="line">&#123;</span><br><span class="line">LL b = r ;</span><br><span class="line"><span class="keyword">if</span>(p % (<span class="number">2</span> * b + <span class="number">2</span>)== <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL b = <span class="number">1</span>; (b + <span class="number">1</span>) * (b + <span class="number">1</span>) &lt;= <span class="number">9</span> * p / (b + <span class="number">1</span>); b ++)</span><br><span class="line">&#123;</span><br><span class="line">LL s = (b + <span class="number">1</span>) * (b + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(p % s == <span class="number">0</span> &amp;&amp; p % (<span class="number">2</span> * b + <span class="number">2</span>) == <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">ans.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>()), ans.<span class="built_in">end</span>());</span><br><span class="line">cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!ans.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> c : ans) cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T -- )<span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;); </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABC 343 7/7</title>
      <link href="/2024/03/03/ACM/cf%E3%80%81atc/AtCoder-ABC-343/"/>
      <url>/2024/03/03/ACM/cf%E3%80%81atc/AtCoder-ABC-343/</url>
      
        <content type="html"><![CDATA[<h2 id="E">E</h2><blockquote><p>题意：有三个7*7*7的立方体，问是否存在一种位置关系使得<strong>只</strong>被1个、2个、3个立方体覆盖的体积分别为$V_{1},V_{2},V_{3}$。</p></blockquote><p>令一个立方体的顶点坐标固定位$(0,0,0)$，枚举另两个立方体的顶点坐标范围。</p><div class="note warning modern"><p>第二个立方体的坐标是范围是$[0,14]$，第三个立方体的坐标范围是$[-7,14]$。</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v3</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2, <span class="type">int</span> a3, <span class="type">int</span> b3, <span class="type">int</span> c3)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(&#123;a1, a2, a3&#125;), a_min = <span class="built_in">min</span>(&#123;a1 + <span class="number">7</span>, a2 + <span class="number">7</span>, a3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(&#123;b1, b2, b3&#125;), b_min = <span class="built_in">min</span>(&#123;b1 + <span class="number">7</span>, b2 + <span class="number">7</span>, b3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(&#123;c1, c2, c3&#125;), c_min = <span class="built_in">min</span>(&#123;c1 + <span class="number">7</span>, c2 + <span class="number">7</span>, c3 + <span class="number">7</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v2</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(a1, a2), a_min = <span class="built_in">min</span>(a1 + <span class="number">7</span>, a2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(b1, b2), b_min = <span class="built_in">min</span>(b1 + <span class="number">7</span>, b2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(c1, c2), c_min = <span class="built_in">min</span>(c1 + <span class="number">7</span>, c2 + <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a1,<span class="type">int</span> b1,<span class="type">int</span> c1,<span class="type">int</span> a2,<span class="type">int</span> b2,<span class="type">int</span> c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cr3=<span class="built_in">calc_v3</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1,a2,b2,c2);</span><br><span class="line">    <span class="type">int</span> cr2=<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1)+<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a2,b2,c2)+<span class="built_in">calc_v2</span>(a1,b1,c1,a2,b2,c2)-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> cr1=<span class="number">7</span>*<span class="number">7</span>*<span class="number">7</span>*<span class="number">3</span>-cr2*<span class="number">2</span>-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(cr3==v3&amp;&amp;cr2==v2&amp;&amp;cr1==v1)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：给一个数组，支持两种操作：</p><p>$1\  p\ x$：将$a_{p}$改为$x$；</p><p>$2\ l \ r$：求出区间$[l,r]$的第二大的数的数量。</p></blockquote><p>用线段树维护，重点在于push_up的操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">t</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">int</span> mx[<span class="number">2</span>],cnt[<span class="number">2</span>];<span class="comment">//存储最大、第二大的数以及数量</span></span><br><span class="line">&#125;tr[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">t <span class="title">pushup</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,t x,t y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    mp[x.mx[<span class="number">0</span>]]+=x.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[x.mx[<span class="number">1</span>]]+=x.cnt[<span class="number">1</span>];</span><br><span class="line">    mp[y.mx[<span class="number">0</span>]]+=y.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[y.mx[<span class="number">1</span>]]+=y.cnt[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> it=mp.<span class="built_in">rbegin</span>();</span><br><span class="line"></span><br><span class="line">    t res;</span><br><span class="line">    res.l=l,res.r=r;</span><br><span class="line">    res.mx[<span class="number">0</span>]=it-&gt;first;</span><br><span class="line">    res.mx[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;first;</span><br><span class="line">    res.cnt[<span class="number">0</span>]=it-&gt;second;</span><br><span class="line">    res.cnt[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;second;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：给出$N\leq20$个字符串$S$，求字符串$T$的最小长度使得所有的$S_i$都是$T$的子串。</p></blockquote><p>首先用hash求出任两个字符串首尾相接能够消除的长度，然后考虑用状压dp计算答案。</p><p>设 $dp[i][j]$表示已选的字符串排列为 $i$ 且最后一个选的字符串时 $S_j$ 时的最小长度。</p><p>转移方程为：<br>$$<br>dp[state|1&lt;&lt;k][k]=max(dp[state|1&lt;&lt;k][k],dp[state][i]+dis[i][j])<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>, M = <span class="number">2e5</span> + <span class="number">1</span>, Base = <span class="number">29</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str[M + <span class="number">1</span>]; <span class="type">int</span> len[N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> powBase[M], hashy[N][M];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dis[N][N], dp[<span class="number">1</span> &lt;&lt; N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    powBase[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; M; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        powBase[i] = powBase[i - <span class="number">1</span>] * Base;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line">        len[i] = (<span class="type">int</span>)<span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= len[i]; ++j) </span><br><span class="line">        &#123;</span><br><span class="line">            hashy[i][j] = hashy[i][j - <span class="number">1</span>] * Base + str[j] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> del = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) </span><br><span class="line">        <span class="keyword">if</span> (i != j &amp;&amp; !(del &amp; <span class="number">1</span> &lt;&lt; j)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> leni = len[i], lenj = len[j];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// leni&gt;lenj</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= leni - lenj + <span class="number">1</span>; ++k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[i][k + lenj - <span class="number">1</span>] - hashy[i][k - <span class="number">1</span>] * powBase[lenj] == hashy[j][lenj]) </span><br><span class="line">                &#123;</span><br><span class="line">                    del |= <span class="number">1</span> &lt;&lt; j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (del &amp; <span class="number">1</span> &lt;&lt; j) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//d[i,j]表示i的后缀是j的前缀的最大长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = lenj - <span class="number">1</span>; k &gt;= <span class="number">0</span>; --k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[j][k] == hashy[i][leni] - hashy[i][leni - k] * powBase[k]) </span><br><span class="line">                &#123;</span><br><span class="line">                    dis[i][j] = lenj - k;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录有用的字符串</span></span><br><span class="line">    <span class="type">int</span> undel[N];</span><br><span class="line">    <span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i))undel[r++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    n = r;</span><br><span class="line">    <span class="type">int</span> all = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//dp[i,j]表示当前已选的排列为i时，再选第j个字符串的最小答案</span></span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        dp[<span class="number">1</span> &lt;&lt; i][i] = len[undel[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> state = <span class="number">1</span>; state &lt; all; ++state) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( !((state&gt;&gt;j)&amp;<span class="number">1</span>) )</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[state|<span class="number">1</span>&lt;&lt;j][j]=<span class="built_in">min</span>(dp[state|<span class="number">1</span>&lt;&lt;j][j],dp[state][i]+dis[undel[i]][undel[j]]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:dp[all])ans=<span class="built_in">min</span>(ans,i);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> AtCoder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
            <tag> data structure </tag>
            
            <tag> strings </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置hexo</title>
      <link href="/2024/03/01/%E9%85%8D%E7%BD%AEhexo/"/>
      <url>/2024/03/01/%E9%85%8D%E7%BD%AEhexo/</url>
      
        <content type="html"><![CDATA[<p>踩了好多坑。。。</p><p>服了。。。</p><h3 id="在文档中引用图片">在文档中引用图片</h3><blockquote><p>在source文件夹下单独建文件夹image存放图片，引用图片时用如下格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">text</span>](<span class="link">/images/foldername/filename</span>)</span><br></pre></td></tr></table></figure><p>在markdown中编译不出来，但能在hexo上显示</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p1.png" alt="图片设置"></p><p>编译时根目录在<strong>source</strong>文件夹，故直接在<strong>source</strong>下新建images文件夹，用相对路径引用即可。</p></blockquote><h3 id="建立图库">建立图库</h3><blockquote><h4 id="建立gallery-group">建立gallery group</h4><ol><li><p>建立图库时把图库当一个页面就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page gallery</span><br></pre></td></tr></table></figure></li><li><p>在gallery文件夹的index中先把type、top_img等改掉</p></li><li><p>在md文件下插入<code>html</code>代码块，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup &#x27;daily&#x27; &#x27;lovly moment&#x27; &#x27;/gallery/daily&#x27; https://pic.imgdb.cn/item/65e202a39f345e8d034511ee.jpg%&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>下载插件，在<code>front matter</code>中加入<code>password: </code>一项进行加密</p></li></ol><h4 id="建立gallery">建立gallery</h4><ol><li><p>在gallery文件夹下建立md，名称即为gallerygroup引用的名字。</p></li><li><p>在md中加入图片，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="加标签外挂">加标签外挂</h3><blockquote><p>在文章中直接用以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note mode modern %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><code>mode</code>可以是以下：</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p2.png" alt="mode形式"></p><p>效果如下</p></blockquote><div class="note success modern"><p>Yes you got it!</p></div>]]></content>
      
      
      <categories>
          
          <category> 基础环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
