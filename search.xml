<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3.3</title>
      <link href="/2024/03/04/%E5%91%A8%E8%B5%9B3-3/"/>
      <url>/2024/03/04/%E5%91%A8%E8%B5%9B3-3/</url>
      
        <content type="html"><![CDATA[<p>比赛链接：<a href="https://codeforces.com/gym/508325">Dashboard - 2024.3.3 周赛 - Codeforces</a></p><hr><h2 id="C">C</h2><blockquote><p>题意：给出$p$，求整数对 $(a,b)$ 使得 $\frac{a}{b}=p$ 且 $\frac{a}{b},\frac{a+1}{b+1},\frac{a+2}{b+2}$ 均为整数。$p\leq10^{18}$</p></blockquote><p>通过数学化简后即为求满足以下条件的 $b$ ：<br>$$<br>k*(b+1)<em>(b+2)=2</em>(p-1)，且p-1能被b+1整除<br>$$<br>关于求 $a<em>b</em>f(b)=p，p\leq10^{18}$ 时，可采用如下的方法：</p><ol><li>枚举 $a\in[1,\sqrt[3]p]$，使 $a$ 成为最小的值，然后手算出 $b$ 的值并判断是否满足条件。</li><li>枚举 $b\in[1,\sqrt[3]p]$， 使 $b$ 成为最小的值，然后判断 $a$ 是否满足条件。</li></ol><p>这种方法可以使时间复杂度为 $O(\sqrt[3]q)$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">LL p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;LL&gt;ans;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; p;</span><br><span class="line">p = <span class="number">2</span>*(p <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL k = <span class="number">1</span>; k * k&lt;= <span class="number">9</span> * p / k; k ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p % k == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LL t = p / k;</span><br><span class="line"></span><br><span class="line">LL l = <span class="number">1</span>, r = t;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">LL mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>((mid + <span class="number">1</span>) &gt; t / (mid + <span class="number">2</span>)) r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( (r + <span class="number">1</span>) * (r + <span class="number">2</span>) == t)  </span><br><span class="line">&#123;</span><br><span class="line">LL b = r ;</span><br><span class="line"><span class="keyword">if</span>(p % (<span class="number">2</span> * b + <span class="number">2</span>)== <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(LL b = <span class="number">1</span>; (b + <span class="number">1</span>) * (b + <span class="number">1</span>) &lt;= <span class="number">9</span> * p / (b + <span class="number">1</span>); b ++)</span><br><span class="line">&#123;</span><br><span class="line">LL s = (b + <span class="number">1</span>) * (b + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(p % s == <span class="number">0</span> &amp;&amp; p % (<span class="number">2</span> * b + <span class="number">2</span>) == <span class="number">0</span>) ans.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">ans.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>()), ans.<span class="built_in">end</span>());</span><br><span class="line">cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!ans.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> c : ans) cout &lt;&lt; c &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T -- )<span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">//system(&quot;pause&quot;); </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> 周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ABC 343 7/7</title>
      <link href="/2024/03/03/AtCoder-ABC-343/"/>
      <url>/2024/03/03/AtCoder-ABC-343/</url>
      
        <content type="html"><![CDATA[<h2 id="E">E</h2><blockquote><p>题意：有三个7*7*7的立方体，问是否存在一种位置关系使得<strong>只</strong>被1个、2个、3个立方体覆盖的体积分别为$V_{1},V_{2},V_{3}$。</p></blockquote><p>令一个立方体的顶点坐标固定位$(0,0,0)$，枚举另两个立方体的顶点坐标范围。</p><div class="note warning modern"><p>第二个立方体的坐标是范围是$[0,14]$，第三个立方体的坐标范围是$[-7,14]$。</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v3</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2, <span class="type">int</span> a3, <span class="type">int</span> b3, <span class="type">int</span> c3)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(&#123;a1, a2, a3&#125;), a_min = <span class="built_in">min</span>(&#123;a1 + <span class="number">7</span>, a2 + <span class="number">7</span>, a3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(&#123;b1, b2, b3&#125;), b_min = <span class="built_in">min</span>(&#123;b1 + <span class="number">7</span>, b2 + <span class="number">7</span>, b3 + <span class="number">7</span>&#125;);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(&#123;c1, c2, c3&#125;), c_min = <span class="built_in">min</span>(&#123;c1 + <span class="number">7</span>, c2 + <span class="number">7</span>, c3 + <span class="number">7</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc_v2</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a_max = <span class="built_in">max</span>(a1, a2), a_min = <span class="built_in">min</span>(a1 + <span class="number">7</span>, a2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> b_max = <span class="built_in">max</span>(b1, b2), b_min = <span class="built_in">min</span>(b1 + <span class="number">7</span>, b2 + <span class="number">7</span>);</span><br><span class="line">    <span class="type">int</span> c_max = <span class="built_in">max</span>(c1, c2), c_min = <span class="built_in">min</span>(c1 + <span class="number">7</span>, c2 + <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, a_min - a_max) * <span class="built_in">max</span>(<span class="number">0</span>, b_min - b_max) * <span class="built_in">max</span>(<span class="number">0</span>, c_min - c_max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a1,<span class="type">int</span> b1,<span class="type">int</span> c1,<span class="type">int</span> a2,<span class="type">int</span> b2,<span class="type">int</span> c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cr3=<span class="built_in">calc_v3</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1,a2,b2,c2);</span><br><span class="line">    <span class="type">int</span> cr2=<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a1,b1,c1)+<span class="built_in">calc_v2</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,a2,b2,c2)+<span class="built_in">calc_v2</span>(a1,b1,c1,a2,b2,c2)-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> cr1=<span class="number">7</span>*<span class="number">7</span>*<span class="number">7</span>*<span class="number">3</span>-cr2*<span class="number">2</span>-cr3*<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(cr3==v3&amp;&amp;cr2==v2&amp;&amp;cr1==v1)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F">F</h2><blockquote><p>题意：给一个数组，支持两种操作：</p><p>$1\  p\ x$：将$a_{p}$改为$x$；</p><p>$2\ l \ r$：求出区间$[l,r]$的第二大的数的数量。</p></blockquote><p>用线段树维护，重点在于push_up的操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">t</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">int</span> mx[<span class="number">2</span>],cnt[<span class="number">2</span>];<span class="comment">//存储最大、第二大的数以及数量</span></span><br><span class="line">&#125;tr[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">t <span class="title">pushup</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,t x,t y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    mp[x.mx[<span class="number">0</span>]]+=x.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[x.mx[<span class="number">1</span>]]+=x.cnt[<span class="number">1</span>];</span><br><span class="line">    mp[y.mx[<span class="number">0</span>]]+=y.cnt[<span class="number">0</span>];</span><br><span class="line">    mp[y.mx[<span class="number">1</span>]]+=y.cnt[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> it=mp.<span class="built_in">rbegin</span>();</span><br><span class="line"></span><br><span class="line">    t res;</span><br><span class="line">    res.l=l,res.r=r;</span><br><span class="line">    res.mx[<span class="number">0</span>]=it-&gt;first;</span><br><span class="line">    res.mx[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;first;</span><br><span class="line">    res.cnt[<span class="number">0</span>]=it-&gt;second;</span><br><span class="line">    res.cnt[<span class="number">1</span>]=<span class="built_in">next</span>(it)-&gt;second;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G">G</h2><blockquote><p>题意：给出$N\leq20$个字符串$S$，求字符串$T$的最小长度使得所有的$S_i$都是$T$的子串。</p></blockquote><p>首先用hash求出任两个字符串首尾相接能够消除的长度，然后考虑用状压dp计算答案。</p><p>设 $dp[i][j]$表示已选的字符串排列为 $i$ 且最后一个选的字符串时 $S_j$ 时的最小长度。</p><p>转移方程为：<br>$$<br>dp[state|1&lt;&lt;k][k]=max(dp[state|1&lt;&lt;k][k],dp[state][i]+dis[i][j])<br>$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>, M = <span class="number">2e5</span> + <span class="number">1</span>, Base = <span class="number">29</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str[M + <span class="number">1</span>]; <span class="type">int</span> len[N];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> powBase[M], hashy[N][M];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dis[N][N], dp[<span class="number">1</span> &lt;&lt; N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    powBase[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; M; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        powBase[i] = powBase[i - <span class="number">1</span>] * Base;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line">        len[i] = (<span class="type">int</span>)<span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= len[i]; ++j) </span><br><span class="line">        &#123;</span><br><span class="line">            hashy[i][j] = hashy[i][j - <span class="number">1</span>] * Base + str[j] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> del = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) </span><br><span class="line">        <span class="keyword">if</span> (i != j &amp;&amp; !(del &amp; <span class="number">1</span> &lt;&lt; j)) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> leni = len[i], lenj = len[j];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// leni&gt;lenj</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= leni - lenj + <span class="number">1</span>; ++k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[i][k + lenj - <span class="number">1</span>] - hashy[i][k - <span class="number">1</span>] * powBase[lenj] == hashy[j][lenj]) </span><br><span class="line">                &#123;</span><br><span class="line">                    del |= <span class="number">1</span> &lt;&lt; j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (del &amp; <span class="number">1</span> &lt;&lt; j) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//d[i,j]表示i的后缀是j的前缀的最大长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = lenj - <span class="number">1</span>; k &gt;= <span class="number">0</span>; --k) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hashy[j][k] == hashy[i][leni] - hashy[i][leni - k] * powBase[k]) </span><br><span class="line">                &#123;</span><br><span class="line">                    dis[i][j] = lenj - k;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//记录有用的字符串</span></span><br><span class="line">    <span class="type">int</span> undel[N];</span><br><span class="line">    <span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(del &amp; <span class="number">1</span> &lt;&lt; i))undel[r++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    n = r;</span><br><span class="line">    <span class="type">int</span> all = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//dp[i,j]表示当前已选的排列为i时，再选第j个字符串的最小答案</span></span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        dp[<span class="number">1</span> &lt;&lt; i][i] = len[undel[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> state = <span class="number">1</span>; state &lt; all; ++state) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; r; ++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( !((state&gt;&gt;j)&amp;<span class="number">1</span>) )</span><br><span class="line">                &#123;</span><br><span class="line">                    dp[state|<span class="number">1</span>&lt;&lt;j][j]=<span class="built_in">min</span>(dp[state|<span class="number">1</span>&lt;&lt;j][j],dp[state][i]+dis[undel[i]][undel[j]]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:dp[all])ans=<span class="built_in">min</span>(ans,i);</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> AtCoder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> segment tree </tag>
            
            <tag> strings </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置hexo</title>
      <link href="/2024/03/01/%E9%85%8D%E7%BD%AEhexo/"/>
      <url>/2024/03/01/%E9%85%8D%E7%BD%AEhexo/</url>
      
        <content type="html"><![CDATA[<p>踩了好多坑。。。</p><p>服了。。。</p><h3 id="在文档中引用图片"><a href="#在文档中引用图片" class="headerlink" title="在文档中引用图片"></a>在文档中引用图片</h3><blockquote><p>在source文件夹下单独建文件夹image存放图片，引用图片时用如下格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">text</span>](<span class="link">/images/foldername/filename</span>)</span><br></pre></td></tr></table></figure><p>在markdown中编译不出来，但能在hexo上显示</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p1.png" alt="图片设置"></p><p>编译时根目录在<strong>source</strong>文件夹，故直接在<strong>source</strong>下新建images文件夹，用相对路径引用即可。</p></blockquote><h3 id="建立图库"><a href="#建立图库" class="headerlink" title="建立图库"></a>建立图库</h3><blockquote><h4 id="建立gallery-group"><a href="#建立gallery-group" class="headerlink" title="建立gallery group"></a>建立gallery group</h4><ol><li><p>建立图库时把图库当一个页面就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page gallery</span><br></pre></td></tr></table></figure></li><li><p>在gallery文件夹的index中先把type、top_img等改掉</p></li><li><p>在md文件下插入<code>html</code>代码块，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup &#x27;daily&#x27; &#x27;lovly moment&#x27; &#x27;/gallery/daily&#x27; https://pic.imgdb.cn/item/65e202a39f345e8d034511ee.jpg%&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>下载插件，在<code>front matter</code>中加入<code>password: </code>一项进行加密</p></li></ol><h4 id="建立gallery"><a href="#建立gallery" class="headerlink" title="建立gallery"></a>建立gallery</h4><ol><li><p>在gallery文件夹下建立md，名称即为gallerygroup引用的名字。</p></li><li><p>在md中加入图片，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="加标签外挂"><a href="#加标签外挂" class="headerlink" title="加标签外挂"></a>加标签外挂</h3><blockquote><p>在文章中直接用以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note mode modern %&#125;</span><br><span class="line">提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><code>mode</code>可以是以下：</p><p><img src="/images/%E9%85%8D%E7%BD%AEhexo/p2.png" alt="mode形式"></p><p>效果如下</p></blockquote><div class="note success modern"><p>Yes you got it!</p></div>]]></content>
      
      
      <categories>
          
          <category> 基础环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
